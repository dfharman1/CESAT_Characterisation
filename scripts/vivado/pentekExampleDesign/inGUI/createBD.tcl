#*****************************************************************************************
# Vivado (TM) v2020.2_AR76242 (64-bit)
#
# createOriginalDesign.tcl: Tcl script for re-creating project 'p6003_2'
#
# Generated by Vivado on Mon Nov 27 13:59:42 GMT 2023
# IP Build 3064653 on Wed Nov 18 14:17:31 MST 2020
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (createOriginalDesign.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)
#
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/pdti2pctl.vhd"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/fifo_ctl_src_sel.vhd"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_common_wrapper.v"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_gt_gtye4_common_wrapper.v"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_reset_wrapper.v"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/gtwizard_ultrascale_v1_7_gtye4_common.v"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_shared_logic_wrapper.v"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/eth_100ge_ctl_stat.vhd"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/p6003_2.vhd"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2.xdc"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2_synth.xdc"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/utils_1/imports/impl_6/p6003_2_routed.dcp"
#    "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/bitworkaround.tcl"
#
# 3. The following remote source files that were added to the original project:-
#
#    <none>
#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/pdti2pctl.vhd" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/fifo_ctl_src_sel.vhd" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_common_wrapper.v" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_gt_gtye4_common_wrapper.v" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_reset_wrapper.v" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/gtwizard_ultrascale_v1_7_gtye4_common.v" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_shared_logic_wrapper.v" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/eth_100ge_ctl_stat.vhd" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/p6003_2.vhd" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2.xdc" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2_synth.xdc" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/utils_1/imports/impl_6/p6003_2_routed.dcp" \
   "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/bitworkaround.tcl" \
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }

  set paths [list \
   /home/fpga/Pentek/ip \
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "p6003_2"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "createOriginalDesign.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151"

# Check for paths and files needed for project creation
set validate_required 1
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu47dr-ffvg1517-1-i

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip.user_files_dir" -value "/home/fpga/Pentek/fdk/2019.2/p6003_2_27_rev5/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "ip_cache_permissions" -value "disable" -objects $obj
set_property -name "ip_output_repo" -value "C:/Pentek/FDK/2019.2/p6003_2_27_rev5/${_xil_proj_name_}.cache/ip" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "sim.central_dir" -value "/home/fpga/Pentek/fdk/2019.2/p6003_2_27_rev5/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "target_language" -value "VHDL" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "11" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "11" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "12" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "12" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "11" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "11" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "12" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "/home/fpga/Pentek/ip" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Import local files from the original project
set files [list \
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/pdti2pctl.vhd"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/fifo_ctl_src_sel.vhd"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_common_wrapper.v"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_gt_gtye4_common_wrapper.v"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_reset_wrapper.v"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/gtwizard_ultrascale_v1_7_gtye4_common.v"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_shared_logic_wrapper.v"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/eth_100ge_ctl_stat.vhd"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/p6003_2.vhd"\
]
set imported_files [import_files -fileset sources_1 $files]

# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
set file "new/pdti2pctl.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "new/fifo_ctl_src_sel.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "new/eth_100ge_ctl_stat.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj

set file "new/p6003_2.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "top" -value "p6003_2" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Set IP repository paths
set obj [get_filesets p6003]
if { $obj != {} } {
   set_property "ip_repo_paths" "/home/fpga/Pentek/ip" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}

# Set 'sources_1' fileset object
set obj [get_filesets sources_1]
# Set 'sources_1' fileset file properties for remote files
# None

# Set 'sources_1' fileset file properties for local files
# None

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/p6003_2.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "implementation" -objects $file_obj
set_property -name "used_in_synthesis" -value "0" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize "$origin_dir/../../../Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/constrs_1/new/p6003_2_synth.xdc"]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "new/p6003_2_synth.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj
set_property -name "used_in" -value "synthesis" -objects $file_obj
set_property -name "used_in_implementation" -value "0" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]
set_property -name "target_constrs_file" -value "[get_files *new/p6003_2.xdc]" -objects $obj
set_property -name "target_part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "target_ucf" -value "[get_files *new/p6003_2.xdc]" -objects $obj

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "hbs.configure_design_for_hier_access" -value "1" -objects $obj
set_property -name "top" -value "p6003_2" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Import local files from the original project
set files [list \
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/utils_1/imports/impl_6/p6003_2_routed.dcp"\
 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/bitworkaround.tcl"\
]
set imported_files [import_files -fileset utils_1 $files]

# Set 'utils_1' fileset file properties for remote files
# None

# Set 'utils_1' fileset file properties for local files
set file "impl_6/p6003_2_routed.dcp"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "netlist_only" -value "0" -objects $file_obj

set file "p6003_2_47_151/bitworkaround.tcl"
set file_obj [get_files -of_objects [get_filesets utils_1] [list "*$file"]]
set_property -name "file_type" -value "TCL" -objects $file_obj


# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added
if { [get_files pdti2pctl.vhd] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/pdti2pctl.vhd
}
if { [get_files fifo_ctl_src_sel.vhd] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/fifo_ctl_src_sel.vhd
}
if { [get_files fifo_ctl_src_sel.vhd] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/fifo_ctl_src_sel.vhd
}
if { [get_files cmac_usplus_0_common_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_common_wrapper.v
}
if { [get_files cmac_usplus_0_gt_gtye4_common_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_gt_gtye4_common_wrapper.v
}
if { [get_files cmac_usplus_0_reset_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_reset_wrapper.v
}
if { [get_files gtwizard_ultrascale_v1_7_gtye4_common.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/gtwizard_ultrascale_v1_7_gtye4_common.v
}
if { [get_files cmac_usplus_0_shared_logic_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_shared_logic_wrapper.v
}
if { [get_files eth_100ge_ctl_stat.vhd] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/eth_100ge_ctl_stat.vhd
}
if { [get_files cmac_usplus_0_common_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_common_wrapper.v
}
if { [get_files cmac_usplus_0_gt_gtye4_common_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_gt_gtye4_common_wrapper.v
}
if { [get_files cmac_usplus_0_reset_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_reset_wrapper.v
}
if { [get_files gtwizard_ultrascale_v1_7_gtye4_common.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/gtwizard_ultrascale_v1_7_gtye4_common.v
}
if { [get_files cmac_usplus_0_shared_logic_wrapper.v] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/imports/imports/cmac_usplus_0_shared_logic_wrapper.v
}
if { [get_files eth_100ge_ctl_stat.vhd] == "" } {
  import_files -quiet -fileset sources_1 /home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/new/eth_100ge_ctl_stat.vhd
}


# Proc to create BD p6003
proc cr_bd_p6003 { parentCell } {
# The design that will be created by this Tcl proc contains the following 
# module references:
# fifo_ctl_src_sel, fifo_ctl_src_sel, pdti2pctl, cmac_usplus_0_shared_logic_wrapper, eth_100ge_ctl_stat, cmac_usplus_0_shared_logic_wrapper, eth_100ge_ctl_stat



  # CHANGE DESIGN NAME HERE
  set design_name p6003

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  # Add USER_COMMENTS on $design_name
  set_property USER_COMMENTS.comment_0 "Enter Comments here" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_1 "Set up for INTRP=2 for <4GHz, INTRP= 4 for >4GHz" [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_2 "This example design was developed originally for the Gen1 RFSOC.
Because of this, it will only support real, and dec=2,4,and 8 at sample
rates below 4GHz. The modes are controlled via software be overriding
the bus width out of the ADC at run time to match the data rate without
changing the AXIS clock. The ADC formatter IP core then discards the
invalid portion of samples in the bus as a function of what the bus width
is set to and repacks the valid data.  This scheme only works for these
decimations and an 8 sample/cycle bus width.  In this application, to
support 5GHz rates would require a 12 sample bus and so is not possible
with the present example IP. 5GHz sample rates is only supported by this
design for dec=4 and dec=8.  Other modes will require the user replacing
this IP with their own custom IP.  5GHz sample rate is supported by
software orrerriding the ADC output clock division to divide by 16 instead of
8, thus allowing dec= 4 to use the whole eight sample width instead of a
four sample width." [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_3 "The Chrip Generator, as configured, is only
valid in interp=2 mode up to 4GHz and interp=4
above 4GHz. Other interpolations require changing
the samples/cycle parameter on the chirp generator IP core
and adjusting the width conversions and data padding
accordingly." [get_bd_designs $design_name]
  set_property USER_COMMENTS.comment_4 "The test signal generator, as configured, can only 
support real mode and sample rates up to 4GHz.
Complex modes are not supported. Operation above
4GHz requires 12 samples/cycle which is not possible
with this IP core." [get_bd_designs $design_name]

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:axis_register_slice:1.1\
  pentek.com:px_ip:px_s_axil_plc_hldr:1.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_subset_converter:1.1\
  xilinx.com:ip:axis_switch:1.1\
  pentek.com:px_ip:px_rf_dac_fmtr:1.0\
  xilinx.com:ip:clk_wiz:6.0\
  pentek.com:px_ip:px_axil_csr:1.0\
  pentek.com:px_ip:px_clock_frq_cntr:1.0\
  pentek.com:px_ip:px_pwron_rst:1.0\
  pentek.com:px_ip:px_rfsoc_syncbus_intrfc:1.2\
  pentek.com:px_ip:px_subset_vctr:1.1\
  pentek.com:px_ip:px_timestamp_gen_sgate:1.0\
  pentek.com:px_ip:px_xpm_cdc_async_rst:1.1\
  pentek.com:px_ip:px_rf_adc_cntl_stat:2.2\
  xilinx.com:ip:usp_rf_data_converter:2.4\
  pentek.com:px_ip:px_periodic_sig_cntr:1.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlconstant:1.1\
  pentek.com:px_ip:px_axis_pdti_mux:1.1\
  pentek.com:px_ip:px_pdti_dec16fir_8:1.1\
  pentek.com:px_ip:px_axis_pdti_upsizer:1.1\
  xilinx.com:ip:fifo_generator:13.2\
  pentek.com:px_ip:px_ppld2udp100ge_axis_axis_tx:1.1\
  pentek.com:px_ip:px_brd_info_regs:1.0\
  xilinx.com:ip:mailbox:2.1\
  xilinx.com:ip:pcie4c_uscale_plus:1.0\
  pentek.com:px_ip:px_axi4_2_pciepkt_256:1.0\
  pentek.com:px_ip:px_axil_addr_sub:1.1\
  pentek.com:px_ip:px_pcie2axil:1.1\
  pentek.com:px_ip:px_pcie4_cfg_ctl:1.0\
  pentek.com:px_ip:px_pcie_irq_ctlr:1.0\
  pentek.com:px_ip:px_pcie_link_stat:1.1\
  pentek.com:px_ip:px_pcie_rqrc_gskt:1.0\
  pentek.com:px_ip:px_axis_traffic_meter:1.0\
  xilinx.com:ip:blk_mem_gen:8.4\
  xilinx.com:ip:axi_bram_ctrl:4.1\
  xilinx.com:ip:util_ds_buf:2.1\
  xilinx.com:ip:axi_clock_converter:2.1\
  xilinx.com:ip:ddr4:2.2\
  xilinx.com:ip:axi_dwidth_converter:2.1\
  xilinx.com:ip:axi_intc:4.1\
  xilinx.com:ip:axi_register_slice:2.1\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:ip:zynq_ultra_ps_e:3.3\
  xilinx.com:ip:system_management_wiz:1.3\
  pentek.com:px_ip:px_axis_chirp_gen:1.1\
  xilinx.com:ip:axis_clock_converter:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:ip:axis_dwidth_converter:1.1\
  pentek.com:px_ip:px_axis_tdata_pad:1.0\
  pentek.com:px_ip:px_axis_compose:1.0\
  www.pentek.com:px_ip:px_test_sig_gen_16:1.0\
  pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1\
  pentek.com:px_ip:px_axil_2_drp:1.1\
  xilinx.com:ip:cmac_usplus:3.1\
  xilinx.com:ip:in_system_ibert:1.0\
  pentek.com:px_ip:px_100ge_arp_resp:1.0\
  pentek.com:px_ip:px_xpm_cdc_single_array:1.1\
  xilinx.com:ip:util_reduced_logic:2.0\
  pentek.com:px_ip:px_xpm_cdc_pulse:1.1\
  pentek.com:px_ip:px_dma_ppld2axi:1.0\
  pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0\
  pentek.com:px_ip:px_ppkt_width_upsizer:2.0\
  pentek.com:px_ip:px_axis_ppkt2ppld:1.0\
  pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  ##################################################################
  # CHECK Modules
  ##################################################################
  set bCheckModules 1
  if { $bCheckModules == 1 } {
     set list_check_mods "\ 
  fifo_ctl_src_sel\
  fifo_ctl_src_sel\
  pdti2pctl\
  cmac_usplus_0_shared_logic_wrapper\
  eth_100ge_ctl_stat\
  cmac_usplus_0_shared_logic_wrapper\
  eth_100ge_ctl_stat\
  "

   set list_mods_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2020 -severity "INFO" "Checking if the following modules exist in the project's sources: $list_check_mods ."

   foreach mod_vlnv $list_check_mods {
      if { [can_resolve_reference $mod_vlnv] == 0 } {
         lappend list_mods_missing $mod_vlnv
      }
   }

   if { $list_mods_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2021 -severity "ERROR" "The following module(s) are not found in the project: $list_mods_missing" }
      common::send_gid_msg -ssname BD::TCL -id 2022 -severity "INFO" "Please add source files for the missing module(s) above."
      set bCheckIPsPassed 0
   }
}

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: trig_acquire
proc create_hier_cell_trig_acquire_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_trig_acquire_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti


  # Create pins
  create_bd_pin -dir O ch0_flowctl_irq
  create_bd_pin -dir O ch1_flowctl_irq
  create_bd_pin -dir O ch2_flowctl_irq
  create_bd_pin -dir O ch3_flowctl_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_pdti_aclk
  create_bd_pin -dir I s_axis_pdti_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: axis_pdti2ppkt_0, and set properties
  set axis_pdti2ppkt_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_0 ]

  # Create instance: axis_pdti2ppkt_1, and set properties
  set axis_pdti2ppkt_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_1 ]

  # Create instance: axis_pdti2ppkt_2, and set properties
  set axis_pdti2ppkt_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_2 ]

  # Create instance: axis_pdti2ppkt_3, and set properties
  set axis_pdti2ppkt_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_3 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins axis_pdti2ppkt_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins axis_pdti2ppkt_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins axis_pdti2ppkt_3/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins axis_pdti2ppkt_2/s_axi_csr]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_0_m_axis_ppkt [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins axis_pdti2ppkt_0/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_1_m_axis_ppkt [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins axis_pdti2ppkt_1/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_2_m_axis_ppkt [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins axis_pdti2ppkt_2/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_3_m_axis_ppkt [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins axis_pdti2ppkt_3/m_axis_ppkt]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_adc0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins axis_pdti2ppkt_0/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_adc1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins axis_pdti2ppkt_1/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins axis_pdti2ppkt_2/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins axis_pdti2ppkt_3/s_axis_pdti]

  # Create port connections
  connect_bd_net -net axis_pdti2ppkt_0_irq [get_bd_pins ch0_flowctl_irq] [get_bd_pins axis_pdti2ppkt_0/irq]
  connect_bd_net -net axis_pdti2ppkt_1_irq [get_bd_pins ch1_flowctl_irq] [get_bd_pins axis_pdti2ppkt_1/irq]
  connect_bd_net -net axis_pdti2ppkt_2_irq [get_bd_pins ch2_flowctl_irq] [get_bd_pins axis_pdti2ppkt_2/irq]
  connect_bd_net -net axis_pdti2ppkt_3_irq [get_bd_pins ch3_flowctl_irq] [get_bd_pins axis_pdti2ppkt_3/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axis_pdti2ppkt_0/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_1/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_2/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_pdti2ppkt_0/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_1/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_2/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_3/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins axis_pdti2ppkt_0/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_1/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_2/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_3/s_axis_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins s_axis_pdti_aresetn] [get_bd_pins axis_pdti2ppkt_0/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_1/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_2/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_3/s_axis_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: payload_packetize
proc create_hier_cell_payload_packetize_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_payload_packetize_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir I ch0_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch0_override_pkt_size
  create_bd_pin -dir I ch0_override_pkt_size_en
  create_bd_pin -dir I ch1_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch1_override_pkt_size
  create_bd_pin -dir I ch1_override_pkt_size_en
  create_bd_pin -dir I ch2_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch2_override_pkt_size
  create_bd_pin -dir I ch2_override_pkt_size_en
  create_bd_pin -dir I ch3_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch3_override_pkt_size
  create_bd_pin -dir I ch3_override_pkt_size_en
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: pkt_fifo_0, and set properties
  set pkt_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_0

  # Create instance: pkt_fifo_1, and set properties
  set pkt_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_1 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_1

  # Create instance: pkt_fifo_2, and set properties
  set pkt_fifo_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_2 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_2

  # Create instance: pkt_fifo_3, and set properties
  set pkt_fifo_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_3 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_3

  # Create instance: ppkt_width_upsizer_0, and set properties
  set ppkt_width_upsizer_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_0 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_0

  # Create instance: ppkt_width_upsizer_1, and set properties
  set ppkt_width_upsizer_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_1 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_1

  # Create instance: ppkt_width_upsizer_2, and set properties
  set ppkt_width_upsizer_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_2 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_2

  # Create instance: ppkt_width_upsizer_3, and set properties
  set ppkt_width_upsizer_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_3 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_3

  # Create instance: px_axis_ppkt2ppld_0, and set properties
  set px_axis_ppkt2ppld_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_0 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_0

  # Create instance: px_axis_ppkt2ppld_1, and set properties
  set px_axis_ppkt2ppld_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_1 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_1

  # Create instance: px_axis_ppkt2ppld_2, and set properties
  set px_axis_ppkt2ppld_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_2 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_2

  # Create instance: px_axis_ppkt2ppld_3, and set properties
  set px_axis_ppkt2ppld_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_3 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_3

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axi_csr]
  connect_bd_intf_net -intf_net pkt_fifo_0_M_AXIS [get_bd_intf_pins pkt_fifo_0/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_1_M_AXIS [get_bd_intf_pins pkt_fifo_1/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_2_M_AXIS [get_bd_intf_pins pkt_fifo_2/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_3_M_AXIS [get_bd_intf_pins pkt_fifo_3/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axis_pktfifo]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_0_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_0/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_1_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_1/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_2_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_2/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_3_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_3/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axis_ppkt]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_0_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_0/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_0/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_0_m_axis_ppld [get_bd_intf_pins m_axis_ch0_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_0/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_1_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_1/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_1/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_1_m_axis_ppld [get_bd_intf_pins m_axis_ch1_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_1/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_2_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_2/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_2/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_2_m_axis_ppld [get_bd_intf_pins m_axis_ch2_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_2/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_3_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_3/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_3/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_3_m_axis_ppld [get_bd_intf_pins m_axis_ch3_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_3/m_axis_ppld]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins ppkt_width_upsizer_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins ppkt_width_upsizer_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins ppkt_width_upsizer_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins ppkt_width_upsizer_3/s_axis_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins pkt_fifo_0/s_aclk] [get_bd_pins pkt_fifo_1/s_aclk] [get_bd_pins pkt_fifo_2/s_aclk] [get_bd_pins pkt_fifo_3/s_aclk] [get_bd_pins ppkt_width_upsizer_0/aclk] [get_bd_pins ppkt_width_upsizer_1/aclk] [get_bd_pins ppkt_width_upsizer_2/aclk] [get_bd_pins ppkt_width_upsizer_3/aclk] [get_bd_pins px_axis_ppkt2ppld_0/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_1/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_2/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_3/axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins px_axis_ppkt2ppld_0/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_1/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_2/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_3/axis_aresetn]
  connect_bd_net -net ch0_fifo_rst_in_n_1 [get_bd_pins ch0_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_0/fifo_rst_in_n]
  connect_bd_net -net ch0_override_pkt_size_1 [get_bd_pins ch0_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_0/override_pkt_size]
  connect_bd_net -net ch0_override_pkt_size_en_1 [get_bd_pins ch0_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_0/override_pkt_size_en]
  connect_bd_net -net ch1_fifo_rst_in_n_1 [get_bd_pins ch1_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_1/fifo_rst_in_n]
  connect_bd_net -net ch1_override_pkt_size_1 [get_bd_pins ch1_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_1/override_pkt_size]
  connect_bd_net -net ch1_override_pkt_size_en_1 [get_bd_pins ch1_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_1/override_pkt_size_en]
  connect_bd_net -net ch2_fifo_rst_in_n_1 [get_bd_pins ch2_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_2/fifo_rst_in_n]
  connect_bd_net -net ch2_override_pkt_size_1 [get_bd_pins ch2_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_2/override_pkt_size]
  connect_bd_net -net ch2_override_pkt_size_en_1 [get_bd_pins ch2_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_2/override_pkt_size_en]
  connect_bd_net -net ch3_fifo_rst_in_n_1 [get_bd_pins ch3_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_3/fifo_rst_in_n]
  connect_bd_net -net ch3_override_pkt_size_1 [get_bd_pins ch3_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_3/override_pkt_size]
  connect_bd_net -net ch3_override_pkt_size_en_1 [get_bd_pins ch3_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_3/override_pkt_size_en]
  connect_bd_net -net px_axis_ppkt2ppld_0_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_0/s_aresetn] [get_bd_pins ppkt_width_upsizer_0/aresetn] [get_bd_pins px_axis_ppkt2ppld_0/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_1_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_1/s_aresetn] [get_bd_pins ppkt_width_upsizer_1/aresetn] [get_bd_pins px_axis_ppkt2ppld_1/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_2_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_2/s_aresetn] [get_bd_pins ppkt_width_upsizer_2/aresetn] [get_bd_pins px_axis_ppkt2ppld_2/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_3_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_3/s_aresetn] [get_bd_pins ppkt_width_upsizer_3/aresetn] [get_bd_pins px_axis_ppkt2ppld_3/m_axis_pktfifo_aresetn]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins px_axis_ppkt2ppld_0/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_1/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_2/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins px_axis_ppkt2ppld_0/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_1/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_2/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_3/s_axi_csr_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ge_arb_1
proc create_hier_cell_ge_arb_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ge_arb_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn

  # Create instance: axis_subset_conv_0, and set properties
  set axis_subset_conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_0 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_0

  # Create instance: axis_subset_conv_1, and set properties
  set axis_subset_conv_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_1 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_1

  # Create instance: axis_subset_conv_2, and set properties
  set axis_subset_conv_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_2 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_2

  # Create instance: axis_subset_conv_3, and set properties
  set axis_subset_conv_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_3 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_3

  # Create instance: ppld_arb, and set properties
  set ppld_arb [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 ppld_arb ]
  set_property -dict [ list \
   CONFIG.ARB_ALGORITHM {3} \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {4} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $ppld_arb

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {4} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_subset_conv_0_M_AXIS [get_bd_intf_pins axis_subset_conv_0/M_AXIS] [get_bd_intf_pins ppld_arb/S00_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_1_M_AXIS [get_bd_intf_pins axis_subset_conv_1/M_AXIS] [get_bd_intf_pins ppld_arb/S01_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_2_M_AXIS [get_bd_intf_pins axis_subset_conv_2/M_AXIS] [get_bd_intf_pins ppld_arb/S02_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_3_M_AXIS [get_bd_intf_pins axis_subset_conv_3/M_AXIS] [get_bd_intf_pins ppld_arb/S03_AXIS]
  connect_bd_intf_net -intf_net ppld_arb_M00_AXIS [get_bd_intf_pins m_axis_ppld] [get_bd_intf_pins ppld_arb/M00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins axis_subset_conv_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins axis_subset_conv_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins axis_subset_conv_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins axis_subset_conv_3/S_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axis_subset_conv_0/aclk] [get_bd_pins axis_subset_conv_1/aclk] [get_bd_pins axis_subset_conv_2/aclk] [get_bd_pins axis_subset_conv_3/aclk] [get_bd_pins ppld_arb/aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axis_subset_conv_0/aresetn] [get_bd_pins axis_subset_conv_1/aresetn] [get_bd_pins axis_subset_conv_2/aresetn] [get_bd_pins axis_subset_conv_3/aresetn] [get_bd_pins ppld_arb/aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins ppld_arb/s_req_suppress] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: fifo_storage
proc create_hier_cell_fifo_storage_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_fifo_storage_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_fifo_full_stat
  create_bd_pin -dir I ch0_fifo_resetn
  create_bd_pin -dir O ch0_fifo_rst_out_n
  create_bd_pin -dir O ch0_ufifo_irq
  create_bd_pin -dir O ch1_fifo_full_stat
  create_bd_pin -dir I ch1_fifo_resetn
  create_bd_pin -dir O ch1_fifo_rst_out_n
  create_bd_pin -dir O ch1_ufifo_irq
  create_bd_pin -dir O ch2_fifo_full_stat
  create_bd_pin -dir I ch2_fifo_resetn
  create_bd_pin -dir O ch2_fifo_rst_out_n
  create_bd_pin -dir O ch2_ufifo_irq
  create_bd_pin -dir O ch3_fifo_full_stat
  create_bd_pin -dir I ch3_fifo_resetn
  create_bd_pin -dir O ch3_fifo_rst_out_n
  create_bd_pin -dir O ch3_ufifo_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: ppkt_uram_fifo_0, and set properties
  set ppkt_uram_fifo_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_0 ]

  # Create instance: ppkt_uram_fifo_1, and set properties
  set ppkt_uram_fifo_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_1 ]

  # Create instance: ppkt_uram_fifo_2, and set properties
  set ppkt_uram_fifo_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_2 ]

  # Create instance: ppkt_uram_fifo_3, and set properties
  set ppkt_uram_fifo_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_3 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins ppkt_uram_fifo_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins ppkt_uram_fifo_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins ppkt_uram_fifo_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins ppkt_uram_fifo_3/s_axi_csr]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_0_m_axis_ppkt [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins ppkt_uram_fifo_0/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_1_m_axis_ppkt [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins ppkt_uram_fifo_1/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_2_m_axis_ppkt [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins ppkt_uram_fifo_2/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_3_m_axis_ppkt [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins ppkt_uram_fifo_3/m_axis_ppkt]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins ppkt_uram_fifo_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins ppkt_uram_fifo_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins ppkt_uram_fifo_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins ppkt_uram_fifo_3/s_axis_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins ppkt_uram_fifo_0/axis_aclk] [get_bd_pins ppkt_uram_fifo_1/axis_aclk] [get_bd_pins ppkt_uram_fifo_2/axis_aclk] [get_bd_pins ppkt_uram_fifo_3/axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins ppkt_uram_fifo_0/axis_aresetn] [get_bd_pins ppkt_uram_fifo_1/axis_aresetn] [get_bd_pins ppkt_uram_fifo_2/axis_aresetn] [get_bd_pins ppkt_uram_fifo_3/axis_aresetn]
  connect_bd_net -net ch0_fifo_resetn_1 [get_bd_pins ch0_fifo_resetn] [get_bd_pins ppkt_uram_fifo_0/fifo_resetn]
  connect_bd_net -net ch1_fifo_resetn_1 [get_bd_pins ch1_fifo_resetn] [get_bd_pins ppkt_uram_fifo_1/fifo_resetn]
  connect_bd_net -net ch2_fifo_resetn_1 [get_bd_pins ch2_fifo_resetn] [get_bd_pins ppkt_uram_fifo_2/fifo_resetn]
  connect_bd_net -net ch3_fifo_resetn_1 [get_bd_pins ch3_fifo_resetn] [get_bd_pins ppkt_uram_fifo_3/fifo_resetn]
  connect_bd_net -net ppkt_uram_fifo_0_fifo_ovfl_led [get_bd_pins ch0_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_0/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_0_fifo_reset_out_n [get_bd_pins ch0_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_0/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_0_irq [get_bd_pins ch0_ufifo_irq] [get_bd_pins ppkt_uram_fifo_0/irq]
  connect_bd_net -net ppkt_uram_fifo_1_fifo_ovfl_led [get_bd_pins ch1_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_1/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_1_fifo_reset_out_n [get_bd_pins ch1_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_1/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_1_irq [get_bd_pins ch1_ufifo_irq] [get_bd_pins ppkt_uram_fifo_1/irq]
  connect_bd_net -net ppkt_uram_fifo_2_fifo_ovfl_led [get_bd_pins ch2_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_2/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_2_fifo_reset_out_n [get_bd_pins ch2_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_2/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_2_irq [get_bd_pins ch2_ufifo_irq] [get_bd_pins ppkt_uram_fifo_2/irq]
  connect_bd_net -net ppkt_uram_fifo_3_fifo_ovfl_led [get_bd_pins ch3_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_3/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_3_fifo_reset_out_n [get_bd_pins ch3_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_3/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_3_irq [get_bd_pins ch3_ufifo_irq] [get_bd_pins ppkt_uram_fifo_3/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins ppkt_uram_fifo_0/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_1/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_2/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins ppkt_uram_fifo_0/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_1/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_2/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_3/s_axi_csr_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dma
proc create_hier_cell_dma_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dma_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir O adc_dma_4_irq
  create_bd_pin -dir O adc_dma_5_irq
  create_bd_pin -dir O adc_dma_6_irq
  create_bd_pin -dir O adc_dma_7_irq
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch0_payload_size_ctl
  create_bd_pin -dir O ch0_payload_size_ctl_en
  create_bd_pin -dir O ch1_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch1_payload_size_ctl
  create_bd_pin -dir O ch1_payload_size_ctl_en
  create_bd_pin -dir O ch2_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch2_payload_size_ctl
  create_bd_pin -dir O ch2_payload_size_ctl_en
  create_bd_pin -dir O ch3_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch3_payload_size_ctl
  create_bd_pin -dir O ch3_payload_size_ctl_en
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_intercon0, and set properties
  set axi_intercon0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_intercon0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {3} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {8} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_HAS_REGSLICE {1} \
   CONFIG.S02_HAS_REGSLICE {1} \
   CONFIG.S03_HAS_REGSLICE {1} \
   CONFIG.S04_HAS_REGSLICE {1} \
   CONFIG.S05_HAS_REGSLICE {1} \
   CONFIG.S06_HAS_REGSLICE {1} \
   CONFIG.S07_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: dma_ppld2axi_0, and set properties
  set dma_ppld2axi_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_0 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_0

  # Create instance: dma_ppld2axi_1, and set properties
  set dma_ppld2axi_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_1 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_1

  # Create instance: dma_ppld2axi_2, and set properties
  set dma_ppld2axi_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_2 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_2

  # Create instance: dma_ppld2axi_3, and set properties
  set dma_ppld2axi_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_3 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_3

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_1

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_2

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_3

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {3} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_intercon0/M00_AXI] [get_bd_intf_pins dma_ppld2axi_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI1 [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_intercon0/M01_AXI] [get_bd_intf_pins dma_ppld2axi_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_intercon0/M02_AXI] [get_bd_intf_pins dma_ppld2axi_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_intercon0/M03_AXI] [get_bd_intf_pins dma_ppld2axi_3/s_axi_csr]
  connect_bd_intf_net -intf_net dma_ppld2axi_0_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins dma_ppld2axi_0/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_0_m_axi_s2mm [get_bd_intf_pins axi_interconnect_0/S01_AXI] [get_bd_intf_pins dma_ppld2axi_0/m_axi_s2mm]
  connect_bd_intf_net -intf_net dma_ppld2axi_1_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S02_AXI] [get_bd_intf_pins dma_ppld2axi_1/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_1_m_axi_s2mm [get_bd_intf_pins axi_interconnect_0/S03_AXI] [get_bd_intf_pins dma_ppld2axi_1/m_axi_s2mm]
  connect_bd_intf_net -intf_net dma_ppld2axi_2_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S04_AXI] [get_bd_intf_pins dma_ppld2axi_2/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_2_m_axi_s2mm [get_bd_intf_pins axi_interconnect_0/S05_AXI] [get_bd_intf_pins dma_ppld2axi_2/m_axi_s2mm]
  connect_bd_intf_net -intf_net dma_ppld2axi_3_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S06_AXI] [get_bd_intf_pins dma_ppld2axi_3/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_3_m_axi_s2mm [get_bd_intf_pins axi_interconnect_0/S07_AXI] [get_bd_intf_pins dma_ppld2axi_3/m_axi_s2mm]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins dma_ppld2axi_0/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins dma_ppld2axi_1/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins dma_ppld2axi_2/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins dma_ppld2axi_3/s_axis_ppld]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axi_intercon0/M00_ACLK] [get_bd_pins axi_intercon0/M01_ACLK] [get_bd_pins axi_intercon0/M02_ACLK] [get_bd_pins axi_intercon0/M03_ACLK] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_0/S01_ACLK] [get_bd_pins axi_interconnect_0/S02_ACLK] [get_bd_pins axi_interconnect_0/S03_ACLK] [get_bd_pins axi_interconnect_0/S04_ACLK] [get_bd_pins axi_interconnect_0/S05_ACLK] [get_bd_pins axi_interconnect_0/S06_ACLK] [get_bd_pins axi_interconnect_0/S07_ACLK] [get_bd_pins dma_ppld2axi_0/aclk] [get_bd_pins dma_ppld2axi_1/aclk] [get_bd_pins dma_ppld2axi_2/aclk] [get_bd_pins dma_ppld2axi_3/aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axi_intercon0/M00_ARESETN] [get_bd_pins axi_intercon0/M01_ARESETN] [get_bd_pins axi_intercon0/M02_ARESETN] [get_bd_pins axi_intercon0/M03_ARESETN] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_0/S01_ARESETN] [get_bd_pins axi_interconnect_0/S02_ARESETN] [get_bd_pins axi_interconnect_0/S03_ARESETN] [get_bd_pins axi_interconnect_0/S04_ARESETN] [get_bd_pins axi_interconnect_0/S05_ARESETN] [get_bd_pins axi_interconnect_0/S06_ARESETN] [get_bd_pins axi_interconnect_0/S07_ARESETN] [get_bd_pins dma_ppld2axi_0/aresetn] [get_bd_pins dma_ppld2axi_0/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_1/aresetn] [get_bd_pins dma_ppld2axi_1/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_2/aresetn] [get_bd_pins dma_ppld2axi_2/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_3/aresetn] [get_bd_pins dma_ppld2axi_3/s_axi_csr_aresetn]
  connect_bd_net -net dma_ppld2axi_0_external_fifo_rstn [get_bd_pins ch0_external_fifo_rstn] [get_bd_pins dma_ppld2axi_0/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_0_irq [get_bd_pins adc_dma_4_irq] [get_bd_pins dma_ppld2axi_0/irq]
  connect_bd_net -net dma_ppld2axi_0_payload_size_ctl [get_bd_pins dma_ppld2axi_0/payload_size_ctl] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net dma_ppld2axi_0_payload_size_ctl_en [get_bd_pins ch0_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_0/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_1_external_fifo_rstn [get_bd_pins ch1_external_fifo_rstn] [get_bd_pins dma_ppld2axi_1/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_1_irq [get_bd_pins adc_dma_5_irq] [get_bd_pins dma_ppld2axi_1/irq]
  connect_bd_net -net dma_ppld2axi_1_payload_size_ctl [get_bd_pins dma_ppld2axi_1/payload_size_ctl] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net dma_ppld2axi_1_payload_size_ctl_en [get_bd_pins ch1_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_1/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_2_external_fifo_rstn [get_bd_pins ch2_external_fifo_rstn] [get_bd_pins dma_ppld2axi_2/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_2_irq [get_bd_pins adc_dma_6_irq] [get_bd_pins dma_ppld2axi_2/irq]
  connect_bd_net -net dma_ppld2axi_2_payload_size_ctl [get_bd_pins dma_ppld2axi_2/payload_size_ctl] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net dma_ppld2axi_2_payload_size_ctl_en [get_bd_pins ch2_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_2/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_3_external_fifo_rstn [get_bd_pins ch3_external_fifo_rstn] [get_bd_pins dma_ppld2axi_3/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_3_irq [get_bd_pins adc_dma_7_irq] [get_bd_pins dma_ppld2axi_3/irq]
  connect_bd_net -net dma_ppld2axi_3_payload_size_ctl [get_bd_pins dma_ppld2axi_3/payload_size_ctl] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net dma_ppld2axi_3_payload_size_ctl_en [get_bd_pins ch3_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_3/payload_size_ctl_en]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_intercon0/ACLK] [get_bd_pins axi_intercon0/S00_ACLK] [get_bd_pins dma_ppld2axi_0/irq_clk] [get_bd_pins dma_ppld2axi_1/irq_clk] [get_bd_pins dma_ppld2axi_2/irq_clk] [get_bd_pins dma_ppld2axi_3/irq_clk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_intercon0/ARESETN] [get_bd_pins axi_intercon0/S00_ARESETN]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins ch0_payload_size_ctl] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins ch1_payload_size_ctl] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins ch2_payload_size_ctl] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins ch3_payload_size_ctl] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_3/In1] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dest_route
proc create_hier_cell_dest_route_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dest_route_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3b_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I ch0_fifo_rst_in_n
  create_bd_pin -dir I ch1_fifo_rst_in_n
  create_bd_pin -dir I ch2_fifo_rst_in_n
  create_bd_pin -dir I ch3_fifo_rst_in_n

  # Create instance: dest_route_0, and set properties
  set dest_route_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_0 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_0

  # Create instance: dest_route_1, and set properties
  set dest_route_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_1 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_1

  # Create instance: dest_route_2, and set properties
  set dest_route_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_2 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_2

  # Create instance: dest_route_3, and set properties
  set dest_route_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_3 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_3

  # Create interface connections
  connect_bd_intf_net -intf_net dest_route_0_M00_AXIS [get_bd_intf_pins m_axis_ch0a_ppld] [get_bd_intf_pins dest_route_0/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_0_M01_AXIS [get_bd_intf_pins m_axis_ch0b_ppld] [get_bd_intf_pins dest_route_0/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_1_M00_AXIS [get_bd_intf_pins m_axis_ch1a_ppld] [get_bd_intf_pins dest_route_1/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_1_M01_AXIS [get_bd_intf_pins m_axis_ch1b_ppld] [get_bd_intf_pins dest_route_1/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_2_M00_AXIS [get_bd_intf_pins m_axis_ch2a_ppld] [get_bd_intf_pins dest_route_2/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_2_M01_AXIS [get_bd_intf_pins m_axis_ch2b_ppld] [get_bd_intf_pins dest_route_2/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_3_M00_AXIS [get_bd_intf_pins m_axis_ch3a_ppld] [get_bd_intf_pins dest_route_3/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_3_M01_AXIS [get_bd_intf_pins m_axis_ch3b_ppld] [get_bd_intf_pins dest_route_3/M01_AXIS]
  connect_bd_intf_net -intf_net m_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins dest_route_3/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins dest_route_0/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins dest_route_1/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins dest_route_2/S00_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins dest_route_0/aclk] [get_bd_pins dest_route_1/aclk] [get_bd_pins dest_route_2/aclk] [get_bd_pins dest_route_3/aclk]
  connect_bd_net -net ch0_fifo_rst_in_n_1 [get_bd_pins ch0_fifo_rst_in_n] [get_bd_pins dest_route_0/aresetn]
  connect_bd_net -net ch1_fifo_rst_in_n_1 [get_bd_pins ch1_fifo_rst_in_n] [get_bd_pins dest_route_1/aresetn]
  connect_bd_net -net ch2_fifo_rst_in_n_1 [get_bd_pins ch2_fifo_rst_in_n] [get_bd_pins dest_route_2/aresetn]
  connect_bd_net -net ch3_fifo_rst_in_n_1 [get_bd_pins ch3_fifo_rst_in_n] [get_bd_pins dest_route_3/aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: clk_conv
proc create_hier_cell_clk_conv_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_clk_conv_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir I ch0_fifo_resetn
  create_bd_pin -dir I ch1_fifo_resetn
  create_bd_pin -dir I ch2_fifo_resetn
  create_bd_pin -dir I ch3_fifo_resetn
  create_bd_pin -dir I s_axis_pdti_aclk

  # Create instance: axis_clock_conv_0, and set properties
  set axis_clock_conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_0

  # Create instance: axis_clock_conv_1, and set properties
  set axis_clock_conv_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_1

  # Create instance: axis_clock_conv_2, and set properties
  set axis_clock_conv_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_2

  # Create instance: axis_clock_conv_3, and set properties
  set axis_clock_conv_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_3

  # Create instance: cdc_async_rst_0, and set properties
  set cdc_async_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_0 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_0

  # Create instance: cdc_async_rst_1, and set properties
  set cdc_async_rst_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_1 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_1

  # Create instance: cdc_async_rst_2, and set properties
  set cdc_async_rst_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_2 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_2

  # Create instance: cdc_async_rst_3, and set properties
  set cdc_async_rst_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_3 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_conv_0_M_AXIS [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins axis_clock_conv_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_1_M_AXIS [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins axis_clock_conv_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_2_M_AXIS [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins axis_clock_conv_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_3_M_AXIS [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins axis_clock_conv_3/M_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins axis_clock_conv_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins axis_clock_conv_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins axis_clock_conv_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins axis_clock_conv_3/S_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axis_clock_conv_0/m_axis_aclk] [get_bd_pins axis_clock_conv_1/m_axis_aclk] [get_bd_pins axis_clock_conv_2/m_axis_aclk] [get_bd_pins axis_clock_conv_3/m_axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axis_clock_conv_0/m_axis_aresetn] [get_bd_pins axis_clock_conv_1/m_axis_aresetn] [get_bd_pins axis_clock_conv_2/m_axis_aresetn] [get_bd_pins axis_clock_conv_3/m_axis_aresetn]
  connect_bd_net -net cdc_async_rst_0_dest_arst [get_bd_pins axis_clock_conv_0/s_axis_aresetn] [get_bd_pins cdc_async_rst_0/dest_arst]
  connect_bd_net -net cdc_async_rst_1_dest_arst [get_bd_pins axis_clock_conv_1/s_axis_aresetn] [get_bd_pins cdc_async_rst_1/dest_arst]
  connect_bd_net -net cdc_async_rst_2_dest_arst [get_bd_pins axis_clock_conv_2/s_axis_aresetn] [get_bd_pins cdc_async_rst_2/dest_arst]
  connect_bd_net -net cdc_async_rst_3_dest_arst [get_bd_pins axis_clock_conv_3/s_axis_aresetn] [get_bd_pins cdc_async_rst_3/dest_arst]
  connect_bd_net -net ch0_fifo_resetn_1 [get_bd_pins ch0_fifo_resetn] [get_bd_pins cdc_async_rst_0/src_arst]
  connect_bd_net -net ch1_fifo_resetn_1 [get_bd_pins ch1_fifo_resetn] [get_bd_pins cdc_async_rst_1/src_arst]
  connect_bd_net -net ch2_fifo_resetn_1 [get_bd_pins ch2_fifo_resetn] [get_bd_pins cdc_async_rst_2/src_arst]
  connect_bd_net -net ch3_fifo_resetn_1 [get_bd_pins ch3_fifo_resetn] [get_bd_pins cdc_async_rst_3/src_arst]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins axis_clock_conv_0/s_axis_aclk] [get_bd_pins axis_clock_conv_1/s_axis_aclk] [get_bd_pins axis_clock_conv_2/s_axis_aclk] [get_bd_pins axis_clock_conv_3/s_axis_aclk] [get_bd_pins cdc_async_rst_0/dest_clk] [get_bd_pins cdc_async_rst_1/dest_clk] [get_bd_pins cdc_async_rst_2/dest_clk] [get_bd_pins cdc_async_rst_3/dest_clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: trig_acquire
proc create_hier_cell_trig_acquire { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_trig_acquire() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti


  # Create pins
  create_bd_pin -dir O ch0_flowctl_irq
  create_bd_pin -dir O ch1_flowctl_irq
  create_bd_pin -dir O ch2_flowctl_irq
  create_bd_pin -dir O ch3_flowctl_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_pdti_aclk
  create_bd_pin -dir I s_axis_pdti_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: axis_pdti2ppkt_0, and set properties
  set axis_pdti2ppkt_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_0 ]

  # Create instance: axis_pdti2ppkt_1, and set properties
  set axis_pdti2ppkt_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_1 ]

  # Create instance: axis_pdti2ppkt_2, and set properties
  set axis_pdti2ppkt_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_2 ]

  # Create instance: axis_pdti2ppkt_3, and set properties
  set axis_pdti2ppkt_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti2ppkt_16:1.1 axis_pdti2ppkt_3 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins axis_pdti2ppkt_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins axis_pdti2ppkt_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins axis_pdti2ppkt_3/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins axis_pdti2ppkt_2/s_axi_csr]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_0_m_axis_ppkt [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins axis_pdti2ppkt_0/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_1_m_axis_ppkt [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins axis_pdti2ppkt_1/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_2_m_axis_ppkt [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins axis_pdti2ppkt_2/m_axis_ppkt]
  connect_bd_intf_net -intf_net axis_pdti2ppkt_3_m_axis_ppkt [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins axis_pdti2ppkt_3/m_axis_ppkt]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_adc0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins axis_pdti2ppkt_0/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_adc1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins axis_pdti2ppkt_1/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins axis_pdti2ppkt_2/s_axis_pdti]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins axis_pdti2ppkt_3/s_axis_pdti]

  # Create port connections
  connect_bd_net -net axis_pdti2ppkt_0_irq [get_bd_pins ch0_flowctl_irq] [get_bd_pins axis_pdti2ppkt_0/irq]
  connect_bd_net -net axis_pdti2ppkt_1_irq [get_bd_pins ch1_flowctl_irq] [get_bd_pins axis_pdti2ppkt_1/irq]
  connect_bd_net -net axis_pdti2ppkt_2_irq [get_bd_pins ch2_flowctl_irq] [get_bd_pins axis_pdti2ppkt_2/irq]
  connect_bd_net -net axis_pdti2ppkt_3_irq [get_bd_pins ch3_flowctl_irq] [get_bd_pins axis_pdti2ppkt_3/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axis_pdti2ppkt_0/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_1/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_2/s_axi_csr_aclk] [get_bd_pins axis_pdti2ppkt_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_pdti2ppkt_0/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_1/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_2/s_axi_csr_aresetn] [get_bd_pins axis_pdti2ppkt_3/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins axis_pdti2ppkt_0/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_1/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_2/s_axis_aclk] [get_bd_pins axis_pdti2ppkt_3/s_axis_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins s_axis_pdti_aresetn] [get_bd_pins axis_pdti2ppkt_0/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_1/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_2/s_axis_aresetn] [get_bd_pins axis_pdti2ppkt_3/s_axis_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: payload_packetize
proc create_hier_cell_payload_packetize { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_payload_packetize() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir I ch0_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch0_override_pkt_size
  create_bd_pin -dir I ch0_override_pkt_size_en
  create_bd_pin -dir I ch1_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch1_override_pkt_size
  create_bd_pin -dir I ch1_override_pkt_size_en
  create_bd_pin -dir I ch2_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch2_override_pkt_size
  create_bd_pin -dir I ch2_override_pkt_size_en
  create_bd_pin -dir I ch3_fifo_rst_in_n
  create_bd_pin -dir I -from 16 -to 0 ch3_override_pkt_size
  create_bd_pin -dir I ch3_override_pkt_size_en
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: pkt_fifo_0, and set properties
  set pkt_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_0 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_0

  # Create instance: pkt_fifo_1, and set properties
  set pkt_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_1 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_1

  # Create instance: pkt_fifo_2, and set properties
  set pkt_fifo_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_2 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_2

  # Create instance: pkt_fifo_3, and set properties
  set pkt_fifo_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 pkt_fifo_3 ]
  set_property -dict [ list \
   CONFIG.Empty_Threshold_Assert_Value_axis {510} \
   CONFIG.Empty_Threshold_Assert_Value_rach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wach {14} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {14} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Common_Clock_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Common_Clock_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Common_Clock_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Common_Clock_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $pkt_fifo_3

  # Create instance: ppkt_width_upsizer_0, and set properties
  set ppkt_width_upsizer_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_0 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_0

  # Create instance: ppkt_width_upsizer_1, and set properties
  set ppkt_width_upsizer_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_1 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_1

  # Create instance: ppkt_width_upsizer_2, and set properties
  set ppkt_width_upsizer_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_2 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_2

  # Create instance: ppkt_width_upsizer_3, and set properties
  set ppkt_width_upsizer_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppkt_width_upsizer:2.0 ppkt_width_upsizer_3 ]
  set_property -dict [ list \
   CONFIG.OUT_WORD_WIDTH {32} \
   CONFIG.WORD_WIDTH {16} \
 ] $ppkt_width_upsizer_3

  # Create instance: px_axis_ppkt2ppld_0, and set properties
  set px_axis_ppkt2ppld_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_0 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_0

  # Create instance: px_axis_ppkt2ppld_1, and set properties
  set px_axis_ppkt2ppld_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_1 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_1

  # Create instance: px_axis_ppkt2ppld_2, and set properties
  set px_axis_ppkt2ppld_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_2 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_2

  # Create instance: px_axis_ppkt2ppld_3, and set properties
  set px_axis_ppkt2ppld_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt2ppld:1.0 px_axis_ppkt2ppld_3 ]
  set_property -dict [ list \
   CONFIG.has_override {true} \
   CONFIG.word_width {32} \
 ] $px_axis_ppkt2ppld_3

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axi_csr]
  connect_bd_intf_net -intf_net pkt_fifo_0_M_AXIS [get_bd_intf_pins pkt_fifo_0/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_1_M_AXIS [get_bd_intf_pins pkt_fifo_1/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_2_M_AXIS [get_bd_intf_pins pkt_fifo_2/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axis_pktfifo]
  connect_bd_intf_net -intf_net pkt_fifo_3_M_AXIS [get_bd_intf_pins pkt_fifo_3/M_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axis_pktfifo]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_0_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_0/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_1_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_1/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_2_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_2/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_width_upsizer_3_m_axis_ppkt [get_bd_intf_pins ppkt_width_upsizer_3/m_axis_ppkt] [get_bd_intf_pins px_axis_ppkt2ppld_3/s_axis_ppkt]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_0_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_0/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_0/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_0_m_axis_ppld [get_bd_intf_pins m_axis_ch0_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_0/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_1_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_1/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_1/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_1_m_axis_ppld [get_bd_intf_pins m_axis_ch1_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_1/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_2_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_2/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_2/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_2_m_axis_ppld [get_bd_intf_pins m_axis_ch2_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_2/m_axis_ppld]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_3_m_axis_pktfifo [get_bd_intf_pins pkt_fifo_3/S_AXIS] [get_bd_intf_pins px_axis_ppkt2ppld_3/m_axis_pktfifo]
  connect_bd_intf_net -intf_net px_axis_ppkt2ppld_3_m_axis_ppld [get_bd_intf_pins m_axis_ch3_ppld] [get_bd_intf_pins px_axis_ppkt2ppld_3/m_axis_ppld]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins ppkt_width_upsizer_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins ppkt_width_upsizer_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins ppkt_width_upsizer_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins ppkt_width_upsizer_3/s_axis_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins pkt_fifo_0/s_aclk] [get_bd_pins pkt_fifo_1/s_aclk] [get_bd_pins pkt_fifo_2/s_aclk] [get_bd_pins pkt_fifo_3/s_aclk] [get_bd_pins ppkt_width_upsizer_0/aclk] [get_bd_pins ppkt_width_upsizer_1/aclk] [get_bd_pins ppkt_width_upsizer_2/aclk] [get_bd_pins ppkt_width_upsizer_3/aclk] [get_bd_pins px_axis_ppkt2ppld_0/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_1/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_2/axis_aclk] [get_bd_pins px_axis_ppkt2ppld_3/axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins px_axis_ppkt2ppld_0/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_1/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_2/axis_aresetn] [get_bd_pins px_axis_ppkt2ppld_3/axis_aresetn]
  connect_bd_net -net ch0_fifo_rst_in_n_1 [get_bd_pins ch0_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_0/fifo_rst_in_n]
  connect_bd_net -net ch0_override_pkt_size_1 [get_bd_pins ch0_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_0/override_pkt_size]
  connect_bd_net -net ch0_override_pkt_size_en_1 [get_bd_pins ch0_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_0/override_pkt_size_en]
  connect_bd_net -net ch1_fifo_rst_in_n_1 [get_bd_pins ch1_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_1/fifo_rst_in_n]
  connect_bd_net -net ch1_override_pkt_size_1 [get_bd_pins ch1_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_1/override_pkt_size]
  connect_bd_net -net ch1_override_pkt_size_en_1 [get_bd_pins ch1_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_1/override_pkt_size_en]
  connect_bd_net -net ch2_fifo_rst_in_n_1 [get_bd_pins ch2_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_2/fifo_rst_in_n]
  connect_bd_net -net ch2_override_pkt_size_1 [get_bd_pins ch2_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_2/override_pkt_size]
  connect_bd_net -net ch2_override_pkt_size_en_1 [get_bd_pins ch2_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_2/override_pkt_size_en]
  connect_bd_net -net ch3_fifo_rst_in_n_1 [get_bd_pins ch3_fifo_rst_in_n] [get_bd_pins px_axis_ppkt2ppld_3/fifo_rst_in_n]
  connect_bd_net -net ch3_override_pkt_size_1 [get_bd_pins ch3_override_pkt_size] [get_bd_pins px_axis_ppkt2ppld_3/override_pkt_size]
  connect_bd_net -net ch3_override_pkt_size_en_1 [get_bd_pins ch3_override_pkt_size_en] [get_bd_pins px_axis_ppkt2ppld_3/override_pkt_size_en]
  connect_bd_net -net px_axis_ppkt2ppld_0_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_0/s_aresetn] [get_bd_pins ppkt_width_upsizer_0/aresetn] [get_bd_pins px_axis_ppkt2ppld_0/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_1_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_1/s_aresetn] [get_bd_pins ppkt_width_upsizer_1/aresetn] [get_bd_pins px_axis_ppkt2ppld_1/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_2_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_2/s_aresetn] [get_bd_pins ppkt_width_upsizer_2/aresetn] [get_bd_pins px_axis_ppkt2ppld_2/m_axis_pktfifo_aresetn]
  connect_bd_net -net px_axis_ppkt2ppld_3_m_axis_pktfifo_aresetn [get_bd_pins pkt_fifo_3/s_aresetn] [get_bd_pins ppkt_width_upsizer_3/aresetn] [get_bd_pins px_axis_ppkt2ppld_3/m_axis_pktfifo_aresetn]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins px_axis_ppkt2ppld_0/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_1/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_2/s_axi_csr_aclk] [get_bd_pins px_axis_ppkt2ppld_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins px_axis_ppkt2ppld_0/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_1/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_2/s_axi_csr_aresetn] [get_bd_pins px_axis_ppkt2ppld_3/s_axi_csr_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ge_arb
proc create_hier_cell_ge_arb { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ge_arb() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn

  # Create instance: axis_subset_conv_0, and set properties
  set axis_subset_conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_0 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_0

  # Create instance: axis_subset_conv_1, and set properties
  set axis_subset_conv_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_1 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_1

  # Create instance: axis_subset_conv_2, and set properties
  set axis_subset_conv_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_2 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_2

  # Create instance: axis_subset_conv_3, and set properties
  set axis_subset_conv_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_3 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {1} \
   CONFIG.M_HAS_TLAST {1} \
   CONFIG.M_HAS_TREADY {1} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {64} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {104} \
   CONFIG.S_HAS_TKEEP {1} \
   CONFIG.S_HAS_TLAST {1} \
   CONFIG.S_HAS_TREADY {1} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {64} \
   CONFIG.S_TDEST_WIDTH {1} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {104} \
   CONFIG.TDATA_REMAP {tdata[511:0]} \
   CONFIG.TKEEP_REMAP {tkeep[63:0]} \
   CONFIG.TLAST_REMAP {tlast[0]} \
   CONFIG.TUSER_REMAP {tuser[103:0]} \
 ] $axis_subset_conv_3

  # Create instance: ppld_arb, and set properties
  set ppld_arb [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 ppld_arb ]
  set_property -dict [ list \
   CONFIG.ARB_ALGORITHM {3} \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {4} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $ppld_arb

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {4} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_subset_conv_0_M_AXIS [get_bd_intf_pins axis_subset_conv_0/M_AXIS] [get_bd_intf_pins ppld_arb/S00_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_1_M_AXIS [get_bd_intf_pins axis_subset_conv_1/M_AXIS] [get_bd_intf_pins ppld_arb/S01_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_2_M_AXIS [get_bd_intf_pins axis_subset_conv_2/M_AXIS] [get_bd_intf_pins ppld_arb/S02_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_3_M_AXIS [get_bd_intf_pins axis_subset_conv_3/M_AXIS] [get_bd_intf_pins ppld_arb/S03_AXIS]
  connect_bd_intf_net -intf_net ppld_arb_M00_AXIS [get_bd_intf_pins m_axis_ppld] [get_bd_intf_pins ppld_arb/M00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins axis_subset_conv_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins axis_subset_conv_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins axis_subset_conv_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins axis_subset_conv_3/S_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axis_subset_conv_0/aclk] [get_bd_pins axis_subset_conv_1/aclk] [get_bd_pins axis_subset_conv_2/aclk] [get_bd_pins axis_subset_conv_3/aclk] [get_bd_pins ppld_arb/aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axis_subset_conv_0/aresetn] [get_bd_pins axis_subset_conv_1/aresetn] [get_bd_pins axis_subset_conv_2/aresetn] [get_bd_pins axis_subset_conv_3/aresetn] [get_bd_pins ppld_arb/aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins ppld_arb/s_req_suppress] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: fifo_storage
proc create_hier_cell_fifo_storage { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_fifo_storage() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_fifo_full_stat
  create_bd_pin -dir I ch0_fifo_resetn
  create_bd_pin -dir O ch0_fifo_rst_out_n
  create_bd_pin -dir O ch0_ufifo_irq
  create_bd_pin -dir O ch1_fifo_full_stat
  create_bd_pin -dir I ch1_fifo_resetn
  create_bd_pin -dir O ch1_fifo_rst_out_n
  create_bd_pin -dir O ch1_ufifo_irq
  create_bd_pin -dir O ch2_fifo_full_stat
  create_bd_pin -dir I ch2_fifo_resetn
  create_bd_pin -dir O ch2_fifo_rst_out_n
  create_bd_pin -dir O ch2_ufifo_irq
  create_bd_pin -dir O ch3_fifo_full_stat
  create_bd_pin -dir I ch3_fifo_resetn
  create_bd_pin -dir O ch3_fifo_rst_out_n
  create_bd_pin -dir O ch3_ufifo_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: ppkt_uram_fifo_0, and set properties
  set ppkt_uram_fifo_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_0 ]

  # Create instance: ppkt_uram_fifo_1, and set properties
  set ppkt_uram_fifo_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_1 ]

  # Create instance: ppkt_uram_fifo_2, and set properties
  set ppkt_uram_fifo_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_2 ]

  # Create instance: ppkt_uram_fifo_3, and set properties
  set ppkt_uram_fifo_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_ppkt_uram_fifo:1.0 ppkt_uram_fifo_3 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins ppkt_uram_fifo_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins ppkt_uram_fifo_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins ppkt_uram_fifo_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins ppkt_uram_fifo_3/s_axi_csr]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_0_m_axis_ppkt [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins ppkt_uram_fifo_0/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_1_m_axis_ppkt [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins ppkt_uram_fifo_1/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_2_m_axis_ppkt [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins ppkt_uram_fifo_2/m_axis_ppkt]
  connect_bd_intf_net -intf_net ppkt_uram_fifo_3_m_axis_ppkt [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins ppkt_uram_fifo_3/m_axis_ppkt]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins ppkt_uram_fifo_0/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins ppkt_uram_fifo_1/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins ppkt_uram_fifo_2/s_axis_ppkt]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins ppkt_uram_fifo_3/s_axis_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins ppkt_uram_fifo_0/axis_aclk] [get_bd_pins ppkt_uram_fifo_1/axis_aclk] [get_bd_pins ppkt_uram_fifo_2/axis_aclk] [get_bd_pins ppkt_uram_fifo_3/axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins ppkt_uram_fifo_0/axis_aresetn] [get_bd_pins ppkt_uram_fifo_1/axis_aresetn] [get_bd_pins ppkt_uram_fifo_2/axis_aresetn] [get_bd_pins ppkt_uram_fifo_3/axis_aresetn]
  connect_bd_net -net ch0_fifo_resetn_1 [get_bd_pins ch0_fifo_resetn] [get_bd_pins ppkt_uram_fifo_0/fifo_resetn]
  connect_bd_net -net ch1_fifo_resetn_1 [get_bd_pins ch1_fifo_resetn] [get_bd_pins ppkt_uram_fifo_1/fifo_resetn]
  connect_bd_net -net ch2_fifo_resetn_1 [get_bd_pins ch2_fifo_resetn] [get_bd_pins ppkt_uram_fifo_2/fifo_resetn]
  connect_bd_net -net ch3_fifo_resetn_1 [get_bd_pins ch3_fifo_resetn] [get_bd_pins ppkt_uram_fifo_3/fifo_resetn]
  connect_bd_net -net ppkt_uram_fifo_0_fifo_ovfl_led [get_bd_pins ch0_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_0/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_0_fifo_reset_out_n [get_bd_pins ch0_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_0/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_0_irq [get_bd_pins ch0_ufifo_irq] [get_bd_pins ppkt_uram_fifo_0/irq]
  connect_bd_net -net ppkt_uram_fifo_1_fifo_ovfl_led [get_bd_pins ch1_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_1/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_1_fifo_reset_out_n [get_bd_pins ch1_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_1/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_1_irq [get_bd_pins ch1_ufifo_irq] [get_bd_pins ppkt_uram_fifo_1/irq]
  connect_bd_net -net ppkt_uram_fifo_2_fifo_ovfl_led [get_bd_pins ch2_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_2/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_2_fifo_reset_out_n [get_bd_pins ch2_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_2/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_2_irq [get_bd_pins ch2_ufifo_irq] [get_bd_pins ppkt_uram_fifo_2/irq]
  connect_bd_net -net ppkt_uram_fifo_3_fifo_ovfl_led [get_bd_pins ch3_fifo_full_stat] [get_bd_pins ppkt_uram_fifo_3/fifo_ovfl_led]
  connect_bd_net -net ppkt_uram_fifo_3_fifo_reset_out_n [get_bd_pins ch3_fifo_rst_out_n] [get_bd_pins ppkt_uram_fifo_3/fifo_reset_out_n]
  connect_bd_net -net ppkt_uram_fifo_3_irq [get_bd_pins ch3_ufifo_irq] [get_bd_pins ppkt_uram_fifo_3/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins ppkt_uram_fifo_0/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_1/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_2/s_axi_csr_aclk] [get_bd_pins ppkt_uram_fifo_3/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins ppkt_uram_fifo_0/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_1/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_2/s_axi_csr_aresetn] [get_bd_pins ppkt_uram_fifo_3/s_axi_csr_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dma
proc create_hier_cell_dma { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dma() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir O adc_dma_0_irq
  create_bd_pin -dir O adc_dma_1_irq
  create_bd_pin -dir O adc_dma_2_irq
  create_bd_pin -dir O adc_dma_3_irq
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch0_payload_size_ctl
  create_bd_pin -dir O ch0_payload_size_ctl_en
  create_bd_pin -dir O ch1_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch1_payload_size_ctl
  create_bd_pin -dir O ch1_payload_size_ctl_en
  create_bd_pin -dir O ch2_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch2_payload_size_ctl
  create_bd_pin -dir O ch2_payload_size_ctl_en
  create_bd_pin -dir O ch3_external_fifo_rstn
  create_bd_pin -dir O -from 16 -to 0 ch3_payload_size_ctl
  create_bd_pin -dir O ch3_payload_size_ctl_en
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: axi_intercon0, and set properties
  set axi_intercon0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_intercon0

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {3} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {8} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_HAS_REGSLICE {1} \
   CONFIG.S02_HAS_REGSLICE {1} \
   CONFIG.S03_HAS_REGSLICE {1} \
   CONFIG.S04_HAS_REGSLICE {1} \
   CONFIG.S05_HAS_REGSLICE {1} \
   CONFIG.S06_HAS_REGSLICE {1} \
   CONFIG.S07_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: dma_ppld2axi_0, and set properties
  set dma_ppld2axi_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_0 ]
  set_property -dict [ list \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_0

  # Create instance: dma_ppld2axi_1, and set properties
  set dma_ppld2axi_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_1 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_1

  # Create instance: dma_ppld2axi_2, and set properties
  set dma_ppld2axi_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_2 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_2

  # Create instance: dma_ppld2axi_3, and set properties
  set dma_ppld2axi_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_dma_ppld2axi:1.0 dma_ppld2axi_3 ]
  set_property -dict [ list \
   CONFIG.channel_id {0} \
   CONFIG.channel_id_width {2} \
   CONFIG.data_axi_addr_width {40} \
   CONFIG.desc_axi_addr_width {40} \
 ] $dma_ppld2axi_3

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_0

  # Create instance: xlconcat_1, and set properties
  set xlconcat_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_1

  # Create instance: xlconcat_2, and set properties
  set xlconcat_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_2 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_2

  # Create instance: xlconcat_3, and set properties
  set xlconcat_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_3 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {14} \
   CONFIG.IN1_WIDTH {3} \
 ] $xlconcat_3

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {3} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net S03_AXI_1 [get_bd_intf_pins axi_interconnect_0/S03_AXI] [get_bd_intf_pins dma_ppld2axi_1/m_axi_s2mm]
  connect_bd_intf_net -intf_net S05_AXI_1 [get_bd_intf_pins axi_interconnect_0/S05_AXI] [get_bd_intf_pins dma_ppld2axi_2/m_axi_s2mm]
  connect_bd_intf_net -intf_net S07_AXI_1 [get_bd_intf_pins axi_interconnect_0/S07_AXI] [get_bd_intf_pins dma_ppld2axi_3/m_axi_s2mm]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_intercon0/M00_AXI] [get_bd_intf_pins dma_ppld2axi_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_intercon0/M01_AXI] [get_bd_intf_pins dma_ppld2axi_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_intercon0/M02_AXI] [get_bd_intf_pins dma_ppld2axi_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_intercon0/M03_AXI] [get_bd_intf_pins dma_ppld2axi_3/s_axi_csr]
  connect_bd_intf_net -intf_net dma_ppld2axi_0_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins dma_ppld2axi_0/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_0_m_axi_s2mm [get_bd_intf_pins axi_interconnect_0/S01_AXI] [get_bd_intf_pins dma_ppld2axi_0/m_axi_s2mm]
  connect_bd_intf_net -intf_net dma_ppld2axi_1_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S02_AXI] [get_bd_intf_pins dma_ppld2axi_1/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_2_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S04_AXI] [get_bd_intf_pins dma_ppld2axi_2/m_axi_descr]
  connect_bd_intf_net -intf_net dma_ppld2axi_3_m_axi_descr [get_bd_intf_pins axi_interconnect_0/S06_AXI] [get_bd_intf_pins dma_ppld2axi_3/m_axi_descr]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins dma_ppld2axi_0/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins dma_ppld2axi_1/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins dma_ppld2axi_2/s_axis_ppld]
  connect_bd_intf_net -intf_net s_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins dma_ppld2axi_3/s_axis_ppld]
  connect_bd_intf_net -intf_net smartconnect_0_M00_AXI [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins axi_interconnect_0/M00_AXI]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axi_intercon0/M00_ACLK] [get_bd_pins axi_intercon0/M01_ACLK] [get_bd_pins axi_intercon0/M02_ACLK] [get_bd_pins axi_intercon0/M03_ACLK] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_0/S01_ACLK] [get_bd_pins axi_interconnect_0/S02_ACLK] [get_bd_pins axi_interconnect_0/S03_ACLK] [get_bd_pins axi_interconnect_0/S04_ACLK] [get_bd_pins axi_interconnect_0/S05_ACLK] [get_bd_pins axi_interconnect_0/S06_ACLK] [get_bd_pins axi_interconnect_0/S07_ACLK] [get_bd_pins dma_ppld2axi_0/aclk] [get_bd_pins dma_ppld2axi_1/aclk] [get_bd_pins dma_ppld2axi_2/aclk] [get_bd_pins dma_ppld2axi_3/aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axi_intercon0/M00_ARESETN] [get_bd_pins axi_intercon0/M01_ARESETN] [get_bd_pins axi_intercon0/M02_ARESETN] [get_bd_pins axi_intercon0/M03_ARESETN] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_0/S01_ARESETN] [get_bd_pins axi_interconnect_0/S02_ARESETN] [get_bd_pins axi_interconnect_0/S03_ARESETN] [get_bd_pins axi_interconnect_0/S04_ARESETN] [get_bd_pins axi_interconnect_0/S05_ARESETN] [get_bd_pins axi_interconnect_0/S06_ARESETN] [get_bd_pins axi_interconnect_0/S07_ARESETN] [get_bd_pins dma_ppld2axi_0/aresetn] [get_bd_pins dma_ppld2axi_0/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_1/aresetn] [get_bd_pins dma_ppld2axi_1/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_2/aresetn] [get_bd_pins dma_ppld2axi_2/s_axi_csr_aresetn] [get_bd_pins dma_ppld2axi_3/aresetn] [get_bd_pins dma_ppld2axi_3/s_axi_csr_aresetn]
  connect_bd_net -net dma_ppld2axi_0_external_fifo_rstn [get_bd_pins ch0_external_fifo_rstn] [get_bd_pins dma_ppld2axi_0/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_0_irq [get_bd_pins adc_dma_0_irq] [get_bd_pins dma_ppld2axi_0/irq]
  connect_bd_net -net dma_ppld2axi_0_payload_size_ctl [get_bd_pins dma_ppld2axi_0/payload_size_ctl] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net dma_ppld2axi_0_payload_size_ctl_en [get_bd_pins ch0_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_0/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_1_external_fifo_rstn [get_bd_pins ch1_external_fifo_rstn] [get_bd_pins dma_ppld2axi_1/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_1_irq [get_bd_pins adc_dma_1_irq] [get_bd_pins dma_ppld2axi_1/irq]
  connect_bd_net -net dma_ppld2axi_1_payload_size_ctl [get_bd_pins dma_ppld2axi_1/payload_size_ctl] [get_bd_pins xlconcat_1/In0]
  connect_bd_net -net dma_ppld2axi_1_payload_size_ctl_en [get_bd_pins ch1_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_1/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_2_external_fifo_rstn [get_bd_pins ch2_external_fifo_rstn] [get_bd_pins dma_ppld2axi_2/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_2_irq [get_bd_pins adc_dma_2_irq] [get_bd_pins dma_ppld2axi_2/irq]
  connect_bd_net -net dma_ppld2axi_2_payload_size_ctl [get_bd_pins dma_ppld2axi_2/payload_size_ctl] [get_bd_pins xlconcat_2/In0]
  connect_bd_net -net dma_ppld2axi_2_payload_size_ctl_en [get_bd_pins ch2_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_2/payload_size_ctl_en]
  connect_bd_net -net dma_ppld2axi_3_external_fifo_rstn [get_bd_pins ch3_external_fifo_rstn] [get_bd_pins dma_ppld2axi_3/external_fifo_rstn]
  connect_bd_net -net dma_ppld2axi_3_irq [get_bd_pins adc_dma_3_irq] [get_bd_pins dma_ppld2axi_3/irq]
  connect_bd_net -net dma_ppld2axi_3_payload_size_ctl [get_bd_pins dma_ppld2axi_3/payload_size_ctl] [get_bd_pins xlconcat_3/In0]
  connect_bd_net -net dma_ppld2axi_3_payload_size_ctl_en [get_bd_pins ch3_payload_size_ctl_en] [get_bd_pins dma_ppld2axi_3/payload_size_ctl_en]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_intercon0/ACLK] [get_bd_pins axi_intercon0/S00_ACLK] [get_bd_pins dma_ppld2axi_0/irq_clk] [get_bd_pins dma_ppld2axi_1/irq_clk] [get_bd_pins dma_ppld2axi_2/irq_clk] [get_bd_pins dma_ppld2axi_3/irq_clk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_intercon0/ARESETN] [get_bd_pins axi_intercon0/S00_ARESETN]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins ch0_payload_size_ctl] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconcat_1_dout [get_bd_pins ch1_payload_size_ctl] [get_bd_pins xlconcat_1/dout]
  connect_bd_net -net xlconcat_2_dout [get_bd_pins ch2_payload_size_ctl] [get_bd_pins xlconcat_2/dout]
  connect_bd_net -net xlconcat_3_dout [get_bd_pins ch3_payload_size_ctl] [get_bd_pins xlconcat_3/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins xlconcat_0/In1] [get_bd_pins xlconcat_1/In1] [get_bd_pins xlconcat_2/In1] [get_bd_pins xlconcat_3/In1] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dest_route
proc create_hier_cell_dest_route { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dest_route() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2b_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3a_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3b_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppld


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I ch0_fifo_rst_in_n
  create_bd_pin -dir I ch1_fifo_rst_in_n
  create_bd_pin -dir I ch2_fifo_rst_in_n
  create_bd_pin -dir I ch3_fifo_rst_in_n

  # Create instance: dest_route_0, and set properties
  set dest_route_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_0 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_0

  # Create instance: dest_route_1, and set properties
  set dest_route_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_1 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_1

  # Create instance: dest_route_2, and set properties
  set dest_route_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_2 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_2

  # Create instance: dest_route_3, and set properties
  set dest_route_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dest_route_3 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TREADY {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.NUM_SI {1} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {1} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {104} \
 ] $dest_route_3

  # Create interface connections
  connect_bd_intf_net -intf_net dest_route_0_M00_AXIS [get_bd_intf_pins m_axis_ch0a_ppld] [get_bd_intf_pins dest_route_0/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_0_M01_AXIS [get_bd_intf_pins m_axis_ch0b_ppld] [get_bd_intf_pins dest_route_0/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_1_M00_AXIS [get_bd_intf_pins m_axis_ch1a_ppld] [get_bd_intf_pins dest_route_1/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_1_M01_AXIS [get_bd_intf_pins m_axis_ch1b_ppld] [get_bd_intf_pins dest_route_1/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_2_M00_AXIS [get_bd_intf_pins m_axis_ch2a_ppld] [get_bd_intf_pins dest_route_2/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_2_M01_AXIS [get_bd_intf_pins m_axis_ch2b_ppld] [get_bd_intf_pins dest_route_2/M01_AXIS]
  connect_bd_intf_net -intf_net dest_route_3_M00_AXIS [get_bd_intf_pins m_axis_ch3a_ppld] [get_bd_intf_pins dest_route_3/M00_AXIS]
  connect_bd_intf_net -intf_net dest_route_3_M01_AXIS [get_bd_intf_pins m_axis_ch3b_ppld] [get_bd_intf_pins dest_route_3/M01_AXIS]
  connect_bd_intf_net -intf_net m_axis_ch3_ppld_1 [get_bd_intf_pins s_axis_ch3_ppld] [get_bd_intf_pins dest_route_3/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppld_1 [get_bd_intf_pins s_axis_ch0_ppld] [get_bd_intf_pins dest_route_0/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppld_1 [get_bd_intf_pins s_axis_ch1_ppld] [get_bd_intf_pins dest_route_1/S00_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppld_1 [get_bd_intf_pins s_axis_ch2_ppld] [get_bd_intf_pins dest_route_2/S00_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins dest_route_0/aclk] [get_bd_pins dest_route_1/aclk] [get_bd_pins dest_route_2/aclk] [get_bd_pins dest_route_3/aclk]
  connect_bd_net -net ch0_fifo_rst_in_n_1 [get_bd_pins ch0_fifo_rst_in_n] [get_bd_pins dest_route_0/aresetn]
  connect_bd_net -net ch1_fifo_rst_in_n_1 [get_bd_pins ch1_fifo_rst_in_n] [get_bd_pins dest_route_1/aresetn]
  connect_bd_net -net ch2_fifo_rst_in_n_1 [get_bd_pins ch2_fifo_rst_in_n] [get_bd_pins dest_route_2/aresetn]
  connect_bd_net -net ch3_fifo_rst_in_n_1 [get_bd_pins ch3_fifo_rst_in_n] [get_bd_pins dest_route_3/aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: clk_conv
proc create_hier_cell_clk_conv { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_clk_conv() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_ppkt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_ppkt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_ppkt


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir I ch0_fifo_resetn
  create_bd_pin -dir I ch1_fifo_resetn
  create_bd_pin -dir I ch2_fifo_aresetn
  create_bd_pin -dir I ch3_fifo_resetn
  create_bd_pin -dir I s_axis_pdti_aclk

  # Create instance: axis_clock_conv_0, and set properties
  set axis_clock_conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_0

  # Create instance: axis_clock_conv_1, and set properties
  set axis_clock_conv_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_1

  # Create instance: axis_clock_conv_2, and set properties
  set axis_clock_conv_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_2

  # Create instance: axis_clock_conv_3, and set properties
  set axis_clock_conv_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_conv_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {80} \
 ] $axis_clock_conv_3

  # Create instance: cdc_async_rst_0, and set properties
  set cdc_async_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_0 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_0

  # Create instance: cdc_async_rst_1, and set properties
  set cdc_async_rst_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_1 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_1

  # Create instance: cdc_async_rst_2, and set properties
  set cdc_async_rst_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_2 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_2

  # Create instance: cdc_async_rst_3, and set properties
  set cdc_async_rst_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 cdc_async_rst_3 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $cdc_async_rst_3

  # Create interface connections
  connect_bd_intf_net -intf_net axis_clock_conv_0_M_AXIS [get_bd_intf_pins m_axis_ch0_ppkt] [get_bd_intf_pins axis_clock_conv_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_1_M_AXIS [get_bd_intf_pins m_axis_ch1_ppkt] [get_bd_intf_pins axis_clock_conv_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_2_M_AXIS [get_bd_intf_pins m_axis_ch2_ppkt] [get_bd_intf_pins axis_clock_conv_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_clock_conv_3_M_AXIS [get_bd_intf_pins m_axis_ch3_ppkt] [get_bd_intf_pins axis_clock_conv_3/M_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_ppkt_1 [get_bd_intf_pins s_axis_ch0_ppkt] [get_bd_intf_pins axis_clock_conv_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_ppkt_1 [get_bd_intf_pins s_axis_ch1_ppkt] [get_bd_intf_pins axis_clock_conv_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_ppkt_1 [get_bd_intf_pins s_axis_ch2_ppkt] [get_bd_intf_pins axis_clock_conv_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_ppkt_1 [get_bd_intf_pins s_axis_ch3_ppkt] [get_bd_intf_pins axis_clock_conv_3/S_AXIS]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axis_clock_conv_0/m_axis_aclk] [get_bd_pins axis_clock_conv_1/m_axis_aclk] [get_bd_pins axis_clock_conv_2/m_axis_aclk] [get_bd_pins axis_clock_conv_3/m_axis_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axis_clock_conv_0/m_axis_aresetn] [get_bd_pins axis_clock_conv_1/m_axis_aresetn] [get_bd_pins axis_clock_conv_2/m_axis_aresetn] [get_bd_pins axis_clock_conv_3/m_axis_aresetn]
  connect_bd_net -net cdc_async_rst_1_dest_arst [get_bd_pins axis_clock_conv_1/s_axis_aresetn] [get_bd_pins cdc_async_rst_1/dest_arst]
  connect_bd_net -net cdc_async_rst_2_dest_arst [get_bd_pins axis_clock_conv_2/s_axis_aresetn] [get_bd_pins cdc_async_rst_2/dest_arst]
  connect_bd_net -net cdc_async_rst_3_dest_arst [get_bd_pins axis_clock_conv_3/s_axis_aresetn] [get_bd_pins cdc_async_rst_3/dest_arst]
  connect_bd_net -net ch0_fifo_resetn_1 [get_bd_pins ch0_fifo_resetn] [get_bd_pins cdc_async_rst_0/src_arst]
  connect_bd_net -net ch1_fifo_resetn_1 [get_bd_pins ch1_fifo_resetn] [get_bd_pins cdc_async_rst_1/src_arst]
  connect_bd_net -net ch2_fifo_aresetn_1 [get_bd_pins ch2_fifo_aresetn] [get_bd_pins cdc_async_rst_2/src_arst]
  connect_bd_net -net ch3_fifo_resetn_1 [get_bd_pins ch3_fifo_resetn] [get_bd_pins cdc_async_rst_3/src_arst]
  connect_bd_net -net px_xpm_cdc_async_rst_0_dest_arst [get_bd_pins axis_clock_conv_0/s_axis_aresetn] [get_bd_pins cdc_async_rst_0/dest_arst]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins axis_clock_conv_0/s_axis_aclk] [get_bd_pins axis_clock_conv_1/s_axis_aclk] [get_bd_pins axis_clock_conv_2/s_axis_aclk] [get_bd_pins axis_clock_conv_3/s_axis_aclk] [get_bd_pins cdc_async_rst_0/dest_clk] [get_bd_pins cdc_async_rst_1/dest_clk] [get_bd_pins cdc_async_rst_2/dest_clk] [get_bd_pins cdc_async_rst_3/dest_clk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: irq_cdc
proc create_hier_cell_irq_cdc { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_irq_cdc() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type clk dest_clk
  create_bd_pin -dir I -from 7 -to 0 irq
  create_bd_pin -dir O -from 7 -to 0 irq_out
  create_bd_pin -dir I -type clk s_axi_csr_aclk

  # Create instance: px_subset_vctr_0, and set properties
  set px_subset_vctr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_0 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {0} \
   CONFIG.out_start_index {0} \
 ] $px_subset_vctr_0

  # Create instance: px_subset_vctr_1, and set properties
  set px_subset_vctr_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_1 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {1} \
   CONFIG.out_start_index {1} \
 ] $px_subset_vctr_1

  # Create instance: px_subset_vctr_2, and set properties
  set px_subset_vctr_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_2 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {2} \
   CONFIG.out_start_index {2} \
 ] $px_subset_vctr_2

  # Create instance: px_subset_vctr_3, and set properties
  set px_subset_vctr_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_3 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {3} \
   CONFIG.out_start_index {3} \
 ] $px_subset_vctr_3

  # Create instance: px_subset_vctr_4, and set properties
  set px_subset_vctr_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_4 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {4} \
   CONFIG.out_start_index {4} \
 ] $px_subset_vctr_4

  # Create instance: px_subset_vctr_5, and set properties
  set px_subset_vctr_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_5 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {5} \
   CONFIG.out_start_index {5} \
 ] $px_subset_vctr_5

  # Create instance: px_subset_vctr_6, and set properties
  set px_subset_vctr_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_6 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {6} \
   CONFIG.out_start_index {6} \
 ] $px_subset_vctr_6

  # Create instance: px_subset_vctr_7, and set properties
  set px_subset_vctr_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_7 ]
  set_property -dict [ list \
   CONFIG.in_vector_length {8} \
   CONFIG.out_end_index {7} \
   CONFIG.out_start_index {7} \
 ] $px_subset_vctr_7

  # Create instance: px_xpm_cdc_pulse_0, and set properties
  set px_xpm_cdc_pulse_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_0 ]

  # Create instance: px_xpm_cdc_pulse_1, and set properties
  set px_xpm_cdc_pulse_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_1 ]

  # Create instance: px_xpm_cdc_pulse_2, and set properties
  set px_xpm_cdc_pulse_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_2 ]

  # Create instance: px_xpm_cdc_pulse_3, and set properties
  set px_xpm_cdc_pulse_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_3 ]

  # Create instance: px_xpm_cdc_pulse_4, and set properties
  set px_xpm_cdc_pulse_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_4 ]

  # Create instance: px_xpm_cdc_pulse_5, and set properties
  set px_xpm_cdc_pulse_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_5 ]

  # Create instance: px_xpm_cdc_pulse_6, and set properties
  set px_xpm_cdc_pulse_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_6 ]

  # Create instance: px_xpm_cdc_pulse_7, and set properties
  set px_xpm_cdc_pulse_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_pulse:1.1 px_xpm_cdc_pulse_7 ]

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.IN4_WIDTH {1} \
   CONFIG.IN5_WIDTH {1} \
   CONFIG.IN6_WIDTH {1} \
   CONFIG.IN7_WIDTH {1} \
   CONFIG.NUM_PORTS {8} \
 ] $xlconcat_0

  # Create port connections
  connect_bd_net -net dest_clk1_1 [get_bd_pins dest_clk] [get_bd_pins px_xpm_cdc_pulse_0/dest_clk] [get_bd_pins px_xpm_cdc_pulse_1/dest_clk] [get_bd_pins px_xpm_cdc_pulse_2/dest_clk] [get_bd_pins px_xpm_cdc_pulse_3/dest_clk] [get_bd_pins px_xpm_cdc_pulse_4/dest_clk] [get_bd_pins px_xpm_cdc_pulse_5/dest_clk] [get_bd_pins px_xpm_cdc_pulse_6/dest_clk] [get_bd_pins px_xpm_cdc_pulse_7/dest_clk]
  connect_bd_net -net irq_1 [get_bd_pins irq] [get_bd_pins px_subset_vctr_0/in_vector] [get_bd_pins px_subset_vctr_1/in_vector] [get_bd_pins px_subset_vctr_2/in_vector] [get_bd_pins px_subset_vctr_3/in_vector] [get_bd_pins px_subset_vctr_4/in_vector] [get_bd_pins px_subset_vctr_5/in_vector] [get_bd_pins px_subset_vctr_6/in_vector] [get_bd_pins px_subset_vctr_7/in_vector]
  connect_bd_net -net px_subset_vctr_0_out_vector [get_bd_pins px_subset_vctr_0/out_vector] [get_bd_pins px_xpm_cdc_pulse_0/src_pulse]
  connect_bd_net -net px_subset_vctr_1_out_vector [get_bd_pins px_subset_vctr_1/out_vector] [get_bd_pins px_xpm_cdc_pulse_1/src_pulse]
  connect_bd_net -net px_subset_vctr_2_out_vector [get_bd_pins px_subset_vctr_2/out_vector] [get_bd_pins px_xpm_cdc_pulse_2/src_pulse]
  connect_bd_net -net px_subset_vctr_3_out_vector [get_bd_pins px_subset_vctr_3/out_vector] [get_bd_pins px_xpm_cdc_pulse_3/src_pulse]
  connect_bd_net -net px_subset_vctr_4_out_vector [get_bd_pins px_subset_vctr_4/out_vector] [get_bd_pins px_xpm_cdc_pulse_4/src_pulse]
  connect_bd_net -net px_subset_vctr_5_out_vector [get_bd_pins px_subset_vctr_5/out_vector] [get_bd_pins px_xpm_cdc_pulse_5/src_pulse]
  connect_bd_net -net px_subset_vctr_6_out_vector [get_bd_pins px_subset_vctr_6/out_vector] [get_bd_pins px_xpm_cdc_pulse_6/src_pulse]
  connect_bd_net -net px_subset_vctr_7_out_vector [get_bd_pins px_subset_vctr_7/out_vector] [get_bd_pins px_xpm_cdc_pulse_7/src_pulse]
  connect_bd_net -net px_xpm_cdc_pulse_0_dest_pulse [get_bd_pins px_xpm_cdc_pulse_0/dest_pulse] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net px_xpm_cdc_pulse_1_dest_pulse [get_bd_pins px_xpm_cdc_pulse_1/dest_pulse] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net px_xpm_cdc_pulse_2_dest_pulse [get_bd_pins px_xpm_cdc_pulse_2/dest_pulse] [get_bd_pins xlconcat_0/In2]
  connect_bd_net -net px_xpm_cdc_pulse_3_dest_pulse [get_bd_pins px_xpm_cdc_pulse_3/dest_pulse] [get_bd_pins xlconcat_0/In3]
  connect_bd_net -net px_xpm_cdc_pulse_4_dest_pulse [get_bd_pins px_xpm_cdc_pulse_4/dest_pulse] [get_bd_pins xlconcat_0/In4]
  connect_bd_net -net px_xpm_cdc_pulse_5_dest_pulse [get_bd_pins px_xpm_cdc_pulse_5/dest_pulse] [get_bd_pins xlconcat_0/In5]
  connect_bd_net -net px_xpm_cdc_pulse_6_dest_pulse [get_bd_pins px_xpm_cdc_pulse_6/dest_pulse] [get_bd_pins xlconcat_0/In6]
  connect_bd_net -net px_xpm_cdc_pulse_7_dest_pulse [get_bd_pins px_xpm_cdc_pulse_7/dest_pulse] [get_bd_pins xlconcat_0/In7]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins px_xpm_cdc_pulse_0/src_clk] [get_bd_pins px_xpm_cdc_pulse_1/src_clk] [get_bd_pins px_xpm_cdc_pulse_2/src_clk] [get_bd_pins px_xpm_cdc_pulse_3/src_clk] [get_bd_pins px_xpm_cdc_pulse_4/src_clk] [get_bd_pins px_xpm_cdc_pulse_5/src_clk] [get_bd_pins px_xpm_cdc_pulse_6/src_clk] [get_bd_pins px_xpm_cdc_pulse_7/src_clk]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins irq_out] [get_bd_pins xlconcat_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: eth_ex_design_1
proc create_hier_cell_eth_ex_design_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_eth_ex_design_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 gt_serial_port

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_tx


  # Create pins
  create_bd_pin -dir I gt_ref_clk
  create_bd_pin -dir O gt_txusrclk2
  create_bd_pin -dir O link_led_n
  create_bd_pin -dir O linkdn_irq
  create_bd_pin -dir O linkup_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir O -from 8 -to 0 stat_rx_pause_req
  create_bd_pin -dir O -from 8 -to 0 stat_rx_pause_valid
  create_bd_pin -dir O stat_tx_local_fault
  create_bd_pin -dir O usr_tx_reset

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_interconnect_0

  # Create instance: axil_2_drp, and set properties
  set axil_2_drp [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_2_drp:1.1 axil_2_drp ]

  # Create instance: axis_switch_0, and set properties
  set axis_switch_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 axis_switch_0 ]
  set_property -dict [ list \
   CONFIG.ARB_ALGORITHM {3} \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {1} \
 ] $axis_switch_0

  # Create instance: cmac_usplus, and set properties
  set cmac_usplus [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmac_usplus:3.1 cmac_usplus ]
  set_property -dict [ list \
   CONFIG.ADD_GT_CNRL_STS_PORTS {1} \
   CONFIG.CMAC_CAUI4_MODE {1} \
   CONFIG.CMAC_CORE_SELECT {CMACE4_X0Y0} \
   CONFIG.ENABLE_AXI_INTERFACE {1} \
   CONFIG.ENABLE_PIPELINE_REG {1} \
   CONFIG.GT_GROUP_SELECT {X0Y4~X0Y7} \
   CONFIG.GT_REF_CLK_FREQ {156.25} \
   CONFIG.INCLUDE_RS_FEC {1} \
   CONFIG.INCLUDE_SHARED_LOGIC {1} \
   CONFIG.INCLUDE_STATISTICS_COUNTERS {1} \
   CONFIG.LANE10_GT_LOC {NA} \
   CONFIG.LANE1_GT_LOC {X0Y4} \
   CONFIG.LANE2_GT_LOC {X0Y5} \
   CONFIG.LANE3_GT_LOC {X0Y6} \
   CONFIG.LANE4_GT_LOC {X0Y7} \
   CONFIG.LANE5_GT_LOC {NA} \
   CONFIG.LANE6_GT_LOC {NA} \
   CONFIG.LANE7_GT_LOC {NA} \
   CONFIG.LANE8_GT_LOC {NA} \
   CONFIG.LANE9_GT_LOC {NA} \
   CONFIG.NUM_LANES {4x25} \
   CONFIG.RX_EQ_MODE {LPM} \
   CONFIG.RX_PAUSE_DA_MCAST {0x000000000000} \
   CONFIG.TX_FLOW_CONTROL {0} \
   CONFIG.USER_INTERFACE {AXIS} \
 ] $cmac_usplus

  # Create instance: cmac_usplus_0_shared, and set properties
  set block_name cmac_usplus_0_shared_logic_wrapper
  set block_cell_name cmac_usplus_0_shared
  if { [catch {set cmac_usplus_0_shared [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cmac_usplus_0_shared eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: const_12_0, and set properties
  set const_12_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 const_12_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {12} \
 ] $const_12_0

  # Create instance: constant_0, and set properties
  set constant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $constant_0

  # Create instance: constant_16_0, and set properties
  set constant_16_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_16_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $constant_16_0

  # Create instance: constant_4_0, and set properties
  set constant_4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_4_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {4} \
 ] $constant_4_0

  # Create instance: constant_56_0, and set properties
  set constant_56_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_56_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {56} \
 ] $constant_56_0

  # Create instance: drpclk_concat, and set properties
  set drpclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 drpclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $drpclk_concat

  # Create instance: eth_100ge_ctl_stat, and set properties
  set block_name eth_100ge_ctl_stat
  set block_cell_name eth_100ge_ctl_stat
  if { [catch {set eth_100ge_ctl_stat [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $eth_100ge_ctl_stat eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.default_lane0_diffctrl {8} \
   CONFIG.default_lane0_postcursor {12} \
   CONFIG.default_lane1_diffctrl {8} \
   CONFIG.default_lane1_postcursor {12} \
   CONFIG.default_lane2_diffctrl {8} \
   CONFIG.default_lane2_postcursor {12} \
   CONFIG.default_lane3_diffctrl {8} \
   CONFIG.default_lane3_postcursor {12} \
 ] $eth_100ge_ctl_stat

  # Create instance: in_system_ibert_0, and set properties
  set in_system_ibert_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:in_system_ibert:1.0 in_system_ibert_0 ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_INPUT_PORTS {true} \
   CONFIG.C_GTS_USED { X0Y7 X0Y6 X0Y5 X0Y4} \
 ] $in_system_ibert_0

  # Create instance: px_100ge_arp, and set properties
  set px_100ge_arp [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_100ge_arp_resp:1.0 px_100ge_arp ]

  # Create instance: qpllclk_concat, and set properties
  set qpllclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 qpllclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $qpllclk_concat

  # Create instance: qpllclk_concat1, and set properties
  set qpllclk_concat1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 qpllclk_concat1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $qpllclk_concat1

  # Create instance: rxclk_concat, and set properties
  set rxclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 rxclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $rxclk_concat

  # Create instance: rxdone_cdc, and set properties
  set rxdone_cdc [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_single_array:1.1 rxdone_cdc ]
  set_property -dict [ list \
   CONFIG.WIDTH {1} \
 ] $rxdone_cdc

  # Create instance: rxpol_cdc, and set properties
  set rxpol_cdc [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_single_array:1.1 rxpol_cdc ]
  set_property -dict [ list \
   CONFIG.SRC_INPUT_REG {true} \
   CONFIG.WIDTH {4} \
 ] $rxpol_cdc

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {4} \
 ] $util_reduced_logic_0

  # Create instance: util_reduced_logic_1, and set properties
  set util_reduced_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {4} \
 ] $util_reduced_logic_1

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {2} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins cmac_usplus/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins eth_100ge_ctl_stat/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins axil_2_drp/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins px_100ge_arp/s_axi_csr]
  connect_bd_intf_net -intf_net axil_2_drp_drp [get_bd_intf_pins axil_2_drp/drp] [get_bd_intf_pins cmac_usplus/core_drp]
  connect_bd_intf_net -intf_net axis_switch_0_M00_AXIS [get_bd_intf_pins axis_switch_0/M00_AXIS] [get_bd_intf_pins cmac_usplus/axis_tx]
  connect_bd_intf_net -intf_net cmac_usplus_axis_rx [get_bd_intf_pins cmac_usplus/axis_rx] [get_bd_intf_pins px_100ge_arp/s_axis]
  connect_bd_intf_net -intf_net cmac_usplus_gt_serial_port [get_bd_intf_pins gt_serial_port] [get_bd_intf_pins cmac_usplus/gt_serial_port]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT0_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_0] [get_bd_intf_pins in_system_ibert_0/GT0_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT1_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_1] [get_bd_intf_pins in_system_ibert_0/GT1_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT2_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_2] [get_bd_intf_pins in_system_ibert_0/GT2_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT3_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_3] [get_bd_intf_pins in_system_ibert_0/GT3_DRP]
  connect_bd_intf_net -intf_net px_100ge_arp_resp_0_m_axis_arp [get_bd_intf_pins axis_switch_0/S01_AXIS] [get_bd_intf_pins px_100ge_arp/m_axis_arp]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_tx_1 [get_bd_intf_pins s_axis_tx] [get_bd_intf_pins axis_switch_0/S00_AXIS]

  # Create port connections
  connect_bd_net -net cmac_usplus_0_axi_usr_rx_reset [get_bd_pins cmac_usplus/axi_usr_rx_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_rx_reset]
  connect_bd_net -net cmac_usplus_0_axi_usr_rx_serdes_reset [get_bd_pins cmac_usplus/axi_usr_rx_serdes_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_rx_serdes_reset]
  connect_bd_net -net cmac_usplus_0_axi_usr_tx_reset [get_bd_pins cmac_usplus/axi_usr_tx_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_tx_reset]
  connect_bd_net -net cmac_usplus_0_gt_powergoodout [get_bd_pins cmac_usplus/gt_powergoodout] [get_bd_pins eth_100ge_ctl_stat/gt_powergoodout]
  connect_bd_net -net cmac_usplus_0_gt_reset_rx_done_out [get_bd_pins cmac_usplus/gt_reset_rx_done_out] [get_bd_pins cmac_usplus_0_shared/gt_rx_reset_in]
  connect_bd_net -net cmac_usplus_0_gt_reset_tx_done_out [get_bd_pins cmac_usplus/gt_reset_tx_done_out] [get_bd_pins cmac_usplus_0_shared/gt_tx_reset_in]
  connect_bd_net -net cmac_usplus_0_gt_rxusrclk2 [get_bd_pins cmac_usplus/gt_rxusrclk2] [get_bd_pins cmac_usplus_0_shared/gt_rxusrclk2] [get_bd_pins rxclk_concat/In0] [get_bd_pins rxclk_concat/In1] [get_bd_pins rxclk_concat/In2] [get_bd_pins rxclk_concat/In3] [get_bd_pins rxdone_cdc/src_clk] [get_bd_pins rxpol_cdc/dest_clk]
  connect_bd_net -net cmac_usplus_0_gt_txusrclk2 [get_bd_pins gt_txusrclk2] [get_bd_pins axis_switch_0/aclk] [get_bd_pins cmac_usplus/gt_txusrclk2] [get_bd_pins cmac_usplus/rx_clk] [get_bd_pins cmac_usplus_0_shared/gt_txusrclk2] [get_bd_pins cmac_usplus_0_shared/rx_clk] [get_bd_pins px_100ge_arp/s_axis_aclk]
  connect_bd_net -net cmac_usplus_0_gtwiz_reset_qpll0reset_out [get_bd_pins cmac_usplus/gtwiz_reset_qpll0reset_out] [get_bd_pins cmac_usplus_0_shared/qpll0reset]
  connect_bd_net -net cmac_usplus_0_rx_serdes_clk [get_bd_pins cmac_usplus/rx_serdes_clk] [get_bd_pins cmac_usplus_0_shared/rx_serdes_clk]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0lock [get_bd_pins cmac_usplus/gtwiz_reset_qpll0lock_in] [get_bd_pins cmac_usplus_0_shared/qpll0lock] [get_bd_pins eth_100ge_ctl_stat/qpll_lock]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0outclk [get_bd_pins cmac_usplus_0_shared/qpll0outclk] [get_bd_pins qpllclk_concat/In0] [get_bd_pins qpllclk_concat/In1] [get_bd_pins qpllclk_concat/In2] [get_bd_pins qpllclk_concat/In3]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0outrefclk [get_bd_pins cmac_usplus_0_shared/qpll0outrefclk] [get_bd_pins qpllclk_concat1/In0] [get_bd_pins qpllclk_concat1/In1] [get_bd_pins qpllclk_concat1/In2] [get_bd_pins qpllclk_concat1/In3]
  connect_bd_net -net cmac_usplus_0_shared_0_rx_reset_out [get_bd_pins cmac_usplus/rx_reset_done] [get_bd_pins cmac_usplus_0_shared/rx_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_0_rx_serdes_reset_out [get_bd_pins cmac_usplus/rx_serdes_reset_done] [get_bd_pins cmac_usplus_0_shared/rx_serdes_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_0_tx_reset_done_sync [get_bd_pins cmac_usplus/tx_reset_done_sync] [get_bd_pins cmac_usplus_0_shared/tx_reset_done_sync]
  connect_bd_net -net cmac_usplus_0_shared_0_tx_reset_out [get_bd_pins cmac_usplus/tx_reset_done] [get_bd_pins cmac_usplus_0_shared/tx_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_usr_tx_reset [get_bd_pins usr_tx_reset] [get_bd_pins cmac_usplus_0_shared/usr_tx_reset] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net cmac_usplus_0_stat_rx_aligned [get_bd_pins cmac_usplus/stat_rx_aligned] [get_bd_pins eth_100ge_ctl_stat/stat_rx_aligned]
  connect_bd_net -net cmac_usplus_gt_rxresetdone [get_bd_pins cmac_usplus/gt_rxresetdone] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net cmac_usplus_gt_txresetdone [get_bd_pins cmac_usplus/gt_txresetdone] [get_bd_pins util_reduced_logic_1/Op1]
  connect_bd_net -net cmac_usplus_stat_rx_pause_req [get_bd_pins stat_rx_pause_req] [get_bd_pins cmac_usplus/stat_rx_pause_req]
  connect_bd_net -net cmac_usplus_stat_rx_pause_valid [get_bd_pins stat_rx_pause_valid] [get_bd_pins cmac_usplus/stat_rx_pause_valid]
  connect_bd_net -net cmac_usplus_stat_tx_local_fault [get_bd_pins stat_tx_local_fault] [get_bd_pins cmac_usplus/stat_tx_local_fault]
  connect_bd_net -net const_12_0_dout [get_bd_pins const_12_0/dout] [get_bd_pins in_system_ibert_0/rxrate_i]
  connect_bd_net -net constant_0_dout [get_bd_pins cmac_usplus/gtwiz_reset_rx_datapath] [get_bd_pins cmac_usplus/gtwiz_reset_tx_datapath] [get_bd_pins cmac_usplus/pm_tick] [get_bd_pins cmac_usplus_0_shared/common0_drpen] [get_bd_pins cmac_usplus_0_shared/common0_drpwe] [get_bd_pins cmac_usplus_0_shared/core_drp_reset] [get_bd_pins cmac_usplus_0_shared/qpll1reset] [get_bd_pins constant_0/dout]
  connect_bd_net -net constant_4_0_dout [get_bd_pins cmac_usplus/qpll1clk_in] [get_bd_pins cmac_usplus/qpll1refclk_in] [get_bd_pins constant_4_0/dout]
  connect_bd_net -net constant_56_0_dout [get_bd_pins cmac_usplus/tx_preamblein] [get_bd_pins constant_56_0/dout]
  connect_bd_net -net drpclk_concat_dout [get_bd_pins drpclk_concat/dout] [get_bd_pins in_system_ibert_0/drpclk_i]
  connect_bd_net -net eth_100ge_ctl_stat_0_axi_csr_areset [get_bd_pins cmac_usplus/s_axi_sreset] [get_bd_pins eth_100ge_ctl_stat/axi_csr_areset]
  connect_bd_net -net eth_100ge_ctl_stat_0_gt_powergood [get_bd_pins cmac_usplus_0_shared/gt_powergood] [get_bd_pins eth_100ge_ctl_stat/gt_powergood]
  connect_bd_net -net eth_100ge_ctl_stat_0_link_led_n [get_bd_pins link_led_n] [get_bd_pins eth_100ge_ctl_stat/link_led_n]
  connect_bd_net -net eth_100ge_ctl_stat_0_loopback [get_bd_pins cmac_usplus/gt_loopback_in] [get_bd_pins eth_100ge_ctl_stat/loopback]
  connect_bd_net -net eth_100ge_ctl_stat_0_sys_reset [get_bd_pins cmac_usplus/sys_reset] [get_bd_pins eth_100ge_ctl_stat/sys_reset]
  connect_bd_net -net eth_100ge_ctl_stat_core_rx_reset [get_bd_pins cmac_usplus_0_shared/core_rx_reset] [get_bd_pins eth_100ge_ctl_stat/core_rx_reset]
  connect_bd_net -net eth_100ge_ctl_stat_core_tx_reset [get_bd_pins cmac_usplus_0_shared/core_tx_reset] [get_bd_pins eth_100ge_ctl_stat/core_tx_reset]
  connect_bd_net -net eth_100ge_ctl_stat_diffctrl [get_bd_pins eth_100ge_ctl_stat/diffctrl] [get_bd_pins in_system_ibert_0/txdiffctrl_i]
  connect_bd_net -net eth_100ge_ctl_stat_linkdn_irq [get_bd_pins linkdn_irq] [get_bd_pins eth_100ge_ctl_stat/linkdn_irq]
  connect_bd_net -net eth_100ge_ctl_stat_linkup_irq [get_bd_pins linkup_irq] [get_bd_pins eth_100ge_ctl_stat/linkup_irq]
  connect_bd_net -net eth_100ge_ctl_stat_postcursor [get_bd_pins eth_100ge_ctl_stat/postcursor] [get_bd_pins in_system_ibert_0/txpostcursor_i]
  connect_bd_net -net eth_100ge_ctl_stat_precursor [get_bd_pins eth_100ge_ctl_stat/precursor] [get_bd_pins in_system_ibert_0/txprecursor_i]
  connect_bd_net -net eth_100ge_ctl_stat_rx_polarity [get_bd_pins eth_100ge_ctl_stat/rx_polarity] [get_bd_pins rxpol_cdc/src_in]
  connect_bd_net -net eth_100ge_ctl_stat_rxlpmen [get_bd_pins eth_100ge_ctl_stat/rxlpmen] [get_bd_pins in_system_ibert_0/rxlpmen_i]
  connect_bd_net -net eth_100ge_ctl_stat_tx_polarity [get_bd_pins cmac_usplus/gt_txpolarity] [get_bd_pins eth_100ge_ctl_stat/tx_polarity]
  connect_bd_net -net gt_ref_clk_1 [get_bd_pins gt_ref_clk] [get_bd_pins cmac_usplus_0_shared/gt_ref_clk]
  connect_bd_net -net in_system_ibert_0_eyescanreset_o [get_bd_pins cmac_usplus/gt_eyescanreset] [get_bd_pins in_system_ibert_0/eyescanreset_o]
  connect_bd_net -net in_system_ibert_0_rxlpmen_o [get_bd_pins cmac_usplus/gt_rxlpmen] [get_bd_pins in_system_ibert_0/rxlpmen_o]
  connect_bd_net -net in_system_ibert_0_rxrate_o [get_bd_pins cmac_usplus/gt_rxrate] [get_bd_pins in_system_ibert_0/rxrate_o]
  connect_bd_net -net in_system_ibert_0_txdiffctrl_o [get_bd_pins cmac_usplus/gt_txdiffctrl] [get_bd_pins in_system_ibert_0/txdiffctrl_o]
  connect_bd_net -net in_system_ibert_0_txpostcursor_o [get_bd_pins cmac_usplus/gt_txpostcursor] [get_bd_pins in_system_ibert_0/txpostcursor_o]
  connect_bd_net -net in_system_ibert_0_txprecursor_o [get_bd_pins cmac_usplus/gt_txprecursor] [get_bd_pins in_system_ibert_0/txprecursor_o]
  connect_bd_net -net px_xpm_cdc_single_ar_0_dest_out [get_bd_pins cmac_usplus/gt_rxpolarity] [get_bd_pins rxpol_cdc/dest_out]
  connect_bd_net -net qpllclk_concat1_dout [get_bd_pins cmac_usplus/qpll0refclk_in] [get_bd_pins qpllclk_concat1/dout]
  connect_bd_net -net qpllclk_concat_dout [get_bd_pins cmac_usplus/qpll0clk_in] [get_bd_pins qpllclk_concat/dout]
  connect_bd_net -net rxclk_concat_dout [get_bd_pins in_system_ibert_0/rxoutclk_i] [get_bd_pins rxclk_concat/dout]
  connect_bd_net -net rxpol_cdc1_dest_out [get_bd_pins eth_100ge_ctl_stat/gt_reset_rx_done_out] [get_bd_pins rxdone_cdc/dest_out]
  connect_bd_net -net s_axi_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axil_2_drp/drpclk] [get_bd_pins axil_2_drp/s_axi_aclk] [get_bd_pins cmac_usplus/drp_clk] [get_bd_pins cmac_usplus/gt_drpclk] [get_bd_pins cmac_usplus/init_clk] [get_bd_pins cmac_usplus/s_axi_aclk] [get_bd_pins cmac_usplus_0_shared/drpclk_common_in] [get_bd_pins drpclk_concat/In0] [get_bd_pins drpclk_concat/In1] [get_bd_pins drpclk_concat/In2] [get_bd_pins drpclk_concat/In3] [get_bd_pins eth_100ge_ctl_stat/s_axi_csr_aclk] [get_bd_pins in_system_ibert_0/clk] [get_bd_pins px_100ge_arp/s_axi_csr_aclk] [get_bd_pins rxdone_cdc/dest_clk] [get_bd_pins rxpol_cdc/src_clk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axil_2_drp/s_axi_aresetn] [get_bd_pins eth_100ge_ctl_stat/s_axi_csr_aresetn] [get_bd_pins px_100ge_arp/s_axi_csr_aresetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins rxdone_cdc/src_in] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins eth_100ge_ctl_stat/gt_reset_tx_done_out] [get_bd_pins util_reduced_logic_1/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins axis_switch_0/aresetn] [get_bd_pins px_100ge_arp/s_axis_aresetn] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins cmac_usplus_0_shared/common0_drpaddr] [get_bd_pins cmac_usplus_0_shared/common0_drpdi] [get_bd_pins constant_16_0/dout]
  connect_bd_net -net xlconstant_0_dout1 [get_bd_pins axis_switch_0/s_req_suppress] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: eth_ex_design_0
proc create_hier_cell_eth_ex_design_0 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_eth_ex_design_0() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 gt_serial_port

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_tx


  # Create pins
  create_bd_pin -dir O axi_usr_rx_reset
  create_bd_pin -dir I gt_ref_clk
  create_bd_pin -dir O gt_txusrclk2
  create_bd_pin -dir O link_led_n
  create_bd_pin -dir O linkdn_irq
  create_bd_pin -dir O linkup_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir O -from 8 -to 0 stat_rx_pause_req
  create_bd_pin -dir O -from 8 -to 0 stat_rx_pause_valid
  create_bd_pin -dir O stat_tx_local_fault
  create_bd_pin -dir O usr_tx_reset

  # Create instance: axi_intercon, and set properties
  set axi_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_intercon

  # Create instance: axil_2_drp, and set properties
  set axil_2_drp [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_2_drp:1.1 axil_2_drp ]

  # Create instance: cmac_usplus, and set properties
  set cmac_usplus [ create_bd_cell -type ip -vlnv xilinx.com:ip:cmac_usplus:3.1 cmac_usplus ]
  set_property -dict [ list \
   CONFIG.ADD_GT_CNRL_STS_PORTS {1} \
   CONFIG.CMAC_CAUI4_MODE {1} \
   CONFIG.CMAC_CORE_SELECT {CMACE4_X0Y1} \
   CONFIG.ENABLE_AXI_INTERFACE {1} \
   CONFIG.ENABLE_PIPELINE_REG {1} \
   CONFIG.GT_GROUP_SELECT {X0Y8~X0Y11} \
   CONFIG.GT_REF_CLK_FREQ {156.25} \
   CONFIG.INCLUDE_RS_FEC {1} \
   CONFIG.INCLUDE_SHARED_LOGIC {1} \
   CONFIG.INCLUDE_STATISTICS_COUNTERS {1} \
   CONFIG.LANE10_GT_LOC {NA} \
   CONFIG.LANE1_GT_LOC {X0Y8} \
   CONFIG.LANE2_GT_LOC {X0Y9} \
   CONFIG.LANE3_GT_LOC {X0Y10} \
   CONFIG.LANE4_GT_LOC {X0Y11} \
   CONFIG.LANE5_GT_LOC {NA} \
   CONFIG.LANE6_GT_LOC {NA} \
   CONFIG.LANE7_GT_LOC {NA} \
   CONFIG.LANE8_GT_LOC {NA} \
   CONFIG.LANE9_GT_LOC {NA} \
   CONFIG.NUM_LANES {4x25} \
   CONFIG.RX_EQ_MODE {LPM} \
   CONFIG.RX_PAUSE_DA_MCAST {0x000000000000} \
   CONFIG.TX_FLOW_CONTROL {0} \
   CONFIG.USER_INTERFACE {AXIS} \
 ] $cmac_usplus

  # Create instance: cmac_usplus_0_shared, and set properties
  set block_name cmac_usplus_0_shared_logic_wrapper
  set block_cell_name cmac_usplus_0_shared
  if { [catch {set cmac_usplus_0_shared [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $cmac_usplus_0_shared eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: constant_0, and set properties
  set constant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $constant_0

  # Create instance: constant_12_0, and set properties
  set constant_12_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_12_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {12} \
 ] $constant_12_0

  # Create instance: constant_16_0, and set properties
  set constant_16_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_16_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {16} \
 ] $constant_16_0

  # Create instance: constant_4_0, and set properties
  set constant_4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_4_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {4} \
 ] $constant_4_0

  # Create instance: constant_56_0, and set properties
  set constant_56_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 constant_56_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {56} \
 ] $constant_56_0

  # Create instance: drpclk_concat, and set properties
  set drpclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 drpclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $drpclk_concat

  # Create instance: eth_100ge_ctl_stat, and set properties
  set block_name eth_100ge_ctl_stat
  set block_cell_name eth_100ge_ctl_stat
  if { [catch {set eth_100ge_ctl_stat [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $eth_100ge_ctl_stat eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
    set_property -dict [ list \
   CONFIG.default_lane0_diffctrl {8} \
   CONFIG.default_lane0_postcursor {12} \
   CONFIG.default_lane1_diffctrl {8} \
   CONFIG.default_lane1_postcursor {12} \
   CONFIG.default_lane2_diffctrl {8} \
   CONFIG.default_lane2_postcursor {12} \
   CONFIG.default_lane3_diffctrl {8} \
   CONFIG.default_lane3_postcursor {12} \
 ] $eth_100ge_ctl_stat

  # Create instance: in_system_ibert, and set properties
  set in_system_ibert [ create_bd_cell -type ip -vlnv xilinx.com:ip:in_system_ibert:1.0 in_system_ibert ]
  set_property -dict [ list \
   CONFIG.C_ENABLE_INPUT_PORTS {true} \
   CONFIG.C_GTS_USED { X0Y11 X0Y10 X0Y9 X0Y8} \
 ] $in_system_ibert

  # Create instance: px_100ge_arp, and set properties
  set px_100ge_arp [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_100ge_arp_resp:1.0 px_100ge_arp ]

  # Create instance: qpllclk_concat, and set properties
  set qpllclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 qpllclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $qpllclk_concat

  # Create instance: qpllclk_concat1, and set properties
  set qpllclk_concat1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 qpllclk_concat1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $qpllclk_concat1

  # Create instance: rxclk_concat, and set properties
  set rxclk_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 rxclk_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.NUM_PORTS {4} \
 ] $rxclk_concat

  # Create instance: rxdone_cdc, and set properties
  set rxdone_cdc [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_single_array:1.1 rxdone_cdc ]
  set_property -dict [ list \
   CONFIG.WIDTH {1} \
 ] $rxdone_cdc

  # Create instance: rxpol_cdc, and set properties
  set rxpol_cdc [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_single_array:1.1 rxpol_cdc ]
  set_property -dict [ list \
   CONFIG.SRC_INPUT_REG {true} \
   CONFIG.WIDTH {4} \
 ] $rxpol_cdc

  # Create instance: tx_axis_switch, and set properties
  set tx_axis_switch [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 tx_axis_switch ]
  set_property -dict [ list \
   CONFIG.ARB_ALGORITHM {3} \
   CONFIG.ARB_ON_MAX_XFERS {0} \
   CONFIG.ARB_ON_TLAST {1} \
   CONFIG.HAS_TKEEP {1} \
   CONFIG.HAS_TLAST {1} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {1} \
 ] $tx_axis_switch

  # Create instance: util_reduced_logic_0, and set properties
  set util_reduced_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {4} \
 ] $util_reduced_logic_0

  # Create instance: util_reduced_logic_1, and set properties
  set util_reduced_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_reduced_logic:2.0 util_reduced_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_SIZE {4} \
 ] $util_reduced_logic_1

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {2} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net axi_intercon_M02_AXI [get_bd_intf_pins axi_intercon/M02_AXI] [get_bd_intf_pins axil_2_drp/s_axi]
  connect_bd_intf_net -intf_net axi_intercon_M03_AXI [get_bd_intf_pins axi_intercon/M03_AXI] [get_bd_intf_pins px_100ge_arp/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_intercon/M00_AXI] [get_bd_intf_pins cmac_usplus/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_intercon/M01_AXI] [get_bd_intf_pins eth_100ge_ctl_stat/s_axi_csr]
  connect_bd_intf_net -intf_net axis_switch_0_M00_AXIS [get_bd_intf_pins cmac_usplus/axis_tx] [get_bd_intf_pins tx_axis_switch/M00_AXIS]
  connect_bd_intf_net -intf_net cmac_usplus_axis_rx [get_bd_intf_pins cmac_usplus/axis_rx] [get_bd_intf_pins px_100ge_arp/s_axis]
  connect_bd_intf_net -intf_net cmac_usplus_gt_serial_port [get_bd_intf_pins gt_serial_port] [get_bd_intf_pins cmac_usplus/gt_serial_port]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT0_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_0] [get_bd_intf_pins in_system_ibert/GT0_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT1_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_1] [get_bd_intf_pins in_system_ibert/GT1_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT2_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_2] [get_bd_intf_pins in_system_ibert/GT2_DRP]
  connect_bd_intf_net -intf_net in_system_ibert_0_GT3_DRP [get_bd_intf_pins cmac_usplus/gt_ch_drp_3] [get_bd_intf_pins in_system_ibert/GT3_DRP]
  connect_bd_intf_net -intf_net px_100ge_arp_resp_0_m_axis_arp [get_bd_intf_pins px_100ge_arp/m_axis_arp] [get_bd_intf_pins tx_axis_switch/S01_AXIS]
  connect_bd_intf_net -intf_net px_axil_2_drp_0_drp [get_bd_intf_pins axil_2_drp/drp] [get_bd_intf_pins cmac_usplus/core_drp]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_tx_1 [get_bd_intf_pins s_axis_tx] [get_bd_intf_pins tx_axis_switch/S00_AXIS]

  # Create port connections
  connect_bd_net -net cmac_usplus_0_axi_usr_rx_reset [get_bd_pins axi_usr_rx_reset] [get_bd_pins cmac_usplus/axi_usr_rx_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_rx_reset]
  connect_bd_net -net cmac_usplus_0_axi_usr_rx_serdes_reset [get_bd_pins cmac_usplus/axi_usr_rx_serdes_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_rx_serdes_reset]
  connect_bd_net -net cmac_usplus_0_axi_usr_tx_reset [get_bd_pins cmac_usplus/axi_usr_tx_reset] [get_bd_pins cmac_usplus_0_shared/axi_usr_tx_reset]
  connect_bd_net -net cmac_usplus_0_gt_powergoodout [get_bd_pins cmac_usplus/gt_powergoodout] [get_bd_pins eth_100ge_ctl_stat/gt_powergoodout]
  connect_bd_net -net cmac_usplus_0_gt_reset_rx_done_out [get_bd_pins cmac_usplus/gt_reset_rx_done_out] [get_bd_pins cmac_usplus_0_shared/gt_rx_reset_in]
  connect_bd_net -net cmac_usplus_0_gt_reset_tx_done_out [get_bd_pins cmac_usplus/gt_reset_tx_done_out] [get_bd_pins cmac_usplus_0_shared/gt_tx_reset_in]
  connect_bd_net -net cmac_usplus_0_gt_rxusrclk2 [get_bd_pins cmac_usplus/gt_rxusrclk2] [get_bd_pins cmac_usplus_0_shared/gt_rxusrclk2] [get_bd_pins rxclk_concat/In0] [get_bd_pins rxclk_concat/In1] [get_bd_pins rxclk_concat/In2] [get_bd_pins rxclk_concat/In3] [get_bd_pins rxdone_cdc/src_clk] [get_bd_pins rxpol_cdc/dest_clk]
  connect_bd_net -net cmac_usplus_0_gt_txusrclk2 [get_bd_pins gt_txusrclk2] [get_bd_pins cmac_usplus/gt_txusrclk2] [get_bd_pins cmac_usplus/rx_clk] [get_bd_pins cmac_usplus_0_shared/gt_txusrclk2] [get_bd_pins cmac_usplus_0_shared/rx_clk] [get_bd_pins px_100ge_arp/s_axis_aclk] [get_bd_pins tx_axis_switch/aclk]
  connect_bd_net -net cmac_usplus_0_gtwiz_reset_qpll0reset_out [get_bd_pins cmac_usplus/gtwiz_reset_qpll0reset_out] [get_bd_pins cmac_usplus_0_shared/qpll0reset]
  connect_bd_net -net cmac_usplus_0_rx_serdes_clk [get_bd_pins cmac_usplus/rx_serdes_clk] [get_bd_pins cmac_usplus_0_shared/rx_serdes_clk]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0lock [get_bd_pins cmac_usplus/gtwiz_reset_qpll0lock_in] [get_bd_pins cmac_usplus_0_shared/qpll0lock] [get_bd_pins eth_100ge_ctl_stat/qpll_lock]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0outclk [get_bd_pins cmac_usplus_0_shared/qpll0outclk] [get_bd_pins qpllclk_concat/In0] [get_bd_pins qpllclk_concat/In1] [get_bd_pins qpllclk_concat/In2] [get_bd_pins qpllclk_concat/In3]
  connect_bd_net -net cmac_usplus_0_shared_0_qpll0outrefclk [get_bd_pins cmac_usplus_0_shared/qpll0outrefclk] [get_bd_pins qpllclk_concat1/In0] [get_bd_pins qpllclk_concat1/In1] [get_bd_pins qpllclk_concat1/In2] [get_bd_pins qpllclk_concat1/In3]
  connect_bd_net -net cmac_usplus_0_shared_0_rx_reset_out [get_bd_pins cmac_usplus/rx_reset_done] [get_bd_pins cmac_usplus_0_shared/rx_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_0_rx_serdes_reset_out [get_bd_pins cmac_usplus/rx_serdes_reset_done] [get_bd_pins cmac_usplus_0_shared/rx_serdes_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_0_tx_reset_done_sync [get_bd_pins cmac_usplus/tx_reset_done_sync] [get_bd_pins cmac_usplus_0_shared/tx_reset_done_sync]
  connect_bd_net -net cmac_usplus_0_shared_0_tx_reset_out [get_bd_pins cmac_usplus/tx_reset_done] [get_bd_pins cmac_usplus_0_shared/tx_reset_out]
  connect_bd_net -net cmac_usplus_0_shared_usr_tx_reset [get_bd_pins usr_tx_reset] [get_bd_pins cmac_usplus_0_shared/usr_tx_reset] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net cmac_usplus_0_stat_rx_aligned [get_bd_pins cmac_usplus/stat_rx_aligned] [get_bd_pins eth_100ge_ctl_stat/stat_rx_aligned]
  connect_bd_net -net cmac_usplus_gt_rxresetdone [get_bd_pins cmac_usplus/gt_rxresetdone] [get_bd_pins util_reduced_logic_1/Op1]
  connect_bd_net -net cmac_usplus_gt_txresetdone [get_bd_pins cmac_usplus/gt_txresetdone] [get_bd_pins util_reduced_logic_0/Op1]
  connect_bd_net -net cmac_usplus_stat_rx_pause_req [get_bd_pins stat_rx_pause_req] [get_bd_pins cmac_usplus/stat_rx_pause_req]
  connect_bd_net -net cmac_usplus_stat_rx_pause_valid [get_bd_pins stat_rx_pause_valid] [get_bd_pins cmac_usplus/stat_rx_pause_valid]
  connect_bd_net -net cmac_usplus_stat_tx_local_fault [get_bd_pins stat_tx_local_fault] [get_bd_pins cmac_usplus/stat_tx_local_fault]
  connect_bd_net -net constant_0_dout [get_bd_pins cmac_usplus/gtwiz_reset_rx_datapath] [get_bd_pins cmac_usplus/gtwiz_reset_tx_datapath] [get_bd_pins cmac_usplus/pm_tick] [get_bd_pins cmac_usplus_0_shared/common0_drpen] [get_bd_pins cmac_usplus_0_shared/common0_drpwe] [get_bd_pins cmac_usplus_0_shared/qpll1reset] [get_bd_pins constant_0/dout]
  connect_bd_net -net constant_12_0_dout [get_bd_pins constant_12_0/dout] [get_bd_pins in_system_ibert/rxrate_i]
  connect_bd_net -net constant_4_0_dout [get_bd_pins cmac_usplus/qpll1clk_in] [get_bd_pins cmac_usplus/qpll1refclk_in] [get_bd_pins constant_4_0/dout]
  connect_bd_net -net constant_56_0_dout [get_bd_pins cmac_usplus/tx_preamblein] [get_bd_pins constant_56_0/dout]
  connect_bd_net -net drpclk_concat_dout [get_bd_pins drpclk_concat/dout] [get_bd_pins in_system_ibert/drpclk_i]
  connect_bd_net -net eth_100ge_ctl_stat_0_axi_csr_areset [get_bd_pins cmac_usplus/s_axi_sreset] [get_bd_pins cmac_usplus_0_shared/core_drp_reset] [get_bd_pins eth_100ge_ctl_stat/axi_csr_areset]
  connect_bd_net -net eth_100ge_ctl_stat_0_gt_powergood [get_bd_pins cmac_usplus_0_shared/gt_powergood] [get_bd_pins eth_100ge_ctl_stat/gt_powergood]
  connect_bd_net -net eth_100ge_ctl_stat_0_link_led_n [get_bd_pins link_led_n] [get_bd_pins eth_100ge_ctl_stat/link_led_n]
  connect_bd_net -net eth_100ge_ctl_stat_0_loopback [get_bd_pins cmac_usplus/gt_loopback_in] [get_bd_pins eth_100ge_ctl_stat/loopback]
  connect_bd_net -net eth_100ge_ctl_stat_0_sys_reset [get_bd_pins cmac_usplus/sys_reset] [get_bd_pins eth_100ge_ctl_stat/sys_reset]
  connect_bd_net -net eth_100ge_ctl_stat_core_rx_reset [get_bd_pins cmac_usplus_0_shared/core_rx_reset] [get_bd_pins eth_100ge_ctl_stat/core_rx_reset]
  connect_bd_net -net eth_100ge_ctl_stat_core_tx_reset [get_bd_pins cmac_usplus_0_shared/core_tx_reset] [get_bd_pins eth_100ge_ctl_stat/core_tx_reset]
  connect_bd_net -net eth_100ge_ctl_stat_diffctrl [get_bd_pins eth_100ge_ctl_stat/diffctrl] [get_bd_pins in_system_ibert/txdiffctrl_i]
  connect_bd_net -net eth_100ge_ctl_stat_linkdn_irq [get_bd_pins linkdn_irq] [get_bd_pins eth_100ge_ctl_stat/linkdn_irq]
  connect_bd_net -net eth_100ge_ctl_stat_linkup_irq [get_bd_pins linkup_irq] [get_bd_pins eth_100ge_ctl_stat/linkup_irq]
  connect_bd_net -net eth_100ge_ctl_stat_postcursor [get_bd_pins eth_100ge_ctl_stat/postcursor] [get_bd_pins in_system_ibert/txpostcursor_i]
  connect_bd_net -net eth_100ge_ctl_stat_precursor [get_bd_pins eth_100ge_ctl_stat/precursor] [get_bd_pins in_system_ibert/txprecursor_i]
  connect_bd_net -net eth_100ge_ctl_stat_rx_polarity [get_bd_pins eth_100ge_ctl_stat/rx_polarity] [get_bd_pins rxpol_cdc/src_in]
  connect_bd_net -net eth_100ge_ctl_stat_rxlpmen [get_bd_pins eth_100ge_ctl_stat/rxlpmen] [get_bd_pins in_system_ibert/rxlpmen_i]
  connect_bd_net -net eth_100ge_ctl_stat_tx_polarity [get_bd_pins cmac_usplus/gt_txpolarity] [get_bd_pins eth_100ge_ctl_stat/tx_polarity]
  connect_bd_net -net gt_ref_clk_1 [get_bd_pins gt_ref_clk] [get_bd_pins cmac_usplus_0_shared/gt_ref_clk]
  connect_bd_net -net in_system_ibert_0_eyescanreset_o [get_bd_pins cmac_usplus/gt_eyescanreset] [get_bd_pins in_system_ibert/eyescanreset_o]
  connect_bd_net -net in_system_ibert_0_rxlpmen_o [get_bd_pins cmac_usplus/gt_rxlpmen] [get_bd_pins in_system_ibert/rxlpmen_o]
  connect_bd_net -net in_system_ibert_0_rxrate_o [get_bd_pins cmac_usplus/gt_rxrate] [get_bd_pins in_system_ibert/rxrate_o]
  connect_bd_net -net in_system_ibert_0_txdiffctrl_o [get_bd_pins cmac_usplus/gt_txdiffctrl] [get_bd_pins in_system_ibert/txdiffctrl_o]
  connect_bd_net -net in_system_ibert_0_txpostcursor_o [get_bd_pins cmac_usplus/gt_txpostcursor] [get_bd_pins in_system_ibert/txpostcursor_o]
  connect_bd_net -net in_system_ibert_0_txprecursor_o [get_bd_pins cmac_usplus/gt_txprecursor] [get_bd_pins in_system_ibert/txprecursor_o]
  connect_bd_net -net qpllclk_concat1_dout [get_bd_pins cmac_usplus/qpll0refclk_in] [get_bd_pins qpllclk_concat1/dout]
  connect_bd_net -net qpllclk_concat_dout [get_bd_pins cmac_usplus/qpll0clk_in] [get_bd_pins qpllclk_concat/dout]
  connect_bd_net -net rxclk_concat_dout [get_bd_pins in_system_ibert/rxoutclk_i] [get_bd_pins rxclk_concat/dout]
  connect_bd_net -net rxdone_cdc_dest_out [get_bd_pins eth_100ge_ctl_stat/gt_reset_rx_done_out] [get_bd_pins rxdone_cdc/dest_out]
  connect_bd_net -net rxpol_cdc_dest_out [get_bd_pins cmac_usplus/gt_rxpolarity] [get_bd_pins rxpol_cdc/dest_out]
  connect_bd_net -net s_axi_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_intercon/ACLK] [get_bd_pins axi_intercon/M00_ACLK] [get_bd_pins axi_intercon/M01_ACLK] [get_bd_pins axi_intercon/M02_ACLK] [get_bd_pins axi_intercon/M03_ACLK] [get_bd_pins axi_intercon/S00_ACLK] [get_bd_pins axil_2_drp/drpclk] [get_bd_pins axil_2_drp/s_axi_aclk] [get_bd_pins cmac_usplus/drp_clk] [get_bd_pins cmac_usplus/gt_drpclk] [get_bd_pins cmac_usplus/init_clk] [get_bd_pins cmac_usplus/s_axi_aclk] [get_bd_pins cmac_usplus_0_shared/drpclk_common_in] [get_bd_pins drpclk_concat/In0] [get_bd_pins drpclk_concat/In1] [get_bd_pins drpclk_concat/In2] [get_bd_pins drpclk_concat/In3] [get_bd_pins eth_100ge_ctl_stat/s_axi_csr_aclk] [get_bd_pins in_system_ibert/clk] [get_bd_pins px_100ge_arp/s_axi_csr_aclk] [get_bd_pins rxdone_cdc/dest_clk] [get_bd_pins rxpol_cdc/src_clk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_intercon/ARESETN] [get_bd_pins axi_intercon/M00_ARESETN] [get_bd_pins axi_intercon/M01_ARESETN] [get_bd_pins axi_intercon/M02_ARESETN] [get_bd_pins axi_intercon/M03_ARESETN] [get_bd_pins axi_intercon/S00_ARESETN] [get_bd_pins axil_2_drp/s_axi_aresetn] [get_bd_pins eth_100ge_ctl_stat/s_axi_csr_aresetn] [get_bd_pins px_100ge_arp/s_axi_csr_aresetn]
  connect_bd_net -net util_reduced_logic_0_Res [get_bd_pins eth_100ge_ctl_stat/gt_reset_tx_done_out] [get_bd_pins util_reduced_logic_0/Res]
  connect_bd_net -net util_reduced_logic_1_Res [get_bd_pins rxdone_cdc/src_in] [get_bd_pins util_reduced_logic_1/Res]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins px_100ge_arp/s_axis_aresetn] [get_bd_pins tx_axis_switch/aresetn] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins cmac_usplus_0_shared/common0_drpaddr] [get_bd_pins cmac_usplus_0_shared/common0_drpdi] [get_bd_pins constant_16_0/dout]
  connect_bd_net -net xlconstant_0_dout1 [get_bd_pins tx_axis_switch/s_req_suppress] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: loopback_fork
proc create_hier_cell_loopback_fork { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_loopback_fork() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch4_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch4_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch5_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch5_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch6_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch6_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch7_i

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch7_q

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch0_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch1_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch2_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch3_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch4_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch5_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch6_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch7_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_q


  # Create pins
  create_bd_pin -dir I s_axis_aclk
  create_bd_pin -dir I s_axis_aresetn

  # Create instance: axis_broadcast_0, and set properties
  set axis_broadcast_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_0

  # Create instance: axis_broadcast_1, and set properties
  set axis_broadcast_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_1

  # Create instance: axis_broadcast_2, and set properties
  set axis_broadcast_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_2

  # Create instance: axis_broadcast_3, and set properties
  set axis_broadcast_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_3

  # Create instance: axis_broadcast_4, and set properties
  set axis_broadcast_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_4

  # Create instance: axis_broadcast_5, and set properties
  set axis_broadcast_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_5

  # Create instance: axis_broadcast_6, and set properties
  set axis_broadcast_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_6

  # Create instance: axis_broadcast_7, and set properties
  set axis_broadcast_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_7

  # Create instance: axis_broadcast_8, and set properties
  set axis_broadcast_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_8 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_8

  # Create instance: axis_broadcast_9, and set properties
  set axis_broadcast_9 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_9 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_9

  # Create instance: axis_broadcast_10, and set properties
  set axis_broadcast_10 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_10 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_10

  # Create instance: axis_broadcast_11, and set properties
  set axis_broadcast_11 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_11 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_11

  # Create instance: axis_broadcast_12, and set properties
  set axis_broadcast_12 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_12 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_12

  # Create instance: axis_broadcast_13, and set properties
  set axis_broadcast_13 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_13 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_13

  # Create instance: axis_broadcast_14, and set properties
  set axis_broadcast_14 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_14 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_14

  # Create instance: axis_broadcast_15, and set properties
  set axis_broadcast_15 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_15 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_15

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_0

  # Create instance: axis_combiner_1, and set properties
  set axis_combiner_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_1

  # Create instance: axis_combiner_2, and set properties
  set axis_combiner_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_2

  # Create instance: axis_combiner_3, and set properties
  set axis_combiner_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_3

  # Create instance: axis_combiner_4, and set properties
  set axis_combiner_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_4

  # Create instance: axis_combiner_5, and set properties
  set axis_combiner_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_5

  # Create instance: axis_combiner_6, and set properties
  set axis_combiner_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_6

  # Create instance: axis_combiner_7, and set properties
  set axis_combiner_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_7

  # Create instance: axis_reg_slice_0, and set properties
  set axis_reg_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_0

  # Create instance: axis_reg_slice_1, and set properties
  set axis_reg_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_1

  # Create instance: axis_reg_slice_2, and set properties
  set axis_reg_slice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_2

  # Create instance: axis_reg_slice_3, and set properties
  set axis_reg_slice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_3

  # Create instance: axis_reg_slice_4, and set properties
  set axis_reg_slice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_4

  # Create instance: axis_reg_slice_5, and set properties
  set axis_reg_slice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_5

  # Create instance: axis_reg_slice_6, and set properties
  set axis_reg_slice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_6

  # Create instance: axis_reg_slice_7, and set properties
  set axis_reg_slice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_7

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net axis_broadcast_0_M00_AXIS [get_bd_intf_pins axis_broadcast_0/M00_AXIS] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_0_M01_AXIS [get_bd_intf_pins m_axis_ch0_i] [get_bd_intf_pins axis_broadcast_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_10_M01_AXIS [get_bd_intf_pins m_axis_ch5_i] [get_bd_intf_pins axis_broadcast_10/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_11_M01_AXIS [get_bd_intf_pins m_axis_ch5_q] [get_bd_intf_pins axis_broadcast_11/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_12_M01_AXIS [get_bd_intf_pins m_axis_ch6_i] [get_bd_intf_pins axis_broadcast_12/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_13_M01_AXIS [get_bd_intf_pins m_axis_ch6_q] [get_bd_intf_pins axis_broadcast_13/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_14_M01_AXIS [get_bd_intf_pins m_axis_ch7_i] [get_bd_intf_pins axis_broadcast_14/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_15_M01_AXIS [get_bd_intf_pins m_axis_ch7_q] [get_bd_intf_pins axis_broadcast_15/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_1_M00_AXIS [get_bd_intf_pins axis_broadcast_1/M00_AXIS] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_1_M01_AXIS [get_bd_intf_pins m_axis_ch0_q] [get_bd_intf_pins axis_broadcast_1/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS [get_bd_intf_pins axis_broadcast_2/M00_AXIS] [get_bd_intf_pins axis_combiner_1/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS1 [get_bd_intf_pins axis_broadcast_4/M00_AXIS] [get_bd_intf_pins axis_combiner_2/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS2 [get_bd_intf_pins axis_broadcast_6/M00_AXIS] [get_bd_intf_pins axis_combiner_3/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS3 [get_bd_intf_pins axis_broadcast_8/M00_AXIS] [get_bd_intf_pins axis_combiner_4/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS4 [get_bd_intf_pins axis_broadcast_10/M00_AXIS] [get_bd_intf_pins axis_combiner_5/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS5 [get_bd_intf_pins axis_broadcast_12/M00_AXIS] [get_bd_intf_pins axis_combiner_6/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS6 [get_bd_intf_pins axis_broadcast_14/M00_AXIS] [get_bd_intf_pins axis_combiner_7/S00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M01_AXIS [get_bd_intf_pins m_axis_ch1_i] [get_bd_intf_pins axis_broadcast_2/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS [get_bd_intf_pins axis_broadcast_3/M00_AXIS] [get_bd_intf_pins axis_combiner_1/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS1 [get_bd_intf_pins axis_broadcast_5/M00_AXIS] [get_bd_intf_pins axis_combiner_2/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS2 [get_bd_intf_pins axis_broadcast_7/M00_AXIS] [get_bd_intf_pins axis_combiner_3/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS3 [get_bd_intf_pins axis_broadcast_9/M00_AXIS] [get_bd_intf_pins axis_combiner_4/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS4 [get_bd_intf_pins axis_broadcast_11/M00_AXIS] [get_bd_intf_pins axis_combiner_5/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS5 [get_bd_intf_pins axis_broadcast_13/M00_AXIS] [get_bd_intf_pins axis_combiner_6/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS6 [get_bd_intf_pins axis_broadcast_15/M00_AXIS] [get_bd_intf_pins axis_combiner_7/S01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M01_AXIS [get_bd_intf_pins m_axis_ch1_q] [get_bd_intf_pins axis_broadcast_3/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_4_M01_AXIS [get_bd_intf_pins m_axis_ch2_i] [get_bd_intf_pins axis_broadcast_4/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_5_M01_AXIS [get_bd_intf_pins m_axis_ch2_q] [get_bd_intf_pins axis_broadcast_5/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_6_M01_AXIS [get_bd_intf_pins m_axis_ch3_i] [get_bd_intf_pins axis_broadcast_6/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_7_M01_AXIS [get_bd_intf_pins m_axis_ch3_q] [get_bd_intf_pins axis_broadcast_7/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_8_M01_AXIS [get_bd_intf_pins m_axis_ch4_i] [get_bd_intf_pins axis_broadcast_8/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_9_M01_AXIS [get_bd_intf_pins m_axis_ch4_q] [get_bd_intf_pins axis_broadcast_9/M01_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_combiner_0/M_AXIS] [get_bd_intf_pins axis_reg_slice_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS [get_bd_intf_pins axis_combiner_1/M_AXIS] [get_bd_intf_pins axis_reg_slice_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS1 [get_bd_intf_pins axis_combiner_2/M_AXIS] [get_bd_intf_pins axis_reg_slice_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS2 [get_bd_intf_pins axis_combiner_3/M_AXIS] [get_bd_intf_pins axis_reg_slice_3/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS3 [get_bd_intf_pins axis_combiner_4/M_AXIS] [get_bd_intf_pins axis_reg_slice_4/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS4 [get_bd_intf_pins axis_combiner_5/M_AXIS] [get_bd_intf_pins axis_reg_slice_5/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS5 [get_bd_intf_pins axis_combiner_6/M_AXIS] [get_bd_intf_pins axis_reg_slice_6/S_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_1_M_AXIS6 [get_bd_intf_pins axis_combiner_7/M_AXIS] [get_bd_intf_pins axis_reg_slice_7/S_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_1_M_AXIS [get_bd_intf_pins m_axis_loopback_ch1_pd] [get_bd_intf_pins axis_reg_slice_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_2_M_AXIS [get_bd_intf_pins m_axis_loopback_ch2_pd] [get_bd_intf_pins axis_reg_slice_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_3_M_AXIS [get_bd_intf_pins m_axis_loopback_ch3_pd] [get_bd_intf_pins axis_reg_slice_3/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_4_M_AXIS [get_bd_intf_pins m_axis_loopback_ch4_pd] [get_bd_intf_pins axis_reg_slice_4/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_5_M_AXIS [get_bd_intf_pins m_axis_loopback_ch5_pd] [get_bd_intf_pins axis_reg_slice_5/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_6_M_AXIS [get_bd_intf_pins m_axis_loopback_ch6_pd] [get_bd_intf_pins axis_reg_slice_6/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_7_M_AXIS [get_bd_intf_pins m_axis_loopback_ch7_pd] [get_bd_intf_pins axis_reg_slice_7/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_0_M_AXIS [get_bd_intf_pins m_axis_loopback_ch0_pd] [get_bd_intf_pins axis_reg_slice_0/M_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_i_1 [get_bd_intf_pins s_axis_ch0_i] [get_bd_intf_pins axis_broadcast_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch0_q_1 [get_bd_intf_pins s_axis_ch0_q] [get_bd_intf_pins axis_broadcast_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_i_1 [get_bd_intf_pins s_axis_ch1_i] [get_bd_intf_pins axis_broadcast_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_q_1 [get_bd_intf_pins s_axis_ch1_q] [get_bd_intf_pins axis_broadcast_3/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_i_1 [get_bd_intf_pins s_axis_ch2_i] [get_bd_intf_pins axis_broadcast_4/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_q_1 [get_bd_intf_pins s_axis_ch2_q] [get_bd_intf_pins axis_broadcast_5/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_i_1 [get_bd_intf_pins s_axis_ch3_i] [get_bd_intf_pins axis_broadcast_6/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_q_1 [get_bd_intf_pins s_axis_ch3_q] [get_bd_intf_pins axis_broadcast_7/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch4_i_1 [get_bd_intf_pins s_axis_ch4_i] [get_bd_intf_pins axis_broadcast_8/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch4_q_1 [get_bd_intf_pins s_axis_ch4_q] [get_bd_intf_pins axis_broadcast_9/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch5_i_1 [get_bd_intf_pins s_axis_ch5_i] [get_bd_intf_pins axis_broadcast_10/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch5_q_1 [get_bd_intf_pins s_axis_ch5_q] [get_bd_intf_pins axis_broadcast_11/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch6_i_1 [get_bd_intf_pins s_axis_ch6_i] [get_bd_intf_pins axis_broadcast_12/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch6_q_1 [get_bd_intf_pins s_axis_ch6_q] [get_bd_intf_pins axis_broadcast_13/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch7_i_1 [get_bd_intf_pins s_axis_ch7_i] [get_bd_intf_pins axis_broadcast_14/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch7_q_1 [get_bd_intf_pins s_axis_ch7_q] [get_bd_intf_pins axis_broadcast_15/S_AXIS]

  # Create port connections
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_broadcast_0/aclk] [get_bd_pins axis_broadcast_1/aclk] [get_bd_pins axis_broadcast_10/aclk] [get_bd_pins axis_broadcast_11/aclk] [get_bd_pins axis_broadcast_12/aclk] [get_bd_pins axis_broadcast_13/aclk] [get_bd_pins axis_broadcast_14/aclk] [get_bd_pins axis_broadcast_15/aclk] [get_bd_pins axis_broadcast_2/aclk] [get_bd_pins axis_broadcast_3/aclk] [get_bd_pins axis_broadcast_4/aclk] [get_bd_pins axis_broadcast_5/aclk] [get_bd_pins axis_broadcast_6/aclk] [get_bd_pins axis_broadcast_7/aclk] [get_bd_pins axis_broadcast_8/aclk] [get_bd_pins axis_broadcast_9/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_combiner_1/aclk] [get_bd_pins axis_combiner_2/aclk] [get_bd_pins axis_combiner_3/aclk] [get_bd_pins axis_combiner_4/aclk] [get_bd_pins axis_combiner_5/aclk] [get_bd_pins axis_combiner_6/aclk] [get_bd_pins axis_combiner_7/aclk] [get_bd_pins axis_reg_slice_0/aclk] [get_bd_pins axis_reg_slice_1/aclk] [get_bd_pins axis_reg_slice_2/aclk] [get_bd_pins axis_reg_slice_3/aclk] [get_bd_pins axis_reg_slice_4/aclk] [get_bd_pins axis_reg_slice_5/aclk] [get_bd_pins axis_reg_slice_6/aclk] [get_bd_pins axis_reg_slice_7/aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_broadcast_0/aresetn] [get_bd_pins axis_broadcast_1/aresetn] [get_bd_pins axis_broadcast_10/aresetn] [get_bd_pins axis_broadcast_11/aresetn] [get_bd_pins axis_broadcast_12/aresetn] [get_bd_pins axis_broadcast_13/aresetn] [get_bd_pins axis_broadcast_14/aresetn] [get_bd_pins axis_broadcast_15/aresetn] [get_bd_pins axis_broadcast_2/aresetn] [get_bd_pins axis_broadcast_3/aresetn] [get_bd_pins axis_broadcast_4/aresetn] [get_bd_pins axis_broadcast_5/aresetn] [get_bd_pins axis_broadcast_6/aresetn] [get_bd_pins axis_broadcast_7/aresetn] [get_bd_pins axis_broadcast_8/aresetn] [get_bd_pins axis_broadcast_9/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_combiner_1/aresetn] [get_bd_pins axis_combiner_2/aresetn] [get_bd_pins axis_combiner_3/aresetn] [get_bd_pins axis_combiner_4/aresetn] [get_bd_pins axis_combiner_5/aresetn] [get_bd_pins axis_combiner_6/aresetn] [get_bd_pins axis_combiner_7/aresetn] [get_bd_pins axis_reg_slice_0/aresetn] [get_bd_pins axis_reg_slice_1/aresetn] [get_bd_pins axis_reg_slice_2/aresetn] [get_bd_pins axis_reg_slice_3/aresetn] [get_bd_pins axis_reg_slice_4/aresetn] [get_bd_pins axis_reg_slice_5/aresetn] [get_bd_pins axis_reg_slice_6/aresetn] [get_bd_pins axis_reg_slice_7/aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axis_combiner_0/m_axis_tready] [get_bd_pins axis_combiner_1/m_axis_tready] [get_bd_pins axis_combiner_2/m_axis_tready] [get_bd_pins axis_combiner_3/m_axis_tready] [get_bd_pins axis_combiner_4/m_axis_tready] [get_bd_pins axis_combiner_5/m_axis_tready] [get_bd_pins axis_combiner_6/m_axis_tready] [get_bd_pins axis_combiner_7/m_axis_tready] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: adc_merge_streams
proc create_hier_cell_adc_merge_streams { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_adc_merge_streams() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc0_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc1_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc2_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc3_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc4_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc5_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc6_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc7_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ptctl

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_i

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_q

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_pts


  # Create pins
  create_bd_pin -dir I m_axis_pdti_aclk
  create_bd_pin -dir I m_axis_pdti_aresetn
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_aclk
  create_bd_pin -dir I s_axis_aresetn
  create_bd_pin -dir I sync_rst
  create_bd_pin -dir O sync_rst_gen_out_n

  # Create instance: adc_pdti_fmtr_0, and set properties
  set adc_pdti_fmtr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_0 ]
  set_property -dict [ list \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_0

  # Create instance: adc_pdti_fmtr_1, and set properties
  set adc_pdti_fmtr_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_1 ]
  set_property -dict [ list \
   CONFIG.channel {1} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_1

  # Create instance: adc_pdti_fmtr_2, and set properties
  set adc_pdti_fmtr_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_2 ]
  set_property -dict [ list \
   CONFIG.channel {2} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_2

  # Create instance: adc_pdti_fmtr_3, and set properties
  set adc_pdti_fmtr_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_3 ]
  set_property -dict [ list \
   CONFIG.channel {3} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_3

  # Create instance: adc_pdti_fmtr_4, and set properties
  set adc_pdti_fmtr_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_4 ]
  set_property -dict [ list \
   CONFIG.channel {4} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_4

  # Create instance: adc_pdti_fmtr_5, and set properties
  set adc_pdti_fmtr_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_5 ]
  set_property -dict [ list \
   CONFIG.channel {5} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_5

  # Create instance: adc_pdti_fmtr_6, and set properties
  set adc_pdti_fmtr_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_6 ]
  set_property -dict [ list \
   CONFIG.channel {6} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_6

  # Create instance: adc_pdti_fmtr_7, and set properties
  set adc_pdti_fmtr_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_pdti_fmtr:1.1 adc_pdti_fmtr_7 ]
  set_property -dict [ list \
   CONFIG.channel {7} \
   CONFIG.has_in_tready {false} \
 ] $adc_pdti_fmtr_7

  # Create instance: axi_intercon2, and set properties
  set axi_intercon2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon2 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {8} \
 ] $axi_intercon2

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M02_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M02_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M03_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M03_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M04_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M04_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M05_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M05_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M06_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M06_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M07_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M07_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M08_TDATA_REMAP {tdata[63:0]} \
   CONFIG.M08_TUSER_REMAP {tuser[23:0]} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.M_TUSER_WIDTH {24} \
   CONFIG.NUM_MI {8} \
   CONFIG.S_TDATA_NUM_BYTES {8} \
   CONFIG.S_TUSER_WIDTH {24} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcaster_0

  # Create instance: axis_broadcaster_1, and set properties
  set axis_broadcaster_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcaster_1

  # Create instance: pdti2pctl_0, and set properties
  set block_name pdti2pctl
  set block_cell_name pdti2pctl_0
  if { [catch {set pdti2pctl_0 [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $pdti2pctl_0 eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: pts_reg_slice, and set properties
  set pts_reg_slice [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 pts_reg_slice ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {8} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {24} \
 ] $pts_reg_slice

  # Create interface connections
  connect_bd_intf_net -intf_net adc_pdti_fmtr_0_m_axis_pdti [get_bd_intf_pins adc_pdti_fmtr_0/m_axis_pdti] [get_bd_intf_pins axis_broadcaster_1/S_AXIS]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_1_m_axis_pdti [get_bd_intf_pins m_axis_adc1_pdti] [get_bd_intf_pins adc_pdti_fmtr_1/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_2_m_axis_pdti [get_bd_intf_pins m_axis_adc2_pdti] [get_bd_intf_pins adc_pdti_fmtr_2/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_3_m_axis_pdti [get_bd_intf_pins m_axis_adc3_pdti] [get_bd_intf_pins adc_pdti_fmtr_3/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_4_m_axis_pdti [get_bd_intf_pins m_axis_adc4_pdti] [get_bd_intf_pins adc_pdti_fmtr_4/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_5_m_axis_pdti [get_bd_intf_pins m_axis_adc5_pdti] [get_bd_intf_pins adc_pdti_fmtr_5/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_6_m_axis_pdti [get_bd_intf_pins m_axis_adc6_pdti] [get_bd_intf_pins adc_pdti_fmtr_6/m_axis_pdti]
  connect_bd_intf_net -intf_net adc_pdti_fmtr_7_m_axis_pdti [get_bd_intf_pins m_axis_adc7_pdti] [get_bd_intf_pins adc_pdti_fmtr_7/m_axis_pdti]
  connect_bd_intf_net -intf_net axi_intercon2_M00_AXI [get_bd_intf_pins adc_pdti_fmtr_0/s_axi_csr] [get_bd_intf_pins axi_intercon2/M00_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M01_AXI [get_bd_intf_pins adc_pdti_fmtr_1/s_axi_csr] [get_bd_intf_pins axi_intercon2/M01_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M02_AXI [get_bd_intf_pins adc_pdti_fmtr_2/s_axi_csr] [get_bd_intf_pins axi_intercon2/M02_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M03_AXI [get_bd_intf_pins adc_pdti_fmtr_3/s_axi_csr] [get_bd_intf_pins axi_intercon2/M03_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M04_AXI [get_bd_intf_pins adc_pdti_fmtr_4/s_axi_csr] [get_bd_intf_pins axi_intercon2/M04_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M05_AXI [get_bd_intf_pins adc_pdti_fmtr_5/s_axi_csr] [get_bd_intf_pins axi_intercon2/M05_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M06_AXI [get_bd_intf_pins adc_pdti_fmtr_6/s_axi_csr] [get_bd_intf_pins axi_intercon2/M06_AXI]
  connect_bd_intf_net -intf_net axi_intercon2_M07_AXI [get_bd_intf_pins adc_pdti_fmtr_7/s_axi_csr] [get_bd_intf_pins axi_intercon2/M07_AXI]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins adc_pdti_fmtr_0/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins adc_pdti_fmtr_1/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M02_AXIS [get_bd_intf_pins adc_pdti_fmtr_2/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M02_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M03_AXIS [get_bd_intf_pins adc_pdti_fmtr_3/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M03_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M04_AXIS [get_bd_intf_pins adc_pdti_fmtr_4/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M04_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M05_AXIS [get_bd_intf_pins adc_pdti_fmtr_5/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M05_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M06_AXIS [get_bd_intf_pins adc_pdti_fmtr_6/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M06_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M07_AXIS [get_bd_intf_pins adc_pdti_fmtr_7/s_axis_pts] [get_bd_intf_pins axis_broadcaster_0/M07_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M00_AXIS [get_bd_intf_pins axis_broadcaster_1/M00_AXIS] [get_bd_intf_pins pdti2pctl_0/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcaster_1_M01_AXIS [get_bd_intf_pins m_axis_adc0_pdti] [get_bd_intf_pins axis_broadcaster_1/M01_AXIS]
  connect_bd_intf_net -intf_net pdti2pctl_0_m_axis_ptctl [get_bd_intf_pins m_axis_ptctl] [get_bd_intf_pins pdti2pctl_0/m_axis_ptctl]
  connect_bd_intf_net -intf_net pts_reg_slice_M_AXIS [get_bd_intf_pins axis_broadcaster_0/S_AXIS] [get_bd_intf_pins pts_reg_slice/M_AXIS]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon2/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_i_1 [get_bd_intf_pins s_axis_ch0_i] [get_bd_intf_pins adc_pdti_fmtr_0/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch0_q_1 [get_bd_intf_pins s_axis_ch0_q] [get_bd_intf_pins adc_pdti_fmtr_0/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch1_i_1 [get_bd_intf_pins s_axis_ch1_i] [get_bd_intf_pins adc_pdti_fmtr_1/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch1_q_1 [get_bd_intf_pins s_axis_ch1_q] [get_bd_intf_pins adc_pdti_fmtr_1/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch2_i_1 [get_bd_intf_pins s_axis_ch2_i] [get_bd_intf_pins adc_pdti_fmtr_2/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch2_q_1 [get_bd_intf_pins s_axis_ch2_q] [get_bd_intf_pins adc_pdti_fmtr_2/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch3_i_1 [get_bd_intf_pins s_axis_ch3_i] [get_bd_intf_pins adc_pdti_fmtr_3/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch3_q_1 [get_bd_intf_pins s_axis_ch3_q] [get_bd_intf_pins adc_pdti_fmtr_3/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch4_i_1 [get_bd_intf_pins s_axis_ch4_i] [get_bd_intf_pins adc_pdti_fmtr_4/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch4_q_1 [get_bd_intf_pins s_axis_ch4_q] [get_bd_intf_pins adc_pdti_fmtr_4/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch5_i_1 [get_bd_intf_pins s_axis_ch5_i] [get_bd_intf_pins adc_pdti_fmtr_5/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch5_q_1 [get_bd_intf_pins s_axis_ch5_q] [get_bd_intf_pins adc_pdti_fmtr_5/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch6_i_1 [get_bd_intf_pins s_axis_ch6_i] [get_bd_intf_pins adc_pdti_fmtr_6/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch6_q_1 [get_bd_intf_pins s_axis_ch6_q] [get_bd_intf_pins adc_pdti_fmtr_6/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_ch7_i_1 [get_bd_intf_pins s_axis_ch7_i] [get_bd_intf_pins adc_pdti_fmtr_7/s_axis_i]
  connect_bd_intf_net -intf_net s_axis_ch7_q_1 [get_bd_intf_pins s_axis_ch7_q] [get_bd_intf_pins adc_pdti_fmtr_7/s_axis_q]
  connect_bd_intf_net -intf_net s_axis_pts_1 [get_bd_intf_pins s_axis_pts] [get_bd_intf_pins pts_reg_slice/S_AXIS]

  # Create port connections
  connect_bd_net -net adc_pdti_fmtr_0_sync_rst_gen_out_n [get_bd_pins sync_rst_gen_out_n] [get_bd_pins adc_pdti_fmtr_0/sync_rst_gen_out_n]
  connect_bd_net -net axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins adc_pdti_fmtr_0/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_1/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_2/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_3/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_4/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_5/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_6/s_axis_aclk] [get_bd_pins adc_pdti_fmtr_7/s_axis_aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins pts_reg_slice/aclk]
  connect_bd_net -net axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_0/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_1/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_2/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_3/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_4/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_5/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_6/s_axis_aresetn] [get_bd_pins adc_pdti_fmtr_7/s_axis_aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins pts_reg_slice/aresetn]
  connect_bd_net -net m_axis_pdti_aclk_1 [get_bd_pins m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_0/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_1/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_2/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_3/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_4/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_5/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_6/m_axis_pdti_aclk] [get_bd_pins adc_pdti_fmtr_7/m_axis_pdti_aclk] [get_bd_pins axis_broadcaster_1/aclk] [get_bd_pins pdti2pctl_0/s_axis_pdti_aclk]
  connect_bd_net -net m_axis_pdti_aresetn_1 [get_bd_pins m_axis_pdti_aresetn] [get_bd_pins adc_pdti_fmtr_0/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_1/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_2/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_3/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_4/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_5/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_6/m_axis_aresetn] [get_bd_pins adc_pdti_fmtr_7/m_axis_aresetn] [get_bd_pins axis_broadcaster_1/aresetn] [get_bd_pins pdti2pctl_0/s_axis_aresetn]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_0/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_1/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_2/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_3/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_4/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_5/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_6/s_axi_csr_aclk] [get_bd_pins adc_pdti_fmtr_7/s_axi_csr_aclk] [get_bd_pins axi_intercon2/ACLK] [get_bd_pins axi_intercon2/M00_ACLK] [get_bd_pins axi_intercon2/M01_ACLK] [get_bd_pins axi_intercon2/M02_ACLK] [get_bd_pins axi_intercon2/M03_ACLK] [get_bd_pins axi_intercon2/M04_ACLK] [get_bd_pins axi_intercon2/M05_ACLK] [get_bd_pins axi_intercon2/M06_ACLK] [get_bd_pins axi_intercon2/M07_ACLK] [get_bd_pins axi_intercon2/S00_ACLK]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_0/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_1/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_2/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_3/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_4/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_5/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_6/s_axi_csr_aresetn] [get_bd_pins adc_pdti_fmtr_7/s_axi_csr_aresetn] [get_bd_pins axi_intercon2/ARESETN] [get_bd_pins axi_intercon2/M00_ARESETN] [get_bd_pins axi_intercon2/M01_ARESETN] [get_bd_pins axi_intercon2/M02_ARESETN] [get_bd_pins axi_intercon2/M03_ARESETN] [get_bd_pins axi_intercon2/M04_ARESETN] [get_bd_pins axi_intercon2/M05_ARESETN] [get_bd_pins axi_intercon2/M06_ARESETN] [get_bd_pins axi_intercon2/M07_ARESETN] [get_bd_pins axi_intercon2/S00_ARESETN]
  connect_bd_net -net sync_rst_1 [get_bd_pins sync_rst] [get_bd_pins adc_pdti_fmtr_0/sync_rst] [get_bd_pins adc_pdti_fmtr_1/sync_rst] [get_bd_pins adc_pdti_fmtr_2/sync_rst] [get_bd_pins adc_pdti_fmtr_3/sync_rst] [get_bd_pins adc_pdti_fmtr_4/sync_rst] [get_bd_pins adc_pdti_fmtr_5/sync_rst] [get_bd_pins adc_pdti_fmtr_6/sync_rst] [get_bd_pins adc_pdti_fmtr_7/sync_rst]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: test_sig_generator
proc create_hier_cell_test_sig_generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_test_sig_generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ts

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ptctl


  # Create pins
  create_bd_pin -dir O irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I -type clk s_axis_aclk
  create_bd_pin -dir I -type rst s_axis_aresetn
  create_bd_pin -dir I -type clk s_axis_hr_aclk
  create_bd_pin -dir I -type rst s_axis_hr_aresetn

  # Create instance: axis_clock_converter_1, and set properties
  set axis_clock_converter_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_clock_converter_1

  # Create instance: axis_dwidth_converter_0, and set properties
  set axis_dwidth_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 axis_dwidth_converter_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_BITS_PER_BYTE {0} \
 ] $axis_dwidth_converter_0

  # Create instance: axis_reg_slice_0, and set properties
  set axis_reg_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_0

  # Create instance: axis_reg_slice_1, and set properties
  set axis_reg_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_1

  # Create instance: px_test_sig_gen_16_0, and set properties
  set px_test_sig_gen_16_0 [ create_bd_cell -type ip -vlnv www.pentek.com:px_ip:px_test_sig_gen_16:1.0 px_test_sig_gen_16_0 ]

  # Create instance: ts_tdata_pad, and set properties
  set ts_tdata_pad [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_tdata_pad:1.0 ts_tdata_pad ]
  set_property -dict [ list \
   CONFIG.has_tready {false} \
   CONFIG.in_data_width {128} \
   CONFIG.out_data_width {256} \
   CONFIG.pad_type {upper0} \
 ] $ts_tdata_pad

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_ts] [get_bd_intf_pins ts_tdata_pad/m_axis]
  connect_bd_intf_net -intf_net axis_clock_converter_1_M_AXIS [get_bd_intf_pins axis_clock_converter_1/M_AXIS] [get_bd_intf_pins axis_dwidth_converter_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_dwidth_converter_0_M_AXIS [get_bd_intf_pins axis_dwidth_converter_0/M_AXIS] [get_bd_intf_pins axis_reg_slice_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_0_M_AXIS [get_bd_intf_pins axis_reg_slice_0/M_AXIS] [get_bd_intf_pins px_test_sig_gen_16_0/s_axis_ptctl]
  connect_bd_intf_net -intf_net axis_reg_slice_1_M_AXIS [get_bd_intf_pins axis_reg_slice_1/M_AXIS] [get_bd_intf_pins ts_tdata_pad/s_axis]
  connect_bd_intf_net -intf_net px_test_sig_gen_16_0_m_axis_pd_testsig [get_bd_intf_pins axis_clock_converter_1/S_AXIS] [get_bd_intf_pins px_test_sig_gen_16_0/m_axis_pd_testsig]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins px_test_sig_gen_16_0/s_axi_csr]
  connect_bd_intf_net -intf_net s_axis_ptctl_1 [get_bd_intf_pins s_axis_ptctl] [get_bd_intf_pins axis_reg_slice_0/S_AXIS]

  # Create port connections
  connect_bd_net -net px_test_sig_gen_16_0_irq [get_bd_pins irq] [get_bd_pins px_test_sig_gen_16_0/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins px_test_sig_gen_16_0/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins px_test_sig_gen_16_0/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_clock_converter_1/m_axis_aclk] [get_bd_pins axis_dwidth_converter_0/aclk] [get_bd_pins axis_reg_slice_1/aclk] [get_bd_pins ts_tdata_pad/axis_aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_clock_converter_1/m_axis_aresetn] [get_bd_pins axis_dwidth_converter_0/aresetn] [get_bd_pins axis_reg_slice_1/aresetn] [get_bd_pins ts_tdata_pad/axis_aresetn]
  connect_bd_net -net s_axis_hr_aclk_1 [get_bd_pins s_axis_hr_aclk] [get_bd_pins axis_clock_converter_1/s_axis_aclk] [get_bd_pins axis_reg_slice_0/aclk] [get_bd_pins px_test_sig_gen_16_0/s_axis_aclk]
  connect_bd_net -net s_axis_hr_aresetn_1 [get_bd_pins s_axis_hr_aresetn] [get_bd_pins axis_clock_converter_1/s_axis_aresetn] [get_bd_pins axis_reg_slice_0/aresetn] [get_bd_pins px_test_sig_gen_16_0/s_axis_aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axis_dwidth_converter_0/m_axis_tready] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: const_80per_dc_level
proc create_hier_cell_const_80per_dc_level { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_const_80per_dc_level() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis


  # Create pins
  create_bd_pin -dir I axis_aclk

  # Create instance: px_axis_compose, and set properties
  set px_axis_compose [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_compose:1.0 px_axis_compose ]
  set_property -dict [ list \
   CONFIG.tdata_width {256} \
 ] $px_axis_compose

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0x0000000000000000000000000000000066666666666666666666666666666666} \
   CONFIG.CONST_WIDTH {256} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]

  # Create interface connections
  connect_bd_intf_net -intf_net px_axis_compose_0_m_axis [get_bd_intf_pins m_axis] [get_bd_intf_pins px_axis_compose/m_axis]

  # Create port connections
  connect_bd_net -net axis_aclk_1 [get_bd_pins axis_aclk] [get_bd_pins px_axis_compose/aclk]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins px_axis_compose/s_axis_tdata] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins px_axis_compose/aresetn] [get_bd_pins px_axis_compose/s_axis_tvalid] [get_bd_pins xlconstant_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: chirp_generator
proc create_hier_cell_chirp_generator { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_chirp_generator() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_chirp

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ptctl


  # Create pins
  create_bd_pin -dir O -type intr dac_chirp_irq
  create_bd_pin -dir I -type clk s_axi_csr_aclk
  create_bd_pin -dir I -type rst s_axi_csr_aresetn
  create_bd_pin -dir I -type clk s_axis_aclk
  create_bd_pin -dir I -type rst s_axis_aresetn
  create_bd_pin -dir I -type clk s_axis_hr_aclk
  create_bd_pin -dir I -type rst s_axis_hr_aresetn

  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcaster_0

  # Create instance: axis_chirp_gen, and set properties
  set axis_chirp_gen [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_chirp_gen:1.1 axis_chirp_gen ]
  set_property -dict [ list \
   CONFIG.interleave_output {false} \
   CONFIG.samples_per_cycle {8} \
 ] $axis_chirp_gen

  # Create instance: axis_clock_converter_0, and set properties
  set axis_clock_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_clock_converter:1.1 axis_clock_converter_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.IS_ACLK_ASYNC {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_clock_converter_0

  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_0

  # Create instance: axis_combiner_1, and set properties
  set axis_combiner_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_combiner_1

  # Create instance: axis_reg_slice_0, and set properties
  set axis_reg_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {8} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_0

  # Create instance: axis_reg_slice_1, and set properties
  set axis_reg_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {8} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_1

  # Create instance: axis_reg_slice_2, and set properties
  set axis_reg_slice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_reg_slice_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_reg_slice_2

  # Create instance: axis_subset_conv_i_8, and set properties
  set axis_subset_conv_i_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_8 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_8

  # Create instance: axis_subset_conv_q_8, and set properties
  set axis_subset_conv_q_8 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_8 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_8

  # Create instance: chrpi_dwidth_conv, and set properties
  set chrpi_dwidth_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 chrpi_dwidth_conv ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_BITS_PER_BYTE {0} \
 ] $chrpi_dwidth_conv

  # Create instance: chrpi_tdata_pad, and set properties
  set chrpi_tdata_pad [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_tdata_pad:1.0 chrpi_tdata_pad ]
  set_property -dict [ list \
   CONFIG.has_tready {false} \
   CONFIG.in_data_width {64} \
   CONFIG.out_data_width {128} \
   CONFIG.pad_type {upper0} \
 ] $chrpi_tdata_pad

  # Create instance: chrpq_dwidth_conv, and set properties
  set chrpq_dwidth_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_dwidth_converter:1.1 chrpq_dwidth_conv ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {8} \
   CONFIG.S_TDATA_NUM_BYTES {16} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_BITS_PER_BYTE {0} \
 ] $chrpq_dwidth_conv

  # Create instance: chrpq_tdata_pad, and set properties
  set chrpq_tdata_pad [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_tdata_pad:1.0 chrpq_tdata_pad ]
  set_property -dict [ list \
   CONFIG.has_tready {false} \
   CONFIG.in_data_width {64} \
   CONFIG.out_data_width {128} \
   CONFIG.pad_type {upper0} \
 ] $chrpq_tdata_pad

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_chirp] [get_bd_intf_pins axis_combiner_1/M_AXIS]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axis_chirp_gen/s_axi_csr]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M00_AXIS [get_bd_intf_pins axis_broadcaster_0/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_8/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_0/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_8/S_AXIS]
  connect_bd_intf_net -intf_net axis_chirp_gen_m_axis_pd_i [get_bd_intf_pins axis_chirp_gen/m_axis_pd_i] [get_bd_intf_pins axis_combiner_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_chirp_gen_m_axis_pd_q [get_bd_intf_pins axis_chirp_gen/m_axis_pd_q] [get_bd_intf_pins axis_combiner_0/S01_AXIS]
  connect_bd_intf_net -intf_net axis_clock_converter_0_M_AXIS [get_bd_intf_pins axis_broadcaster_0/S_AXIS] [get_bd_intf_pins axis_clock_converter_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_combiner_0_M_AXIS [get_bd_intf_pins axis_clock_converter_0/S_AXIS] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_reg_slice_0_M_AXIS [get_bd_intf_pins axis_reg_slice_0/M_AXIS] [get_bd_intf_pins chrpi_tdata_pad/s_axis]
  connect_bd_intf_net -intf_net axis_reg_slice_1_M_AXIS [get_bd_intf_pins axis_reg_slice_1/M_AXIS] [get_bd_intf_pins chrpq_tdata_pad/s_axis]
  connect_bd_intf_net -intf_net axis_reg_slice_2_M_AXIS [get_bd_intf_pins axis_chirp_gen/s_axis_ptctl] [get_bd_intf_pins axis_reg_slice_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_i_8_M_AXIS [get_bd_intf_pins axis_subset_conv_i_8/M_AXIS] [get_bd_intf_pins chrpi_dwidth_conv/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_q_8_M_AXIS [get_bd_intf_pins axis_subset_conv_q_8/M_AXIS] [get_bd_intf_pins chrpq_dwidth_conv/S_AXIS]
  connect_bd_intf_net -intf_net chrpi_dwidth_conv_M_AXIS [get_bd_intf_pins axis_reg_slice_0/S_AXIS] [get_bd_intf_pins chrpi_dwidth_conv/M_AXIS]
  connect_bd_intf_net -intf_net chrpq_dwidth_conv_M_AXIS [get_bd_intf_pins axis_reg_slice_1/S_AXIS] [get_bd_intf_pins chrpq_dwidth_conv/M_AXIS]
  connect_bd_intf_net -intf_net px_axis_tdata_pad_1_m_axis [get_bd_intf_pins axis_combiner_1/S00_AXIS] [get_bd_intf_pins chrpi_tdata_pad/m_axis]
  connect_bd_intf_net -intf_net px_axis_tdata_pad_2_m_axis [get_bd_intf_pins axis_combiner_1/S01_AXIS] [get_bd_intf_pins chrpq_tdata_pad/m_axis]
  connect_bd_intf_net -intf_net s_axis_ptctl_1 [get_bd_intf_pins s_axis_ptctl] [get_bd_intf_pins axis_reg_slice_2/S_AXIS]

  # Create port connections
  connect_bd_net -net axis_chirp_gen_irq [get_bd_pins dac_chirp_irq] [get_bd_pins axis_chirp_gen/irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axis_chirp_gen/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axis_chirp_gen/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_clock_converter_0/m_axis_aclk] [get_bd_pins axis_combiner_1/aclk] [get_bd_pins axis_reg_slice_0/aclk] [get_bd_pins axis_reg_slice_1/aclk] [get_bd_pins axis_subset_conv_i_8/aclk] [get_bd_pins axis_subset_conv_q_8/aclk] [get_bd_pins chrpi_dwidth_conv/aclk] [get_bd_pins chrpi_tdata_pad/axis_aclk] [get_bd_pins chrpq_dwidth_conv/aclk] [get_bd_pins chrpq_tdata_pad/axis_aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_clock_converter_0/m_axis_aresetn] [get_bd_pins axis_combiner_1/aresetn] [get_bd_pins axis_reg_slice_0/aresetn] [get_bd_pins axis_reg_slice_1/aresetn] [get_bd_pins axis_subset_conv_i_8/aresetn] [get_bd_pins axis_subset_conv_q_8/aresetn] [get_bd_pins chrpi_dwidth_conv/aresetn] [get_bd_pins chrpi_tdata_pad/axis_aresetn] [get_bd_pins chrpq_dwidth_conv/aresetn] [get_bd_pins chrpq_tdata_pad/axis_aresetn]
  connect_bd_net -net s_axis_hr_aclk_1 [get_bd_pins s_axis_hr_aclk] [get_bd_pins axis_chirp_gen/s_axis_aclk] [get_bd_pins axis_clock_converter_0/s_axis_aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_reg_slice_2/aclk]
  connect_bd_net -net s_axis_hr_aresetn_1 [get_bd_pins s_axis_hr_aresetn] [get_bd_pins axis_chirp_gen/s_axis_aresetn] [get_bd_pins axis_clock_converter_0/s_axis_aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_reg_slice_2/aresetn]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axis_clock_converter_0/m_axis_tready] [get_bd_pins axis_combiner_1/m_axis_tready] [get_bd_pins chrpi_dwidth_conv/m_axis_tready] [get_bd_pins chrpq_dwidth_conv/m_axis_tready] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ch4567_adc_acq
proc create_hier_cell_ch4567_adc_acq { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ch4567_adc_acq() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_100ge_ch4567_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti


  # Create pins
  create_bd_pin -dir O adc_dma_4_irq
  create_bd_pin -dir O adc_dma_5_irq
  create_bd_pin -dir O adc_dma_6_irq
  create_bd_pin -dir O adc_dma_7_irq
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch4_flowctl_irq
  create_bd_pin -dir O ch4_ufifo_irq
  create_bd_pin -dir O ch5_flowctl_irq
  create_bd_pin -dir O ch5_ufifo_irq
  create_bd_pin -dir O ch6_flowctl_irq
  create_bd_pin -dir O ch6_ufifo_irq
  create_bd_pin -dir O ch7_flowctl_irq
  create_bd_pin -dir O ch7_ufifo_irq
  create_bd_pin -dir I eth_fifo_aresetn
  create_bd_pin -dir I -from 16 -to 0 eth_pkt_size
  create_bd_pin -dir I eth_pkt_size_en
  create_bd_pin -dir I eth_txclk
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_pdti_aclk
  create_bd_pin -dir I s_axis_pdti_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {5} \
 ] $axi_interconnect_0

  # Create instance: clk_conv
  create_hier_cell_clk_conv_1 $hier_obj clk_conv

  # Create instance: dest_route
  create_hier_cell_dest_route_1 $hier_obj dest_route

  # Create instance: dma
  create_hier_cell_dma_1 $hier_obj dma

  # Create instance: fifo_ctl_src_sel, and set properties
  set block_name fifo_ctl_src_sel
  set block_cell_name fifo_ctl_src_sel
  if { [catch {set fifo_ctl_src_sel [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $fifo_ctl_src_sel eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: fifo_storage
  create_hier_cell_fifo_storage_1 $hier_obj fifo_storage

  # Create instance: fiforst_cdc_async_rst, and set properties
  set fiforst_cdc_async_rst [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 fiforst_cdc_async_rst ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
 ] $fiforst_cdc_async_rst

  # Create instance: ge_arb_1
  create_hier_cell_ge_arb_1 $hier_obj ge_arb_1

  # Create instance: payload_packetize
  create_hier_cell_payload_packetize_1 $hier_obj payload_packetize

  # Create instance: trig_acquire
  create_hier_cell_trig_acquire_1 $hier_obj trig_acquire

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_100ge_ch4567_ppld] [get_bd_intf_pins ge_arb_1/m_axis_ppld]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins trig_acquire/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins payload_packetize/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins dma/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins fifo_ctl_src_sel/s_axi_csr]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch0_ppkt [get_bd_intf_pins clk_conv/m_axis_ch0_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch1_ppkt [get_bd_intf_pins clk_conv/m_axis_ch1_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch2_ppkt [get_bd_intf_pins clk_conv/m_axis_ch2_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch3_ppkt [get_bd_intf_pins clk_conv/m_axis_ch3_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch3_ppkt]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch0a_ppld [get_bd_intf_pins dest_route/m_axis_ch0a_ppld] [get_bd_intf_pins dma/s_axis_ch0_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch0b_ppld [get_bd_intf_pins dest_route/m_axis_ch0b_ppld] [get_bd_intf_pins ge_arb_1/s_axis_ch0_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch1a_ppld [get_bd_intf_pins dest_route/m_axis_ch1a_ppld] [get_bd_intf_pins dma/s_axis_ch1_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch1b_ppld [get_bd_intf_pins dest_route/m_axis_ch1b_ppld] [get_bd_intf_pins ge_arb_1/s_axis_ch1_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch2a_ppld [get_bd_intf_pins dest_route/m_axis_ch2a_ppld] [get_bd_intf_pins dma/s_axis_ch2_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch2b_ppld [get_bd_intf_pins dest_route/m_axis_ch2b_ppld] [get_bd_intf_pins ge_arb_1/s_axis_ch2_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch3a_ppld [get_bd_intf_pins dest_route/m_axis_ch3a_ppld] [get_bd_intf_pins dma/s_axis_ch3_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch3b_ppld [get_bd_intf_pins dest_route/m_axis_ch3b_ppld] [get_bd_intf_pins ge_arb_1/s_axis_ch3_ppld]
  connect_bd_intf_net -intf_net dma_m_axi_fpd [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins dma/m_axi_fpd]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch0_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch0_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch1_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch1_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch2_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch2_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch3_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch3_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch3_ppkt]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch0_ppld [get_bd_intf_pins dest_route/s_axis_ch0_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch0_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch1_ppld [get_bd_intf_pins dest_route/s_axis_ch1_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch1_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch2_ppld [get_bd_intf_pins dest_route/s_axis_ch2_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch2_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch3_ppld [get_bd_intf_pins dest_route/s_axis_ch3_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch3_ppld]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins fifo_storage/s_axi_csr]
  connect_bd_intf_net -intf_net s_axi_csr_2 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch0_pdti]
  connect_bd_intf_net -intf_net s_axis_ch1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch1_pdti]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch2_pdti]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch3_pdti]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch0_ppkt [get_bd_intf_pins clk_conv/s_axis_ch0_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch1_ppkt [get_bd_intf_pins clk_conv/s_axis_ch1_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch2_ppkt [get_bd_intf_pins clk_conv/s_axis_ch2_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch3_ppkt [get_bd_intf_pins clk_conv/s_axis_ch3_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch3_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins clk_conv/axi_fpd_aclk] [get_bd_pins dest_route/axi_fpd_aclk] [get_bd_pins dma/axi_fpd_aclk] [get_bd_pins fifo_ctl_src_sel/axis_ppld_aclk] [get_bd_pins fifo_storage/axi_fpd_aclk] [get_bd_pins fiforst_cdc_async_rst/dest_clk] [get_bd_pins ge_arb_1/axi_fpd_aclk] [get_bd_pins payload_packetize/axi_fpd_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins clk_conv/axi_fpd_aresetn] [get_bd_pins dma/axi_fpd_aresetn] [get_bd_pins fifo_storage/axi_fpd_aresetn] [get_bd_pins payload_packetize/axi_fpd_aresetn]
  connect_bd_net -net axi_fpd_aresetn_2 [get_bd_pins fiforst_cdc_async_rst/dest_arst] [get_bd_pins ge_arb_1/axi_fpd_aresetn]
  connect_bd_net -net ch0_fifo_resetn_1 [get_bd_pins clk_conv/ch0_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch0_fifo_aresetn] [get_bd_pins fifo_storage/ch0_fifo_resetn]
  connect_bd_net -net ch0_override_pkt_size_en_1 [get_bd_pins fifo_ctl_src_sel/ch0_override_pkt_size_en] [get_bd_pins payload_packetize/ch0_override_pkt_size_en]
  connect_bd_net -net ch1_override_pkt_size_en_1 [get_bd_pins fifo_ctl_src_sel/ch1_override_pkt_size_en] [get_bd_pins payload_packetize/ch1_override_pkt_size_en]
  connect_bd_net -net ch2_override_pkt_size_en_1 [get_bd_pins fifo_ctl_src_sel/ch2_override_pkt_size_en] [get_bd_pins payload_packetize/ch2_override_pkt_size_en]
  connect_bd_net -net ch3_override_pkt_size_en_1 [get_bd_pins fifo_ctl_src_sel/ch3_override_pkt_size_en] [get_bd_pins payload_packetize/ch3_override_pkt_size_en]
  connect_bd_net -net dma_adc_dma_4_irq [get_bd_pins adc_dma_4_irq] [get_bd_pins dma/adc_dma_4_irq]
  connect_bd_net -net dma_adc_dma_5_irq [get_bd_pins adc_dma_5_irq] [get_bd_pins dma/adc_dma_5_irq]
  connect_bd_net -net dma_adc_dma_6_irq [get_bd_pins adc_dma_6_irq] [get_bd_pins dma/adc_dma_6_irq]
  connect_bd_net -net dma_adc_dma_7_irq [get_bd_pins adc_dma_7_irq] [get_bd_pins dma/adc_dma_7_irq]
  connect_bd_net -net dma_ch0_external_fifo_rstn [get_bd_pins dma/ch0_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch0a_fifo_aresetn]
  connect_bd_net -net dma_ch0_payload_size_ctl [get_bd_pins dma/ch0_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch0a_pkt_size]
  connect_bd_net -net dma_ch0_payload_size_ctl_en [get_bd_pins dma/ch0_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch0a_pkt_size_en]
  connect_bd_net -net dma_ch1_external_fifo_rstn [get_bd_pins dma/ch1_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch1a_fifo_aresetn]
  connect_bd_net -net dma_ch1_payload_size_ctl [get_bd_pins dma/ch1_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch1a_pkt_size]
  connect_bd_net -net dma_ch1_payload_size_ctl_en [get_bd_pins dma/ch1_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch1a_pkt_size_en]
  connect_bd_net -net dma_ch2_external_fifo_rstn [get_bd_pins dma/ch2_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch2a_fifo_aresetn]
  connect_bd_net -net dma_ch2_payload_size_ctl [get_bd_pins dma/ch2_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch2a_pkt_size]
  connect_bd_net -net dma_ch2_payload_size_ctl_en [get_bd_pins dma/ch2_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch2a_pkt_size_en]
  connect_bd_net -net dma_ch3_external_fifo_rstn [get_bd_pins dma/ch3_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch3a_fifo_aresetn]
  connect_bd_net -net dma_ch3_payload_size_ctl [get_bd_pins dma/ch3_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch3a_pkt_size]
  connect_bd_net -net dma_ch3_payload_size_ctl_en [get_bd_pins dma/ch3_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch3a_pkt_size_en]
  connect_bd_net -net eth_fifo_aresetn_1 [get_bd_pins eth_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch0b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch1b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch2b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch3b_fifo_aresetn] [get_bd_pins fiforst_cdc_async_rst/src_arst]
  connect_bd_net -net eth_pkt_size_1 [get_bd_pins eth_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch0b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch1b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch2b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch3b_pkt_size]
  connect_bd_net -net eth_pkt_size_en_1 [get_bd_pins eth_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch0b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch1b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch2b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch3b_pkt_size_en]
  connect_bd_net -net eth_txclk_1 [get_bd_pins eth_txclk] [get_bd_pins fifo_ctl_src_sel/txclk]
  connect_bd_net -net fifo_ctl_src_sel_ch0_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch0_override_pkt_size] [get_bd_pins payload_packetize/ch0_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch1_fifo_aresetn [get_bd_pins clk_conv/ch1_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch1_fifo_aresetn] [get_bd_pins fifo_storage/ch1_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch1_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch1_override_pkt_size] [get_bd_pins payload_packetize/ch1_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch2_fifo_aresetn [get_bd_pins clk_conv/ch2_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch2_fifo_aresetn] [get_bd_pins fifo_storage/ch2_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch2_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch2_override_pkt_size] [get_bd_pins payload_packetize/ch2_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch3_fifo_aresetn [get_bd_pins clk_conv/ch3_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch3_fifo_aresetn] [get_bd_pins fifo_storage/ch3_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch3_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch3_override_pkt_size] [get_bd_pins payload_packetize/ch3_override_pkt_size]
  connect_bd_net -net fifo_storage_ch0_fifo_rst_out_n [get_bd_pins dest_route/ch0_fifo_rst_in_n] [get_bd_pins fifo_storage/ch0_fifo_rst_out_n] [get_bd_pins payload_packetize/ch0_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch0_ufifo_irq [get_bd_pins ch4_ufifo_irq] [get_bd_pins fifo_storage/ch0_ufifo_irq]
  connect_bd_net -net fifo_storage_ch1_fifo_rst_out_n [get_bd_pins dest_route/ch1_fifo_rst_in_n] [get_bd_pins fifo_storage/ch1_fifo_rst_out_n] [get_bd_pins payload_packetize/ch1_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch1_ufifo_irq [get_bd_pins ch5_ufifo_irq] [get_bd_pins fifo_storage/ch1_ufifo_irq]
  connect_bd_net -net fifo_storage_ch2_fifo_rst_out_n [get_bd_pins dest_route/ch2_fifo_rst_in_n] [get_bd_pins fifo_storage/ch2_fifo_rst_out_n] [get_bd_pins payload_packetize/ch2_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch2_ufifo_irq [get_bd_pins ch6_ufifo_irq] [get_bd_pins fifo_storage/ch2_ufifo_irq]
  connect_bd_net -net fifo_storage_ch3_fifo_rst_out_n [get_bd_pins dest_route/ch3_fifo_rst_in_n] [get_bd_pins fifo_storage/ch3_fifo_rst_out_n] [get_bd_pins payload_packetize/ch3_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch3_ufifo_irq [get_bd_pins ch7_ufifo_irq] [get_bd_pins fifo_storage/ch3_ufifo_irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins dma/s_axi_csr_aclk] [get_bd_pins fifo_ctl_src_sel/s_axi_csr_aclk] [get_bd_pins fifo_storage/s_axi_csr_aclk] [get_bd_pins payload_packetize/s_axi_csr_aclk] [get_bd_pins trig_acquire/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins dma/s_axi_csr_aresetn] [get_bd_pins fifo_ctl_src_sel/s_axi_csr_aresetn] [get_bd_pins fifo_storage/s_axi_csr_aresetn] [get_bd_pins payload_packetize/s_axi_csr_aresetn] [get_bd_pins trig_acquire/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins clk_conv/s_axis_pdti_aclk] [get_bd_pins trig_acquire/s_axis_pdti_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins s_axis_pdti_aresetn] [get_bd_pins trig_acquire/s_axis_pdti_aresetn]
  connect_bd_net -net trig_acquire_ch0_flowctl_irq [get_bd_pins ch4_flowctl_irq] [get_bd_pins trig_acquire/ch0_flowctl_irq]
  connect_bd_net -net trig_acquire_ch1_flowctl_irq [get_bd_pins ch5_flowctl_irq] [get_bd_pins trig_acquire/ch1_flowctl_irq]
  connect_bd_net -net trig_acquire_ch2_flowctl_irq [get_bd_pins ch6_flowctl_irq] [get_bd_pins trig_acquire/ch2_flowctl_irq]
  connect_bd_net -net trig_acquire_ch3_flowctl_irq [get_bd_pins ch7_flowctl_irq] [get_bd_pins trig_acquire/ch3_flowctl_irq]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ch0123_adc_acq
proc create_hier_cell_ch0123_adc_acq { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ch0123_adc_acq() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_100ge_ch0123_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti


  # Create pins
  create_bd_pin -dir O adc_dma_0_irq
  create_bd_pin -dir O adc_dma_1_irq
  create_bd_pin -dir O adc_dma_2_irq
  create_bd_pin -dir O adc_dma_3_irq
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_flowctl_irq
  create_bd_pin -dir O ch0_ufifo_irq
  create_bd_pin -dir O ch1_flowctl_irq
  create_bd_pin -dir O ch1_ufifo_irq
  create_bd_pin -dir O ch2_flowctl_irq
  create_bd_pin -dir O ch2_ufifo_irq
  create_bd_pin -dir O ch3_flowctl_irq
  create_bd_pin -dir O ch3_ufifo_irq
  create_bd_pin -dir I eth_fifo_aresetn
  create_bd_pin -dir I -from 16 -to 0 eth_pkt_size
  create_bd_pin -dir I eth_pkt_size_en
  create_bd_pin -dir I eth_txclk
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_pdti_aclk
  create_bd_pin -dir I s_axis_pdti_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {0} \
   CONFIG.M01_HAS_REGSLICE {0} \
   CONFIG.M02_HAS_REGSLICE {0} \
   CONFIG.M03_HAS_REGSLICE {0} \
   CONFIG.M04_HAS_REGSLICE {0} \
   CONFIG.M05_HAS_REGSLICE {0} \
   CONFIG.NUM_MI {5} \
   CONFIG.S00_HAS_REGSLICE {0} \
 ] $axi_interconnect_0

  # Create instance: clk_conv
  create_hier_cell_clk_conv $hier_obj clk_conv

  # Create instance: dest_route
  create_hier_cell_dest_route $hier_obj dest_route

  # Create instance: dma
  create_hier_cell_dma $hier_obj dma

  # Create instance: fifo_ctl_src_sel, and set properties
  set block_name fifo_ctl_src_sel
  set block_cell_name fifo_ctl_src_sel
  if { [catch {set fifo_ctl_src_sel [create_bd_cell -type module -reference $block_name $block_cell_name] } errmsg] } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2095 -severity "ERROR" "Unable to add referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   } elseif { $fifo_ctl_src_sel eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2096 -severity "ERROR" "Unable to referenced block <$block_name>. Please add the files for ${block_name}'s definition into the project."}
     return 1
   }
  
  # Create instance: fifo_storage
  create_hier_cell_fifo_storage $hier_obj fifo_storage

  # Create instance: fiforst_cdc_async_rst, and set properties
  set fiforst_cdc_async_rst [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 fiforst_cdc_async_rst ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
 ] $fiforst_cdc_async_rst

  # Create instance: ge_arb
  create_hier_cell_ge_arb $hier_obj ge_arb

  # Create instance: payload_packetize
  create_hier_cell_payload_packetize $hier_obj payload_packetize

  # Create instance: trig_acquire
  create_hier_cell_trig_acquire $hier_obj trig_acquire

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins m_axis_100ge_ch0123_ppld] [get_bd_intf_pins ge_arb/m_axis_ppld]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins trig_acquire/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins payload_packetize/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins dma/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins fifo_ctl_src_sel/s_axi_csr]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch0_ppkt [get_bd_intf_pins clk_conv/m_axis_ch0_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch1_ppkt [get_bd_intf_pins clk_conv/m_axis_ch1_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch2_ppkt [get_bd_intf_pins clk_conv/m_axis_ch2_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net clk_conv_m_axis_ch3_ppkt [get_bd_intf_pins clk_conv/m_axis_ch3_ppkt] [get_bd_intf_pins fifo_storage/s_axis_ch3_ppkt]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch0a_ppld [get_bd_intf_pins dest_route/m_axis_ch0a_ppld] [get_bd_intf_pins dma/s_axis_ch0_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch0b_ppld [get_bd_intf_pins dest_route/m_axis_ch0b_ppld] [get_bd_intf_pins ge_arb/s_axis_ch0_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch1a_ppld [get_bd_intf_pins dest_route/m_axis_ch1a_ppld] [get_bd_intf_pins dma/s_axis_ch1_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch1b_ppld [get_bd_intf_pins dest_route/m_axis_ch1b_ppld] [get_bd_intf_pins ge_arb/s_axis_ch1_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch2a_ppld [get_bd_intf_pins dest_route/m_axis_ch2a_ppld] [get_bd_intf_pins dma/s_axis_ch2_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch2b_ppld [get_bd_intf_pins dest_route/m_axis_ch2b_ppld] [get_bd_intf_pins ge_arb/s_axis_ch2_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch3a_ppld [get_bd_intf_pins dest_route/m_axis_ch3a_ppld] [get_bd_intf_pins dma/s_axis_ch3_ppld]
  connect_bd_intf_net -intf_net dest_route_m_axis_ch3b_ppld [get_bd_intf_pins dest_route/m_axis_ch3b_ppld] [get_bd_intf_pins ge_arb/s_axis_ch3_ppld]
  connect_bd_intf_net -intf_net dma_m_axi_fpd [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins dma/m_axi_fpd]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch0_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch0_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch1_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch1_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch2_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch2_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net fifo_storage_m_axis_ch3_ppkt [get_bd_intf_pins fifo_storage/m_axis_ch3_ppkt] [get_bd_intf_pins payload_packetize/s_axis_ch3_ppkt]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch0_ppld [get_bd_intf_pins dest_route/s_axis_ch0_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch0_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch1_ppld [get_bd_intf_pins dest_route/s_axis_ch1_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch1_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch2_ppld [get_bd_intf_pins dest_route/s_axis_ch2_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch2_ppld]
  connect_bd_intf_net -intf_net payload_packetize_m_axis_ch3_ppld [get_bd_intf_pins dest_route/s_axis_ch3_ppld] [get_bd_intf_pins payload_packetize/m_axis_ch3_ppld]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins fifo_storage/s_axi_csr]
  connect_bd_intf_net -intf_net s_axi_csr_2 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch0_pdti]
  connect_bd_intf_net -intf_net s_axis_ch1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch1_pdti]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch2_pdti]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins trig_acquire/s_axis_ch3_pdti]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch0_ppkt [get_bd_intf_pins clk_conv/s_axis_ch0_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch0_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch1_ppkt [get_bd_intf_pins clk_conv/s_axis_ch1_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch1_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch2_ppkt [get_bd_intf_pins clk_conv/s_axis_ch2_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch2_ppkt]
  connect_bd_intf_net -intf_net trig_acquire_m_axis_ch3_ppkt [get_bd_intf_pins clk_conv/s_axis_ch3_ppkt] [get_bd_intf_pins trig_acquire/m_axis_ch3_ppkt]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins clk_conv/axi_fpd_aclk] [get_bd_pins dest_route/axi_fpd_aclk] [get_bd_pins dma/axi_fpd_aclk] [get_bd_pins fifo_ctl_src_sel/axis_ppld_aclk] [get_bd_pins fifo_storage/axi_fpd_aclk] [get_bd_pins fiforst_cdc_async_rst/dest_clk] [get_bd_pins ge_arb/axi_fpd_aclk] [get_bd_pins payload_packetize/axi_fpd_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins clk_conv/axi_fpd_aresetn] [get_bd_pins dma/axi_fpd_aresetn] [get_bd_pins fifo_storage/axi_fpd_aresetn] [get_bd_pins payload_packetize/axi_fpd_aresetn]
  connect_bd_net -net axi_fpd_aresetn_2 [get_bd_pins fiforst_cdc_async_rst/dest_arst] [get_bd_pins ge_arb/axi_fpd_aresetn]
  connect_bd_net -net dma_adc_dma_0_irq [get_bd_pins adc_dma_0_irq] [get_bd_pins dma/adc_dma_0_irq]
  connect_bd_net -net dma_adc_dma_1_irq [get_bd_pins adc_dma_1_irq] [get_bd_pins dma/adc_dma_1_irq]
  connect_bd_net -net dma_adc_dma_2_irq [get_bd_pins adc_dma_2_irq] [get_bd_pins dma/adc_dma_2_irq]
  connect_bd_net -net dma_adc_dma_3_irq [get_bd_pins adc_dma_3_irq] [get_bd_pins dma/adc_dma_3_irq]
  connect_bd_net -net dma_ch0_external_fifo_rstn [get_bd_pins dma/ch0_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch0a_fifo_aresetn]
  connect_bd_net -net dma_ch0_payload_size_ctl [get_bd_pins dma/ch0_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch0a_pkt_size]
  connect_bd_net -net dma_ch0_payload_size_ctl_en [get_bd_pins dma/ch0_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch0a_pkt_size_en]
  connect_bd_net -net dma_ch1_external_fifo_rstn [get_bd_pins dma/ch1_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch1a_fifo_aresetn]
  connect_bd_net -net dma_ch1_payload_size_ctl [get_bd_pins dma/ch1_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch1a_pkt_size]
  connect_bd_net -net dma_ch1_payload_size_ctl_en [get_bd_pins dma/ch1_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch1a_pkt_size_en]
  connect_bd_net -net dma_ch2_external_fifo_rstn [get_bd_pins dma/ch2_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch2a_fifo_aresetn]
  connect_bd_net -net dma_ch2_payload_size_ctl [get_bd_pins dma/ch2_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch2a_pkt_size]
  connect_bd_net -net dma_ch2_payload_size_ctl_en [get_bd_pins dma/ch2_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch2a_pkt_size_en]
  connect_bd_net -net dma_ch3_external_fifo_rstn [get_bd_pins dma/ch3_external_fifo_rstn] [get_bd_pins fifo_ctl_src_sel/ch3a_fifo_aresetn]
  connect_bd_net -net dma_ch3_payload_size_ctl [get_bd_pins dma/ch3_payload_size_ctl] [get_bd_pins fifo_ctl_src_sel/ch3a_pkt_size]
  connect_bd_net -net dma_ch3_payload_size_ctl_en [get_bd_pins dma/ch3_payload_size_ctl_en] [get_bd_pins fifo_ctl_src_sel/ch3a_pkt_size_en]
  connect_bd_net -net eth_fifo_aresetn_1 [get_bd_pins eth_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch0b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch1b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch2b_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch3b_fifo_aresetn] [get_bd_pins fiforst_cdc_async_rst/src_arst]
  connect_bd_net -net eth_pkt_size_1 [get_bd_pins eth_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch0b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch1b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch2b_pkt_size] [get_bd_pins fifo_ctl_src_sel/ch3b_pkt_size]
  connect_bd_net -net eth_pkt_size_en_1 [get_bd_pins eth_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch0b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch1b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch2b_pkt_size_en] [get_bd_pins fifo_ctl_src_sel/ch3b_pkt_size_en]
  connect_bd_net -net eth_txclk_1 [get_bd_pins eth_txclk] [get_bd_pins fifo_ctl_src_sel/txclk]
  connect_bd_net -net fifo_ctl_src_sel_ch0_fifo_aresetn [get_bd_pins clk_conv/ch0_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch0_fifo_aresetn] [get_bd_pins fifo_storage/ch0_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch0_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch0_override_pkt_size] [get_bd_pins payload_packetize/ch0_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch0_override_pkt_size_en [get_bd_pins fifo_ctl_src_sel/ch0_override_pkt_size_en] [get_bd_pins payload_packetize/ch0_override_pkt_size_en]
  connect_bd_net -net fifo_ctl_src_sel_ch1_fifo_aresetn [get_bd_pins clk_conv/ch1_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch1_fifo_aresetn] [get_bd_pins fifo_storage/ch1_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch1_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch1_override_pkt_size] [get_bd_pins payload_packetize/ch1_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch1_override_pkt_size_en [get_bd_pins fifo_ctl_src_sel/ch1_override_pkt_size_en] [get_bd_pins payload_packetize/ch1_override_pkt_size_en]
  connect_bd_net -net fifo_ctl_src_sel_ch2_fifo_aresetn [get_bd_pins clk_conv/ch2_fifo_aresetn] [get_bd_pins fifo_ctl_src_sel/ch2_fifo_aresetn] [get_bd_pins fifo_storage/ch2_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch2_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch2_override_pkt_size] [get_bd_pins payload_packetize/ch2_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch2_override_pkt_size_en [get_bd_pins fifo_ctl_src_sel/ch2_override_pkt_size_en] [get_bd_pins payload_packetize/ch2_override_pkt_size_en]
  connect_bd_net -net fifo_ctl_src_sel_ch3_fifo_aresetn [get_bd_pins clk_conv/ch3_fifo_resetn] [get_bd_pins fifo_ctl_src_sel/ch3_fifo_aresetn] [get_bd_pins fifo_storage/ch3_fifo_resetn]
  connect_bd_net -net fifo_ctl_src_sel_ch3_override_pkt_size [get_bd_pins fifo_ctl_src_sel/ch3_override_pkt_size] [get_bd_pins payload_packetize/ch3_override_pkt_size]
  connect_bd_net -net fifo_ctl_src_sel_ch3_override_pkt_size_en [get_bd_pins fifo_ctl_src_sel/ch3_override_pkt_size_en] [get_bd_pins payload_packetize/ch3_override_pkt_size_en]
  connect_bd_net -net fifo_storage_ch0_fifo_rst_out_n [get_bd_pins dest_route/ch0_fifo_rst_in_n] [get_bd_pins fifo_storage/ch0_fifo_rst_out_n] [get_bd_pins payload_packetize/ch0_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch0_ufifo_irq [get_bd_pins ch0_ufifo_irq] [get_bd_pins fifo_storage/ch0_ufifo_irq]
  connect_bd_net -net fifo_storage_ch1_fifo_rst_out_n [get_bd_pins dest_route/ch1_fifo_rst_in_n] [get_bd_pins fifo_storage/ch1_fifo_rst_out_n] [get_bd_pins payload_packetize/ch1_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch1_ufifo_irq [get_bd_pins ch1_ufifo_irq] [get_bd_pins fifo_storage/ch1_ufifo_irq]
  connect_bd_net -net fifo_storage_ch2_fifo_rst_out_n [get_bd_pins dest_route/ch2_fifo_rst_in_n] [get_bd_pins fifo_storage/ch2_fifo_rst_out_n] [get_bd_pins payload_packetize/ch2_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch2_ufifo_irq [get_bd_pins ch2_ufifo_irq] [get_bd_pins fifo_storage/ch2_ufifo_irq]
  connect_bd_net -net fifo_storage_ch3_fifo_rst_out_n [get_bd_pins dest_route/ch3_fifo_rst_in_n] [get_bd_pins fifo_storage/ch3_fifo_rst_out_n] [get_bd_pins payload_packetize/ch3_fifo_rst_in_n]
  connect_bd_net -net fifo_storage_ch3_ufifo_irq [get_bd_pins ch3_ufifo_irq] [get_bd_pins fifo_storage/ch3_ufifo_irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins dma/s_axi_csr_aclk] [get_bd_pins fifo_ctl_src_sel/s_axi_csr_aclk] [get_bd_pins fifo_storage/s_axi_csr_aclk] [get_bd_pins payload_packetize/s_axi_csr_aclk] [get_bd_pins trig_acquire/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins dma/s_axi_csr_aresetn] [get_bd_pins fifo_ctl_src_sel/s_axi_csr_aresetn] [get_bd_pins fifo_storage/s_axi_csr_aresetn] [get_bd_pins payload_packetize/s_axi_csr_aresetn] [get_bd_pins trig_acquire/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins clk_conv/s_axis_pdti_aclk] [get_bd_pins trig_acquire/s_axis_pdti_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins s_axis_pdti_aresetn] [get_bd_pins trig_acquire/s_axis_pdti_aresetn]
  connect_bd_net -net trig_acquire_ch0_flowctl_irq [get_bd_pins ch0_flowctl_irq] [get_bd_pins trig_acquire/ch0_flowctl_irq]
  connect_bd_net -net trig_acquire_ch1_flowctl_irq [get_bd_pins ch1_flowctl_irq] [get_bd_pins trig_acquire/ch1_flowctl_irq]
  connect_bd_net -net trig_acquire_ch2_flowctl_irq [get_bd_pins ch2_flowctl_irq] [get_bd_pins trig_acquire/ch2_flowctl_irq]
  connect_bd_net -net trig_acquire_ch3_flowctl_irq [get_bd_pins ch3_flowctl_irq] [get_bd_pins trig_acquire/ch3_flowctl_irq]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: sys_mgmt
proc create_hier_cell_sys_mgmt { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_sys_mgmt() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux11

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux12

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux13


  # Create pins
  create_bd_pin -dir I -type clk axi_csr_aclk
  create_bd_pin -dir I -type rst axi_csr_aresetn
  create_bd_pin -dir O ip2intc_irpt
  create_bd_pin -dir O sys_mgt_alarm_out
  create_bd_pin -dir O sys_mgt_ot_out

  # Create instance: sys_mgt, and set properties
  set sys_mgt [ create_bd_cell -type ip -vlnv xilinx.com:ip:system_management_wiz:1.3 sys_mgt ]
  set_property -dict [ list \
   CONFIG.ANALOG_BANK_SELECTION {68} \
   CONFIG.AVERAGE_ENABLE_TEMPERATURE {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP0_VAUXN0 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP10_VAUXN10 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP11_VAUXN11 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP12_VAUXN12 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP13_VAUXN13 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP1_VAUXN1 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP2_VAUXN2 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP3_VAUXN3 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP4_VAUXN4 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP5_VAUXN5 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP8_VAUXN8 {true} \
   CONFIG.AVERAGE_ENABLE_VAUXP9_VAUXN9 {true} \
   CONFIG.AVERAGE_ENABLE_VBRAM {true} \
   CONFIG.AVERAGE_ENABLE_VCCAUX {true} \
   CONFIG.AVERAGE_ENABLE_VCCINT {true} \
   CONFIG.AVERAGE_ENABLE_VCCPSAUX {true} \
   CONFIG.AVERAGE_ENABLE_VCCPSINTFP {true} \
   CONFIG.AVERAGE_ENABLE_VCCPSINTLP {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP0_VAUXN0 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP10_VAUXN10 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP11_VAUXN11 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP12_VAUXN12 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP13_VAUXN13 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP1_VAUXN1 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP2_VAUXN2 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP3_VAUXN3 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP4_VAUXN4 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP5_VAUXN5 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP8_VAUXN8 {true} \
   CONFIG.CHANNEL_ENABLE_VAUXP9_VAUXN9 {true} \
   CONFIG.CHANNEL_ENABLE_VCCPSAUX {true} \
   CONFIG.CHANNEL_ENABLE_VCCPSINTFP {true} \
   CONFIG.CHANNEL_ENABLE_VCCPSINTLP {true} \
   CONFIG.CHANNEL_ENABLE_VP_VN {false} \
   CONFIG.COMMON_N_SOURCE {Vaux13} \
   CONFIG.ENABLE_RESET {false} \
   CONFIG.ENABLE_VCCPSAUX_ALARM {false} \
   CONFIG.ENABLE_VCCPSINTFP_ALARM {false} \
   CONFIG.ENABLE_VCCPSINTLP_ALARM {false} \
   CONFIG.INTERFACE_SELECTION {Enable_AXI} \
   CONFIG.VAUXN0_LOC {B15} \
   CONFIG.VAUXN10_LOC {E11} \
   CONFIG.VAUXN11_LOC {F14} \
   CONFIG.VAUXN12_LOC {F10} \
   CONFIG.VAUXN13_LOC {K12} \
   CONFIG.VAUXN14_LOC {G6} \
   CONFIG.VAUXN15_LOC {H6} \
   CONFIG.VAUXN1_LOC {C13} \
   CONFIG.VAUXN2_LOC {D14} \
   CONFIG.VAUXN3_LOC {E12} \
   CONFIG.VAUXN4_LOC {J13} \
   CONFIG.VAUXN5_LOC {K10} \
   CONFIG.VAUXN6_LOC {F9} \
   CONFIG.VAUXN7_LOC {G8} \
   CONFIG.VAUXN8_LOC {B13} \
   CONFIG.VAUXN9_LOC {B12} \
   CONFIG.VAUXP0_LOC {C15} \
   CONFIG.VAUXP10_LOC {F12} \
   CONFIG.VAUXP11_LOC {G14} \
   CONFIG.VAUXP12_LOC {F11} \
   CONFIG.VAUXP13_LOC {K13} \
   CONFIG.VAUXP14_LOC {G7} \
   CONFIG.VAUXP15_LOC {H7} \
   CONFIG.VAUXP1_LOC {D13} \
   CONFIG.VAUXP2_LOC {E14} \
   CONFIG.VAUXP3_LOC {E13} \
   CONFIG.VAUXP4_LOC {J14} \
   CONFIG.VAUXP5_LOC {K11} \
   CONFIG.VAUXP6_LOC {G9} \
   CONFIG.VAUXP7_LOC {H8} \
   CONFIG.VAUXP8_LOC {B14} \
   CONFIG.VAUXP9_LOC {C12} \
   CONFIG.VCCINT_ALARM_LOWER {0.82} \
   CONFIG.VCCINT_ALARM_UPPER {0.88} \
 ] $sys_mgt

  # Create interface connections
  connect_bd_intf_net -intf_net Vaux0_1 [get_bd_intf_pins Vaux0] [get_bd_intf_pins sys_mgt/Vaux0]
  connect_bd_intf_net -intf_net Vaux10_1 [get_bd_intf_pins Vaux10] [get_bd_intf_pins sys_mgt/Vaux10]
  connect_bd_intf_net -intf_net Vaux11_1 [get_bd_intf_pins Vaux11] [get_bd_intf_pins sys_mgt/Vaux11]
  connect_bd_intf_net -intf_net Vaux12_1 [get_bd_intf_pins Vaux12] [get_bd_intf_pins sys_mgt/Vaux12]
  connect_bd_intf_net -intf_net Vaux13_1 [get_bd_intf_pins Vaux13] [get_bd_intf_pins sys_mgt/Vaux13]
  connect_bd_intf_net -intf_net Vaux1_1 [get_bd_intf_pins Vaux1] [get_bd_intf_pins sys_mgt/Vaux1]
  connect_bd_intf_net -intf_net Vaux2_1 [get_bd_intf_pins Vaux2] [get_bd_intf_pins sys_mgt/Vaux2]
  connect_bd_intf_net -intf_net Vaux3_1 [get_bd_intf_pins Vaux3] [get_bd_intf_pins sys_mgt/Vaux3]
  connect_bd_intf_net -intf_net Vaux4_1 [get_bd_intf_pins Vaux4] [get_bd_intf_pins sys_mgt/Vaux4]
  connect_bd_intf_net -intf_net Vaux5_1 [get_bd_intf_pins Vaux5] [get_bd_intf_pins sys_mgt/Vaux5]
  connect_bd_intf_net -intf_net Vaux8_1 [get_bd_intf_pins Vaux8] [get_bd_intf_pins sys_mgt/Vaux8]
  connect_bd_intf_net -intf_net Vaux9_1 [get_bd_intf_pins Vaux9] [get_bd_intf_pins sys_mgt/Vaux9]
  connect_bd_intf_net -intf_net axi_interc_0_M01_AXI [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins sys_mgt/S_AXI_LITE]

  # Create port connections
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins axi_csr_aresetn] [get_bd_pins sys_mgt/s_axi_aresetn]
  connect_bd_net -net sys_mgt_alarm_out1 [get_bd_pins sys_mgt_alarm_out] [get_bd_pins sys_mgt/alarm_out]
  connect_bd_net -net sys_mgt_ip2intc_irpt [get_bd_pins ip2intc_irpt] [get_bd_pins sys_mgt/ip2intc_irpt]
  connect_bd_net -net sys_mgt_ot_out1 [get_bd_pins sys_mgt_ot_out] [get_bd_pins sys_mgt/ot_out]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk0 [get_bd_pins axi_csr_aclk] [get_bd_pins sys_mgt/s_axi_aclk]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: ps_block
proc create_hier_cell_ps_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_ps_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_adc2dac_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_adcacq_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dac_src_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_dataio_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_ddr4_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_eth_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fir_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_pcie_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_sysmgmt_csr

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_ts_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_hp1_fpd


  # Create pins
  create_bd_pin -dir O axi_csr_aclk
  create_bd_pin -dir O -from 0 -to 0 axi_csr_aresetn
  create_bd_pin -dir O axi_fpd_aclk
  create_bd_pin -dir O -from 0 -to 0 axi_fpd_aresetn
  create_bd_pin -dir I -from 7 -to 0 dma_irq
  create_bd_pin -dir I -from 0 -to 0 ext_temp_irq_n
  create_bd_pin -dir I -from 31 -to 0 fpgacodetype
  create_bd_pin -dir I -from 29 -to 0 irq_1
  create_bd_pin -dir I pcie_mailbox_irq
  create_bd_pin -dir I -from 7 -to 0 rev
  create_bd_pin -dir I -from 23 -to 0 rev_date
  create_bd_pin -dir O rtc_pps
  create_bd_pin -dir I -from 11 -to 0 size
  create_bd_pin -dir I -from 31 -to 0 swver

  # Create instance: axi_dwidth_conv_0, and set properties
  set axi_dwidth_conv_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dwidth_converter:2.1 axi_dwidth_conv_0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {49} \
   CONFIG.MI_DATA_WIDTH {128} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.SI_DATA_WIDTH {512} \
   CONFIG.SI_ID_WIDTH {6} \
 ] $axi_dwidth_conv_0

  # Create instance: axi_dwidth_conv_1, and set properties
  set axi_dwidth_conv_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dwidth_converter:2.1 axi_dwidth_conv_1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {40} \
   CONFIG.MI_DATA_WIDTH {512} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.SI_DATA_WIDTH {128} \
   CONFIG.SI_ID_WIDTH {16} \
 ] $axi_dwidth_conv_1

  # Create instance: axi_intc_0, and set properties
  set axi_intc_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 axi_intc_0 ]
  set_property -dict [ list \
   CONFIG.C_HAS_ILR {1} \
   CONFIG.C_IRQ_CONNECTION {1} \
   CONFIG.C_KIND_OF_EDGE {0xFFFFFFFF} \
   CONFIG.C_KIND_OF_INTR {0xFFFFF8FF} \
   CONFIG.C_KIND_OF_LVL {0xFFFFFFFF} \
 ] $axi_intc_0

  # Create instance: axi_intc_1, and set properties
  set axi_intc_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_intc:4.1 axi_intc_1 ]
  set_property -dict [ list \
   CONFIG.C_HAS_ILR {1} \
   CONFIG.C_IRQ_CONNECTION {1} \
   CONFIG.C_KIND_OF_EDGE {0xFFFFFFFF} \
   CONFIG.C_KIND_OF_INTR {0xFFFFFFFA} \
   CONFIG.C_KIND_OF_LVL {0xFFFFFFFD} \
 ] $axi_intc_1

  # Create instance: axi_interc_0, and set properties
  set axi_interc_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interc_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {3} \
   CONFIG.M01_HAS_REGSLICE {3} \
   CONFIG.M02_HAS_REGSLICE {3} \
   CONFIG.M03_HAS_REGSLICE {3} \
   CONFIG.M04_HAS_REGSLICE {3} \
   CONFIG.M05_HAS_REGSLICE {3} \
   CONFIG.M06_HAS_REGSLICE {3} \
   CONFIG.M07_HAS_REGSLICE {3} \
   CONFIG.M08_HAS_REGSLICE {3} \
   CONFIG.M09_HAS_REGSLICE {3} \
   CONFIG.M10_HAS_REGSLICE {3} \
   CONFIG.M11_HAS_REGSLICE {3} \
   CONFIG.M12_HAS_REGSLICE {3} \
   CONFIG.M13_HAS_REGSLICE {3} \
   CONFIG.M14_HAS_REGSLICE {3} \
   CONFIG.NUM_MI {14} \
   CONFIG.S00_HAS_REGSLICE {1} \
 ] $axi_interc_0

  # Create instance: axi_register_slice_0, and set properties
  set axi_register_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_register_slice:2.1 axi_register_slice_0 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {49} \
   CONFIG.ARUSER_WIDTH {0} \
   CONFIG.AWUSER_WIDTH {0} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {128} \
   CONFIG.ID_WIDTH {0} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.WUSER_WIDTH {0} \
 ] $axi_register_slice_0

  # Create instance: axi_register_slice_1, and set properties
  set axi_register_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_register_slice:2.1 axi_register_slice_1 ]
  set_property -dict [ list \
   CONFIG.ADDR_WIDTH {40} \
   CONFIG.ARUSER_WIDTH {16} \
   CONFIG.AWUSER_WIDTH {16} \
   CONFIG.BUSER_WIDTH {0} \
   CONFIG.DATA_WIDTH {128} \
   CONFIG.ID_WIDTH {16} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
   CONFIG.RUSER_WIDTH {0} \
   CONFIG.WUSER_WIDTH {0} \
 ] $axi_register_slice_1

  # Create instance: ext_temp_irq, and set properties
  set ext_temp_irq [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_csr:1.0 ext_temp_irq ]
  set_property -dict [ list \
   CONFIG.num_ctl_regs {0} \
   CONFIG.num_interrupt_src {1} \
   CONFIG.num_stat_regs {0} \
 ] $ext_temp_irq

  # Create instance: info_csr_0, and set properties
  set info_csr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_brd_info_regs:1.0 info_csr_0 ]
  set_property -dict [ list \
   CONFIG.board_id {0x6003} \
   CONFIG.fpga_code_id {0x60032} \
   CONFIG.has_ext_temp_irq {false} \
   CONFIG.has_fpga_size_in {true} \
   CONFIG.has_fpio_in {false} \
   CONFIG.has_i2c1_irq {false} \
   CONFIG.has_i2c2_irq {false} \
   CONFIG.has_irq_out {false} \
   CONFIG.has_link_stat_in {false} \
   CONFIG.has_rev_info_in {true} \
   CONFIG.has_sys_mon_irq {false} \
   CONFIG.has_sys_mon_led {false} \
   CONFIG.has_user1_irq {false} \
   CONFIG.has_user2_irq {false} \
   CONFIG.has_user3_irq {false} \
   CONFIG.has_user4_irq {false} \
   CONFIG.has_user5_irq {false} \
   CONFIG.has_user6_irq {false} \
   CONFIG.has_user7_irq {false} \
   CONFIG.has_user8_irq {false} \
   CONFIG.has_user_led_out {false} \
   CONFIG.user_word {0x00020202} \
 ] $info_csr_0

  # Create instance: irq_concat0, and set properties
  set irq_concat0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 irq_concat0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {8} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.NUM_PORTS {2} \
 ] $irq_concat0

  # Create instance: irq_concat1, and set properties
  set irq_concat1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 irq_concat1 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {30} \
   CONFIG.IN1_WIDTH {1} \
 ] $irq_concat1

  # Create instance: proc_sys_reset_0, and set properties
  set proc_sys_reset_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_0 ]

  # Create instance: proc_sys_reset_1, and set properties
  set proc_sys_reset_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 proc_sys_reset_1 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
 ] $xlconstant_1

  # Create instance: zynq_ultra_ps_e_0, and set properties
  set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e:3.3 zynq_ultra_ps_e_0 ]
  set_property -dict [ list \
   CONFIG.CAN0_BOARD_INTERFACE {custom} \
   CONFIG.CAN1_BOARD_INTERFACE {custom} \
   CONFIG.CSU_BOARD_INTERFACE {custom} \
   CONFIG.DP_BOARD_INTERFACE {custom} \
   CONFIG.GEM0_BOARD_INTERFACE {custom} \
   CONFIG.GEM1_BOARD_INTERFACE {custom} \
   CONFIG.GEM2_BOARD_INTERFACE {custom} \
   CONFIG.GEM3_BOARD_INTERFACE {custom} \
   CONFIG.GPIO_BOARD_INTERFACE {custom} \
   CONFIG.IIC0_BOARD_INTERFACE {custom} \
   CONFIG.IIC1_BOARD_INTERFACE {custom} \
   CONFIG.NAND_BOARD_INTERFACE {custom} \
   CONFIG.PCIE_BOARD_INTERFACE {custom} \
   CONFIG.PJTAG_BOARD_INTERFACE {custom} \
   CONFIG.PMU_BOARD_INTERFACE {custom} \
   CONFIG.PSU_BANK_0_IO_STANDARD {LVCMOS18} \
   CONFIG.PSU_BANK_1_IO_STANDARD {LVCMOS33} \
   CONFIG.PSU_BANK_2_IO_STANDARD {LVCMOS33} \
   CONFIG.PSU_BANK_3_IO_STANDARD {LVCMOS33} \
   CONFIG.PSU_DDR_RAM_HIGHADDR {0x1FFFFFFFF} \
   CONFIG.PSU_DDR_RAM_HIGHADDR_OFFSET {0x800000000} \
   CONFIG.PSU_DDR_RAM_LOWADDR_OFFSET {0x80000000} \
   CONFIG.PSU_DYNAMIC_DDR_CONFIG_EN {0} \
   CONFIG.PSU_IMPORT_BOARD_PRESET {} \
   CONFIG.PSU_MIO_0_DIRECTION {out} \
   CONFIG.PSU_MIO_0_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_0_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_0_POLARITY {Default} \
   CONFIG.PSU_MIO_0_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_0_SLEW {fast} \
   CONFIG.PSU_MIO_10_DIRECTION {inout} \
   CONFIG.PSU_MIO_10_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_10_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_10_POLARITY {Default} \
   CONFIG.PSU_MIO_10_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_10_SLEW {fast} \
   CONFIG.PSU_MIO_11_DIRECTION {inout} \
   CONFIG.PSU_MIO_11_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_11_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_11_POLARITY {Default} \
   CONFIG.PSU_MIO_11_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_11_SLEW {fast} \
   CONFIG.PSU_MIO_12_DIRECTION {out} \
   CONFIG.PSU_MIO_12_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_12_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_12_POLARITY {Default} \
   CONFIG.PSU_MIO_12_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_12_SLEW {fast} \
   CONFIG.PSU_MIO_13_DIRECTION {inout} \
   CONFIG.PSU_MIO_13_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_13_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_13_POLARITY {Default} \
   CONFIG.PSU_MIO_13_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_13_SLEW {slow} \
   CONFIG.PSU_MIO_14_DIRECTION {inout} \
   CONFIG.PSU_MIO_14_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_14_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_14_POLARITY {Default} \
   CONFIG.PSU_MIO_14_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_14_SLEW {slow} \
   CONFIG.PSU_MIO_15_DIRECTION {inout} \
   CONFIG.PSU_MIO_15_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_15_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_15_POLARITY {Default} \
   CONFIG.PSU_MIO_15_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_15_SLEW {slow} \
   CONFIG.PSU_MIO_16_DIRECTION {inout} \
   CONFIG.PSU_MIO_16_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_16_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_16_POLARITY {Default} \
   CONFIG.PSU_MIO_16_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_16_SLEW {slow} \
   CONFIG.PSU_MIO_17_DIRECTION {inout} \
   CONFIG.PSU_MIO_17_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_17_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_17_POLARITY {Default} \
   CONFIG.PSU_MIO_17_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_17_SLEW {slow} \
   CONFIG.PSU_MIO_18_DIRECTION {inout} \
   CONFIG.PSU_MIO_18_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_18_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_18_POLARITY {Default} \
   CONFIG.PSU_MIO_18_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_18_SLEW {slow} \
   CONFIG.PSU_MIO_19_DIRECTION {inout} \
   CONFIG.PSU_MIO_19_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_19_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_19_POLARITY {Default} \
   CONFIG.PSU_MIO_19_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_19_SLEW {slow} \
   CONFIG.PSU_MIO_1_DIRECTION {inout} \
   CONFIG.PSU_MIO_1_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_1_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_1_POLARITY {Default} \
   CONFIG.PSU_MIO_1_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_1_SLEW {fast} \
   CONFIG.PSU_MIO_20_DIRECTION {inout} \
   CONFIG.PSU_MIO_20_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_20_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_20_POLARITY {Default} \
   CONFIG.PSU_MIO_20_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_20_SLEW {slow} \
   CONFIG.PSU_MIO_21_DIRECTION {inout} \
   CONFIG.PSU_MIO_21_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_21_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_21_POLARITY {Default} \
   CONFIG.PSU_MIO_21_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_21_SLEW {slow} \
   CONFIG.PSU_MIO_22_DIRECTION {out} \
   CONFIG.PSU_MIO_22_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_22_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_22_POLARITY {Default} \
   CONFIG.PSU_MIO_22_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_22_SLEW {slow} \
   CONFIG.PSU_MIO_23_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_23_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_23_POLARITY {Default} \
   CONFIG.PSU_MIO_23_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_23_SLEW {slow} \
   CONFIG.PSU_MIO_24_DIRECTION {in} \
   CONFIG.PSU_MIO_24_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_24_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_24_POLARITY {Default} \
   CONFIG.PSU_MIO_24_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_24_SLEW {fast} \
   CONFIG.PSU_MIO_25_DIRECTION {in} \
   CONFIG.PSU_MIO_25_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_25_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_25_POLARITY {Default} \
   CONFIG.PSU_MIO_25_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_25_SLEW {fast} \
   CONFIG.PSU_MIO_26_DIRECTION {inout} \
   CONFIG.PSU_MIO_26_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_26_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_26_POLARITY {Default} \
   CONFIG.PSU_MIO_26_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_26_SLEW {slow} \
   CONFIG.PSU_MIO_27_DIRECTION {inout} \
   CONFIG.PSU_MIO_27_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_27_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_27_POLARITY {Default} \
   CONFIG.PSU_MIO_27_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_27_SLEW {slow} \
   CONFIG.PSU_MIO_28_DIRECTION {inout} \
   CONFIG.PSU_MIO_28_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_28_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_28_POLARITY {Default} \
   CONFIG.PSU_MIO_28_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_28_SLEW {slow} \
   CONFIG.PSU_MIO_29_DIRECTION {inout} \
   CONFIG.PSU_MIO_29_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_29_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_29_POLARITY {Default} \
   CONFIG.PSU_MIO_29_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_29_SLEW {slow} \
   CONFIG.PSU_MIO_2_DIRECTION {inout} \
   CONFIG.PSU_MIO_2_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_2_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_2_POLARITY {Default} \
   CONFIG.PSU_MIO_2_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_2_SLEW {fast} \
   CONFIG.PSU_MIO_30_DIRECTION {inout} \
   CONFIG.PSU_MIO_30_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_30_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_30_POLARITY {Default} \
   CONFIG.PSU_MIO_30_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_30_SLEW {slow} \
   CONFIG.PSU_MIO_31_DIRECTION {inout} \
   CONFIG.PSU_MIO_31_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_31_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_31_POLARITY {Default} \
   CONFIG.PSU_MIO_31_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_31_SLEW {slow} \
   CONFIG.PSU_MIO_32_DIRECTION {inout} \
   CONFIG.PSU_MIO_32_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_32_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_32_POLARITY {Default} \
   CONFIG.PSU_MIO_32_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_32_SLEW {slow} \
   CONFIG.PSU_MIO_33_DIRECTION {inout} \
   CONFIG.PSU_MIO_33_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_33_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_33_POLARITY {Default} \
   CONFIG.PSU_MIO_33_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_33_SLEW {slow} \
   CONFIG.PSU_MIO_34_DIRECTION {inout} \
   CONFIG.PSU_MIO_34_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_34_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_34_POLARITY {Default} \
   CONFIG.PSU_MIO_34_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_34_SLEW {slow} \
   CONFIG.PSU_MIO_35_DIRECTION {inout} \
   CONFIG.PSU_MIO_35_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_35_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_35_POLARITY {Default} \
   CONFIG.PSU_MIO_35_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_35_SLEW {slow} \
   CONFIG.PSU_MIO_36_DIRECTION {inout} \
   CONFIG.PSU_MIO_36_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_36_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_36_POLARITY {Default} \
   CONFIG.PSU_MIO_36_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_36_SLEW {slow} \
   CONFIG.PSU_MIO_37_DIRECTION {inout} \
   CONFIG.PSU_MIO_37_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_37_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_37_POLARITY {Default} \
   CONFIG.PSU_MIO_37_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_37_SLEW {slow} \
   CONFIG.PSU_MIO_38_DIRECTION {inout} \
   CONFIG.PSU_MIO_38_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_38_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_38_POLARITY {Default} \
   CONFIG.PSU_MIO_38_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_38_SLEW {slow} \
   CONFIG.PSU_MIO_39_DIRECTION {inout} \
   CONFIG.PSU_MIO_39_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_39_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_39_POLARITY {Default} \
   CONFIG.PSU_MIO_39_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_39_SLEW {slow} \
   CONFIG.PSU_MIO_3_DIRECTION {inout} \
   CONFIG.PSU_MIO_3_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_3_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_3_POLARITY {Default} \
   CONFIG.PSU_MIO_3_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_3_SLEW {fast} \
   CONFIG.PSU_MIO_40_DIRECTION {inout} \
   CONFIG.PSU_MIO_40_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_40_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_40_POLARITY {Default} \
   CONFIG.PSU_MIO_40_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_40_SLEW {slow} \
   CONFIG.PSU_MIO_41_DIRECTION {inout} \
   CONFIG.PSU_MIO_41_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_41_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_41_POLARITY {Default} \
   CONFIG.PSU_MIO_41_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_41_SLEW {slow} \
   CONFIG.PSU_MIO_42_DIRECTION {inout} \
   CONFIG.PSU_MIO_42_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_42_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_42_POLARITY {Default} \
   CONFIG.PSU_MIO_42_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_42_SLEW {slow} \
   CONFIG.PSU_MIO_43_DIRECTION {inout} \
   CONFIG.PSU_MIO_43_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_43_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_43_POLARITY {Default} \
   CONFIG.PSU_MIO_43_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_43_SLEW {slow} \
   CONFIG.PSU_MIO_44_DIRECTION {inout} \
   CONFIG.PSU_MIO_44_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_44_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_44_POLARITY {Default} \
   CONFIG.PSU_MIO_44_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_44_SLEW {slow} \
   CONFIG.PSU_MIO_45_DIRECTION {inout} \
   CONFIG.PSU_MIO_45_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_45_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_45_POLARITY {Default} \
   CONFIG.PSU_MIO_45_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_45_SLEW {slow} \
   CONFIG.PSU_MIO_46_DIRECTION {in} \
   CONFIG.PSU_MIO_46_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_46_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_46_POLARITY {Default} \
   CONFIG.PSU_MIO_46_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_46_SLEW {fast} \
   CONFIG.PSU_MIO_47_DIRECTION {out} \
   CONFIG.PSU_MIO_47_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_47_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_47_POLARITY {Default} \
   CONFIG.PSU_MIO_47_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_47_SLEW {slow} \
   CONFIG.PSU_MIO_48_DIRECTION {inout} \
   CONFIG.PSU_MIO_48_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_48_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_48_POLARITY {Default} \
   CONFIG.PSU_MIO_48_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_48_SLEW {slow} \
   CONFIG.PSU_MIO_49_DIRECTION {inout} \
   CONFIG.PSU_MIO_49_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_49_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_49_POLARITY {Default} \
   CONFIG.PSU_MIO_49_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_49_SLEW {slow} \
   CONFIG.PSU_MIO_4_DIRECTION {inout} \
   CONFIG.PSU_MIO_4_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_4_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_4_POLARITY {Default} \
   CONFIG.PSU_MIO_4_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_4_SLEW {fast} \
   CONFIG.PSU_MIO_50_DIRECTION {inout} \
   CONFIG.PSU_MIO_50_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_50_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_50_POLARITY {Default} \
   CONFIG.PSU_MIO_50_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_50_SLEW {slow} \
   CONFIG.PSU_MIO_51_DIRECTION {inout} \
   CONFIG.PSU_MIO_51_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_51_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_51_POLARITY {Default} \
   CONFIG.PSU_MIO_51_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_51_SLEW {slow} \
   CONFIG.PSU_MIO_52_DIRECTION {in} \
   CONFIG.PSU_MIO_52_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_52_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_52_POLARITY {Default} \
   CONFIG.PSU_MIO_52_PULLUPDOWN {pulldown} \
   CONFIG.PSU_MIO_52_SLEW {fast} \
   CONFIG.PSU_MIO_53_DIRECTION {in} \
   CONFIG.PSU_MIO_53_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_53_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_53_POLARITY {Default} \
   CONFIG.PSU_MIO_53_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_53_SLEW {fast} \
   CONFIG.PSU_MIO_54_DIRECTION {inout} \
   CONFIG.PSU_MIO_54_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_54_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_54_POLARITY {Default} \
   CONFIG.PSU_MIO_54_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_54_SLEW {fast} \
   CONFIG.PSU_MIO_55_DIRECTION {in} \
   CONFIG.PSU_MIO_55_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_55_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_55_POLARITY {Default} \
   CONFIG.PSU_MIO_55_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_55_SLEW {fast} \
   CONFIG.PSU_MIO_56_DIRECTION {inout} \
   CONFIG.PSU_MIO_56_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_56_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_56_POLARITY {Default} \
   CONFIG.PSU_MIO_56_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_56_SLEW {fast} \
   CONFIG.PSU_MIO_57_DIRECTION {inout} \
   CONFIG.PSU_MIO_57_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_57_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_57_POLARITY {Default} \
   CONFIG.PSU_MIO_57_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_57_SLEW {fast} \
   CONFIG.PSU_MIO_58_DIRECTION {out} \
   CONFIG.PSU_MIO_58_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_58_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_58_POLARITY {Default} \
   CONFIG.PSU_MIO_58_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_58_SLEW {fast} \
   CONFIG.PSU_MIO_59_DIRECTION {inout} \
   CONFIG.PSU_MIO_59_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_59_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_59_POLARITY {Default} \
   CONFIG.PSU_MIO_59_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_59_SLEW {fast} \
   CONFIG.PSU_MIO_5_DIRECTION {out} \
   CONFIG.PSU_MIO_5_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_5_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_5_POLARITY {Default} \
   CONFIG.PSU_MIO_5_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_5_SLEW {fast} \
   CONFIG.PSU_MIO_60_DIRECTION {inout} \
   CONFIG.PSU_MIO_60_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_60_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_60_POLARITY {Default} \
   CONFIG.PSU_MIO_60_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_60_SLEW {fast} \
   CONFIG.PSU_MIO_61_DIRECTION {inout} \
   CONFIG.PSU_MIO_61_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_61_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_61_POLARITY {Default} \
   CONFIG.PSU_MIO_61_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_61_SLEW {fast} \
   CONFIG.PSU_MIO_62_DIRECTION {inout} \
   CONFIG.PSU_MIO_62_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_62_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_62_POLARITY {Default} \
   CONFIG.PSU_MIO_62_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_62_SLEW {fast} \
   CONFIG.PSU_MIO_63_DIRECTION {inout} \
   CONFIG.PSU_MIO_63_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_63_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_63_POLARITY {Default} \
   CONFIG.PSU_MIO_63_PULLUPDOWN {disable} \
   CONFIG.PSU_MIO_63_SLEW {fast} \
   CONFIG.PSU_MIO_64_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_64_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_64_POLARITY {Default} \
   CONFIG.PSU_MIO_64_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_64_SLEW {slow} \
   CONFIG.PSU_MIO_65_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_65_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_65_POLARITY {Default} \
   CONFIG.PSU_MIO_65_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_65_SLEW {slow} \
   CONFIG.PSU_MIO_66_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_66_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_66_POLARITY {Default} \
   CONFIG.PSU_MIO_66_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_66_SLEW {slow} \
   CONFIG.PSU_MIO_67_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_67_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_67_POLARITY {Default} \
   CONFIG.PSU_MIO_67_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_67_SLEW {slow} \
   CONFIG.PSU_MIO_68_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_68_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_68_POLARITY {Default} \
   CONFIG.PSU_MIO_68_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_68_SLEW {slow} \
   CONFIG.PSU_MIO_69_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_69_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_69_POLARITY {Default} \
   CONFIG.PSU_MIO_69_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_69_SLEW {slow} \
   CONFIG.PSU_MIO_6_DIRECTION {out} \
   CONFIG.PSU_MIO_6_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_6_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_6_POLARITY {Default} \
   CONFIG.PSU_MIO_6_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_6_SLEW {fast} \
   CONFIG.PSU_MIO_70_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_70_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_70_POLARITY {Default} \
   CONFIG.PSU_MIO_70_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_70_SLEW {slow} \
   CONFIG.PSU_MIO_71_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_71_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_71_POLARITY {Default} \
   CONFIG.PSU_MIO_71_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_71_SLEW {slow} \
   CONFIG.PSU_MIO_72_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_72_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_72_POLARITY {Default} \
   CONFIG.PSU_MIO_72_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_72_SLEW {slow} \
   CONFIG.PSU_MIO_73_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_73_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_73_POLARITY {Default} \
   CONFIG.PSU_MIO_73_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_73_SLEW {slow} \
   CONFIG.PSU_MIO_74_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_74_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_74_POLARITY {Default} \
   CONFIG.PSU_MIO_74_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_74_SLEW {slow} \
   CONFIG.PSU_MIO_75_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_75_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_75_POLARITY {Default} \
   CONFIG.PSU_MIO_75_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_75_SLEW {slow} \
   CONFIG.PSU_MIO_76_DIRECTION {out} \
   CONFIG.PSU_MIO_76_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_76_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_76_POLARITY {Default} \
   CONFIG.PSU_MIO_76_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_76_SLEW {slow} \
   CONFIG.PSU_MIO_77_DIRECTION {inout} \
   CONFIG.PSU_MIO_77_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_77_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_77_POLARITY {Default} \
   CONFIG.PSU_MIO_77_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_77_SLEW {slow} \
   CONFIG.PSU_MIO_7_DIRECTION {out} \
   CONFIG.PSU_MIO_7_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_7_INPUT_TYPE {cmos} \
   CONFIG.PSU_MIO_7_POLARITY {Default} \
   CONFIG.PSU_MIO_7_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_7_SLEW {fast} \
   CONFIG.PSU_MIO_8_DIRECTION {inout} \
   CONFIG.PSU_MIO_8_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_8_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_8_POLARITY {Default} \
   CONFIG.PSU_MIO_8_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_8_SLEW {fast} \
   CONFIG.PSU_MIO_9_DIRECTION {inout} \
   CONFIG.PSU_MIO_9_DRIVE_STRENGTH {12} \
   CONFIG.PSU_MIO_9_INPUT_TYPE {schmitt} \
   CONFIG.PSU_MIO_9_POLARITY {Default} \
   CONFIG.PSU_MIO_9_PULLUPDOWN {pullup} \
   CONFIG.PSU_MIO_9_SLEW {fast} \
   CONFIG.PSU_MIO_TREE_PERIPHERALS { \
     0#GPIO1 MIO#GPIO1 \
     0#I2C 0#I2C \
     0#SD 0#GPIO1 \
     0#SD 0#GPIO1 \
     0#SD 0#GPIO1 \
     0#SD 0#GPIO1 \
     0#SD 0#GPIO1 \
     0#SD 0#GPIO1 \
     0#SPI 0#GPIO1 \
     0#UART 0#GPIO1 \
     0#USB 0#############MDIO \
     0#USB 0#############MDIO \
     0#USB 0#############MDIO \
     0#USB 0#############MDIO \
     0#USB 0#############MDIO \
     0#USB 0#############MDIO \
     1#I2C 1#SPI \
     2#MDIO 2 \
     Flash#Feedback Clk#Quad \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     Flash#Quad SPI \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#GPIO1 MIO#USB \
     MIO#SPI 0#SPI \
     Quad SPI \
     SPI Flash#SD \
     SPI Flash#SD \
     SPI Flash#SD \
     SPI Flash#SD \
     SPI Flash#SD \
     SPI Flash#SD \
   } \
   CONFIG.PSU_MIO_TREE_SIGNALS {sclk_out#miso_mo1#mo2#mo3#mosi_mi0#n_ss_out#clk_for_lpbk#n_ss_out_upper#mo_upper[0]#mo_upper[1]#mo_upper[2]#mo_upper[3]#sclk_out_upper#sdio0_data_out[0]#sdio0_data_out[1]#sdio0_data_out[2]#sdio0_data_out[3]#sdio0_data_out[4]#sdio0_data_out[5]#sdio0_data_out[6]#sdio0_data_out[7]#sdio0_cmd_out#sdio0_clk_out##sdio0_cd_n#sdio0_wp#gpio1[26]#gpio1[27]#gpio1[28]#gpio1[29]#gpio1[30]#gpio1[31]#gpio1[32]#gpio1[33]#scl_out#sda_out#scl_out#sda_out#sclk_out#gpio1[39]#gpio1[40]#n_ss_out[0]#miso#mosi#gpio1[44]#gpio1[45]#rxd#txd#gpio1[48]#gpio1[49]#gpio1[50]#gpio1[51]#ulpi_clk_in#ulpi_dir#ulpi_tx_data[2]#ulpi_nxt#ulpi_tx_data[0]#ulpi_tx_data[1]#ulpi_stp#ulpi_tx_data[3]#ulpi_tx_data[4]#ulpi_tx_data[5]#ulpi_tx_data[6]#ulpi_tx_data[7]#############gem2_mdc#gem2_mdio_out} \
   CONFIG.PSU_PERIPHERAL_BOARD_PRESET {} \
   CONFIG.PSU_SD0_INTERNAL_BUS_WIDTH {8} \
   CONFIG.PSU_SD1_INTERNAL_BUS_WIDTH {8} \
   CONFIG.PSU_SMC_CYCLE_T0 {NA} \
   CONFIG.PSU_SMC_CYCLE_T1 {NA} \
   CONFIG.PSU_SMC_CYCLE_T2 {NA} \
   CONFIG.PSU_SMC_CYCLE_T3 {NA} \
   CONFIG.PSU_SMC_CYCLE_T4 {NA} \
   CONFIG.PSU_SMC_CYCLE_T5 {NA} \
   CONFIG.PSU_SMC_CYCLE_T6 {NA} \
   CONFIG.PSU_USB3__DUAL_CLOCK_ENABLE {1} \
   CONFIG.PSU_VALUE_SILVERSION {3} \
   CONFIG.PSU__ACPU0__POWER__ON {1} \
   CONFIG.PSU__ACPU1__POWER__ON {1} \
   CONFIG.PSU__ACPU2__POWER__ON {1} \
   CONFIG.PSU__ACPU3__POWER__ON {1} \
   CONFIG.PSU__ACTUAL__IP {1} \
   CONFIG.PSU__ACT_DDR_FREQ_MHZ {1199.988037} \
   CONFIG.PSU__AFI0_COHERENCY {0} \
   CONFIG.PSU__AFI1_COHERENCY {0} \
   CONFIG.PSU__AUX_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__CAN0_LOOP_CAN1__ENABLE {0} \
   CONFIG.PSU__CAN0__GRP_CLK__ENABLE {0} \
   CONFIG.PSU__CAN0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__CAN1__GRP_CLK__ENABLE {0} \
   CONFIG.PSU__CAN1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__ACT_FREQMHZ {1199.988037} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__FREQMHZ {1200} \
   CONFIG.PSU__CRF_APB__ACPU_CTRL__SRCSEL {APLL} \
   CONFIG.PSU__CRF_APB__ACPU__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI0_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI1_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI2_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI3_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI4_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__ACT_FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__FREQMHZ {667} \
   CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__AFI5_REF__ENABLE {0} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FBDIV {72} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__APLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__APLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__APLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__APM_CTRL__ACT_FREQMHZ {1} \
   CONFIG.PSU__CRF_APB__APM_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRF_APB__APM_CTRL__FREQMHZ {1} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__FREQMHZ {1200} \
   CONFIG.PSU__CRF_APB__DDR_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FBDIV {72} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__DPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__DPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__DPLL_TO_LPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__ACT_FREQMHZ {24.999750} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR0 {63} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__FREQMHZ {25} \
   CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__DP_AUDIO__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__ACT_FREQMHZ {26.922808} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__DIVISOR1 {10} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__FREQMHZ {27} \
   CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__ACT_FREQMHZ {299.997000} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__FREQMHZ {300} \
   CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__DP_VIDEO__FRAC_ENABLED {0} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__ACT_FREQMHZ {0} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__FREQMHZ {600} \
   CONFIG.PSU__CRF_APB__GPU_REF_CTRL__SRCSEL {DPLL} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__ACT_FREQMHZ {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__DIVISOR0 {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__FREQMHZ {-1} \
   CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__SRCSEL {NA} \
   CONFIG.PSU__CRF_APB__GTGREF0__ENABLE {NA} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRF_APB__SATA_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__ACT_FREQMHZ {533.328003} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__FREQMHZ {533.333} \
   CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__SRCSEL {VPLL} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FBDIV {64} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRF_APB__VPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRF_APB__VPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRF_APB__VPLL_TO_LPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__ACT_FREQMHZ {499.994995} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__ACT_FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__AFI6__ENABLE {0} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__ACT_FREQMHZ {49.999500} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR0 {30} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__FREQMHZ {50} \
   CONFIG.PSU__CRL_APB__AMS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__ACT_FREQMHZ {499.994995} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__CPU_R5_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__ACT_FREQMHZ {180} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__FREQMHZ {180} \
   CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__SRCSEL {SysOsc} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__ACT_FREQMHZ {1000} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__FREQMHZ {1000} \
   CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__ACT_FREQMHZ {1499.984985} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__FREQMHZ {1500} \
   CONFIG.PSU__CRL_APB__DLL_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__ACT_FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__ACT_FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__ACT_FREQMHZ {124.998749} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__ACT_FREQMHZ {124.998749} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR0 {12} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__FREQMHZ {125} \
   CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FBDIV {90} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRL_APB__IOPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__IOPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRL_APB__IOPLL_TO_FPD_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__ACT_FREQMHZ {266.664001} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__FREQMHZ {267} \
   CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__ACT_FREQMHZ {499.994995} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__NAND_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__ACT_FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__FREQMHZ {500} \
   CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__ACT_FREQMHZ {187.498123} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__DIVISOR0 {8} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__PCAP_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR0 {8} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__ACT_FREQMHZ {266.664001} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR0 {3} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__FREQMHZ {270} \
   CONFIG.PSU__CRL_APB__PL1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__ACT_FREQMHZ {266.664001} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL2_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__ACT_FREQMHZ {266.664001} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__PL3_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__ACT_FREQMHZ {299.997009} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR0 {5} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__FREQMHZ {300} \
   CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__DIV2 {1} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FBDIV {48} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACDATA {0.000000} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACFREQ {27.138} \
   CONFIG.PSU__CRL_APB__RPLL_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__RPLL_FRAC_CFG__ENABLED {0} \
   CONFIG.PSU__CRL_APB__RPLL_TO_FPD_CTRL__DIVISOR0 {2} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__ACT_FREQMHZ {199.998001} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__ACT_FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__ACT_FREQMHZ {199.998001} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR0 {4} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__ACT_FREQMHZ {214} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR0 {7} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__FREQMHZ {200} \
   CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__SRCSEL {RPLL} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__ACT_FREQMHZ {33.333000} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__DIVISOR0 {1} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__SRCSEL {PSS_REF_CLK} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__ACT_FREQMHZ {99.999001} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART0_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__ACT_FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR0 {15} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__FREQMHZ {100} \
   CONFIG.PSU__CRL_APB__UART1_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__ACT_FREQMHZ {249.997498} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__ACT_FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR0 {6} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__DIVISOR1 {1} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__FREQMHZ {250} \
   CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__ACT_FREQMHZ {19.999800} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR0 {25} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__DIVISOR1 {3} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__FREQMHZ {20} \
   CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__SRCSEL {IOPLL} \
   CONFIG.PSU__CRL_APB__USB3__ENABLE {1} \
   CONFIG.PSU__CSUPMU__PERIPHERAL__VALID {0} \
   CONFIG.PSU__CSU_COHERENCY {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_0__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_0__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_10__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_10__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_11__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_11__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_12__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_12__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_1__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_1__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_2__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_2__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_3__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_3__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_4__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_4__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_5__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_5__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_6__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_6__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_7__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_7__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_8__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_8__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_9__ENABLE {0} \
   CONFIG.PSU__CSU__CSU_TAMPER_9__ERASE_BBRAM {0} \
   CONFIG.PSU__CSU__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__DDRC__ADDR_MIRROR {0} \
   CONFIG.PSU__DDRC__AL {0} \
   CONFIG.PSU__DDRC__BANK_ADDR_COUNT {2} \
   CONFIG.PSU__DDRC__BG_ADDR_COUNT {1} \
   CONFIG.PSU__DDRC__BRC_MAPPING {ROW_BANK_COL} \
   CONFIG.PSU__DDRC__BUS_WIDTH {64 Bit} \
   CONFIG.PSU__DDRC__CL {16} \
   CONFIG.PSU__DDRC__CLOCK_STOP_EN {0} \
   CONFIG.PSU__DDRC__COL_ADDR_COUNT {10} \
   CONFIG.PSU__DDRC__COMPONENTS {Components} \
   CONFIG.PSU__DDRC__CWL {12} \
   CONFIG.PSU__DDRC__DDR3L_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__DDR3_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__DDR4_ADDR_MAPPING {1} \
   CONFIG.PSU__DDRC__DDR4_CAL_MODE_ENABLE {0} \
   CONFIG.PSU__DDRC__DDR4_CRC_CONTROL {0} \
   CONFIG.PSU__DDRC__DDR4_MAXPWR_SAVING_EN {0} \
   CONFIG.PSU__DDRC__DDR4_T_REF_MODE {0} \
   CONFIG.PSU__DDRC__DDR4_T_REF_RANGE {Normal (0-85)} \
   CONFIG.PSU__DDRC__DEEP_PWR_DOWN_EN {0} \
   CONFIG.PSU__DDRC__DEVICE_CAPACITY {16384 MBits} \
   CONFIG.PSU__DDRC__DIMM_ADDR_MIRROR {0} \
   CONFIG.PSU__DDRC__DM_DBI {DM_NO_DBI} \
   CONFIG.PSU__DDRC__DQMAP_0_3 {0} \
   CONFIG.PSU__DDRC__DQMAP_12_15 {0} \
   CONFIG.PSU__DDRC__DQMAP_16_19 {0} \
   CONFIG.PSU__DDRC__DQMAP_20_23 {0} \
   CONFIG.PSU__DDRC__DQMAP_24_27 {0} \
   CONFIG.PSU__DDRC__DQMAP_28_31 {0} \
   CONFIG.PSU__DDRC__DQMAP_32_35 {0} \
   CONFIG.PSU__DDRC__DQMAP_36_39 {0} \
   CONFIG.PSU__DDRC__DQMAP_40_43 {0} \
   CONFIG.PSU__DDRC__DQMAP_44_47 {0} \
   CONFIG.PSU__DDRC__DQMAP_48_51 {0} \
   CONFIG.PSU__DDRC__DQMAP_4_7 {0} \
   CONFIG.PSU__DDRC__DQMAP_52_55 {0} \
   CONFIG.PSU__DDRC__DQMAP_56_59 {0} \
   CONFIG.PSU__DDRC__DQMAP_60_63 {0} \
   CONFIG.PSU__DDRC__DQMAP_64_67 {0} \
   CONFIG.PSU__DDRC__DQMAP_68_71 {0} \
   CONFIG.PSU__DDRC__DQMAP_8_11 {0} \
   CONFIG.PSU__DDRC__DRAM_WIDTH {16 Bits} \
   CONFIG.PSU__DDRC__ECC {Disabled} \
   CONFIG.PSU__DDRC__ECC_SCRUB {0} \
   CONFIG.PSU__DDRC__ENABLE {1} \
   CONFIG.PSU__DDRC__ENABLE_2T_TIMING {0} \
   CONFIG.PSU__DDRC__ENABLE_DP_SWITCH {0} \
   CONFIG.PSU__DDRC__ENABLE_LP4_HAS_ECC_COMP {0} \
   CONFIG.PSU__DDRC__ENABLE_LP4_SLOWBOOT {0} \
   CONFIG.PSU__DDRC__EN_2ND_CLK {0} \
   CONFIG.PSU__DDRC__FGRM {1X} \
   CONFIG.PSU__DDRC__FREQ_MHZ {1} \
   CONFIG.PSU__DDRC__LPDDR3_DUALRANK_SDP {0} \
   CONFIG.PSU__DDRC__LPDDR3_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__LPDDR4_T_REF_RANGE {NA} \
   CONFIG.PSU__DDRC__LP_ASR {manual normal} \
   CONFIG.PSU__DDRC__MEMORY_TYPE {DDR 4} \
   CONFIG.PSU__DDRC__PARITY_ENABLE {0} \
   CONFIG.PSU__DDRC__PER_BANK_REFRESH {0} \
   CONFIG.PSU__DDRC__PHY_DBI_MODE {0} \
   CONFIG.PSU__DDRC__PLL_BYPASS {0} \
   CONFIG.PSU__DDRC__PWR_DOWN_EN {0} \
   CONFIG.PSU__DDRC__RANK_ADDR_COUNT {0} \
   CONFIG.PSU__DDRC__RD_DQS_CENTER {0} \
   CONFIG.PSU__DDRC__ROW_ADDR_COUNT {17} \
   CONFIG.PSU__DDRC__SB_TARGET {16-16-16} \
   CONFIG.PSU__DDRC__SELF_REF_ABORT {0} \
   CONFIG.PSU__DDRC__SPEED_BIN {DDR4_2400R} \
   CONFIG.PSU__DDRC__STATIC_RD_MODE {0} \
   CONFIG.PSU__DDRC__TRAIN_DATA_EYE {1} \
   CONFIG.PSU__DDRC__TRAIN_READ_GATE {1} \
   CONFIG.PSU__DDRC__TRAIN_WRITE_LEVEL {1} \
   CONFIG.PSU__DDRC__T_FAW {30.0} \
   CONFIG.PSU__DDRC__T_RAS_MIN {32.0} \
   CONFIG.PSU__DDRC__T_RC {45.32} \
   CONFIG.PSU__DDRC__T_RCD {16} \
   CONFIG.PSU__DDRC__T_RP {16} \
   CONFIG.PSU__DDRC__VENDOR_PART {OTHERS} \
   CONFIG.PSU__DDRC__VIDEO_BUFFER_SIZE {0} \
   CONFIG.PSU__DDRC__VREF {1} \
   CONFIG.PSU__DDR_HIGH_ADDRESS_GUI_ENABLE {1} \
   CONFIG.PSU__DDR_QOS_ENABLE {0} \
   CONFIG.PSU__DDR_QOS_FIX_HP0_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP0_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP1_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP1_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP2_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP2_WRQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP3_RDQOS {} \
   CONFIG.PSU__DDR_QOS_FIX_HP3_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP0_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP0_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP1_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP1_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP2_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP2_WRQOS {} \
   CONFIG.PSU__DDR_QOS_HP3_RDQOS {} \
   CONFIG.PSU__DDR_QOS_HP3_WRQOS {} \
   CONFIG.PSU__DDR_QOS_RD_HPR_THRSHLD {} \
   CONFIG.PSU__DDR_QOS_RD_LPR_THRSHLD {} \
   CONFIG.PSU__DDR_QOS_WR_THRSHLD {} \
   CONFIG.PSU__DDR_SW_REFRESH_ENABLED {1} \
   CONFIG.PSU__DDR__INTERFACE__FREQMHZ {600.000} \
   CONFIG.PSU__DEVICE_TYPE {RFSOC} \
   CONFIG.PSU__DISPLAYPORT__LANE0__ENABLE {0} \
   CONFIG.PSU__DISPLAYPORT__LANE1__ENABLE {0} \
   CONFIG.PSU__DISPLAYPORT__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__DLL__ISUSED {1} \
   CONFIG.PSU__DPAUX__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENABLE__DDR__REFRESH__SIGNALS {0} \
   CONFIG.PSU__ENET0__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET0__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENET0__PTP__ENABLE {0} \
   CONFIG.PSU__ENET0__TSU__ENABLE {0} \
   CONFIG.PSU__ENET1__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET1__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__ENET1__PTP__ENABLE {0} \
   CONFIG.PSU__ENET1__TSU__ENABLE {0} \
   CONFIG.PSU__ENET2__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET2__GRP_MDIO__ENABLE {1} \
   CONFIG.PSU__ENET2__GRP_MDIO__IO {MIO 76 .. 77} \
   CONFIG.PSU__ENET2__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__ENET2__PERIPHERAL__IO {GT Lane2} \
   CONFIG.PSU__ENET2__PTP__ENABLE {0} \
   CONFIG.PSU__ENET2__TSU__ENABLE {0} \
   CONFIG.PSU__ENET3__FIFO__ENABLE {0} \
   CONFIG.PSU__ENET3__GRP_MDIO__ENABLE {0} \
   CONFIG.PSU__ENET3__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__ENET3__PERIPHERAL__IO {GT Lane3} \
   CONFIG.PSU__ENET3__PTP__ENABLE {0} \
   CONFIG.PSU__ENET3__TSU__ENABLE {0} \
   CONFIG.PSU__EN_AXI_STATUS_PORTS {0} \
   CONFIG.PSU__EN_EMIO_TRACE {0} \
   CONFIG.PSU__EP__IP {0} \
   CONFIG.PSU__EXPAND__CORESIGHT {0} \
   CONFIG.PSU__EXPAND__FPD_SLAVES {0} \
   CONFIG.PSU__EXPAND__GIC {0} \
   CONFIG.PSU__EXPAND__LOWER_LPS_SLAVES {0} \
   CONFIG.PSU__EXPAND__UPPER_LPS_SLAVES {0} \
   CONFIG.PSU__FPDMASTERS_COHERENCY {0} \
   CONFIG.PSU__FPD_SLCR__WDT1__ACT_FREQMHZ {100} \
   CONFIG.PSU__FPD_SLCR__WDT1__FREQMHZ {100} \
   CONFIG.PSU__FPD_SLCR__WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__FPGA_PL0_ENABLE {1} \
   CONFIG.PSU__FPGA_PL1_ENABLE {1} \
   CONFIG.PSU__FPGA_PL2_ENABLE {0} \
   CONFIG.PSU__FPGA_PL3_ENABLE {0} \
   CONFIG.PSU__FP__POWER__ON {1} \
   CONFIG.PSU__FTM__CTI_IN_0 {0} \
   CONFIG.PSU__FTM__CTI_IN_1 {0} \
   CONFIG.PSU__FTM__CTI_IN_2 {0} \
   CONFIG.PSU__FTM__CTI_IN_3 {0} \
   CONFIG.PSU__FTM__CTI_OUT_0 {0} \
   CONFIG.PSU__FTM__CTI_OUT_1 {0} \
   CONFIG.PSU__FTM__CTI_OUT_2 {0} \
   CONFIG.PSU__FTM__CTI_OUT_3 {0} \
   CONFIG.PSU__FTM__GPI {0} \
   CONFIG.PSU__FTM__GPO {0} \
   CONFIG.PSU__GEM0_COHERENCY {0} \
   CONFIG.PSU__GEM0_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM1_COHERENCY {0} \
   CONFIG.PSU__GEM1_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM2_COHERENCY {0} \
   CONFIG.PSU__GEM2_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM2__REF_CLK_FREQ {125} \
   CONFIG.PSU__GEM2__REF_CLK_SEL {Ref Clk2} \
   CONFIG.PSU__GEM3_COHERENCY {0} \
   CONFIG.PSU__GEM3_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__GEM3__REF_CLK_FREQ {125} \
   CONFIG.PSU__GEM3__REF_CLK_SEL {Ref Clk3} \
   CONFIG.PSU__GEM__TSU__ENABLE {0} \
   CONFIG.PSU__GEN_IPI_0__MASTER {APU} \
   CONFIG.PSU__GEN_IPI_10__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_1__MASTER {RPU0} \
   CONFIG.PSU__GEN_IPI_2__MASTER {RPU1} \
   CONFIG.PSU__GEN_IPI_3__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_4__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_5__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_6__MASTER {PMU} \
   CONFIG.PSU__GEN_IPI_7__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_8__MASTER {NONE} \
   CONFIG.PSU__GEN_IPI_9__MASTER {NONE} \
   CONFIG.PSU__GPIO0_MIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO1_MIO__IO {MIO 26 .. 51} \
   CONFIG.PSU__GPIO1_MIO__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__GPIO2_MIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO_EMIO_WIDTH {1} \
   CONFIG.PSU__GPIO_EMIO__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__GPIO_EMIO__PERIPHERAL__IO {<Select>} \
   CONFIG.PSU__GPIO_EMIO__WIDTH {[94:0]} \
   CONFIG.PSU__GPU_PP0__POWER__ON {0} \
   CONFIG.PSU__GPU_PP1__POWER__ON {0} \
   CONFIG.PSU__GT_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__GT__PRE_EMPH_LVL_4 {} \
   CONFIG.PSU__GT__VLT_SWNG_LVL_4 {} \
   CONFIG.PSU__HIGH_ADDRESS__ENABLE {1} \
   CONFIG.PSU__HPM0_FPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM0_FPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__HPM0_LPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM0_LPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__HPM1_FPD__NUM_READ_THREADS {4} \
   CONFIG.PSU__HPM1_FPD__NUM_WRITE_THREADS {4} \
   CONFIG.PSU__I2C0_LOOP_I2C1__ENABLE {0} \
   CONFIG.PSU__I2C0__GRP_INT__ENABLE {0} \
   CONFIG.PSU__I2C0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__I2C0__PERIPHERAL__IO {MIO 34 .. 35} \
   CONFIG.PSU__I2C1__GRP_INT__ENABLE {0} \
   CONFIG.PSU__I2C1__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__I2C1__PERIPHERAL__IO {MIO 36 .. 37} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC0_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC1_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC2_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC3_SEL {APB} \
   CONFIG.PSU__IOU_SLCR__TTC0__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC0__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC1__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC1__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC2__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC2__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC3__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__TTC3__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__WDT0__ACT_FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__WDT0__FREQMHZ {100} \
   CONFIG.PSU__IOU_SLCR__WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__IRQ_P2F_ADMA_CHAN__INT {0} \
   CONFIG.PSU__IRQ_P2F_AIB_AXI__INT {0} \
   CONFIG.PSU__IRQ_P2F_AMS__INT {0} \
   CONFIG.PSU__IRQ_P2F_APM_FPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_COMM__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_CPUMNT__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_CTI__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_EXTERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_L2ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_PMU__INT {0} \
   CONFIG.PSU__IRQ_P2F_APU_REGS__INT {0} \
   CONFIG.PSU__IRQ_P2F_ATB_LPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_CAN0__INT {0} \
   CONFIG.PSU__IRQ_P2F_CAN1__INT {0} \
   CONFIG.PSU__IRQ_P2F_CLKMON__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSUPMU_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSU_DMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_CSU__INT {0} \
   CONFIG.PSU__IRQ_P2F_DDR_SS__INT {0} \
   CONFIG.PSU__IRQ_P2F_DPDMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_DPORT__INT {0} \
   CONFIG.PSU__IRQ_P2F_EFUSE__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT0_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT0__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT1_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT1__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT2_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT2__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT3_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_ENT3__INT {0} \
   CONFIG.PSU__IRQ_P2F_FPD_APB__INT {0} \
   CONFIG.PSU__IRQ_P2F_FPD_ATB_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_FP_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_GDMA_CHAN__INT {0} \
   CONFIG.PSU__IRQ_P2F_GPIO__INT {0} \
   CONFIG.PSU__IRQ_P2F_GPU__INT {0} \
   CONFIG.PSU__IRQ_P2F_I2C0__INT {0} \
   CONFIG.PSU__IRQ_P2F_I2C1__INT {0} \
   CONFIG.PSU__IRQ_P2F_LPD_APB__INT {0} \
   CONFIG.PSU__IRQ_P2F_LPD_APM__INT {0} \
   CONFIG.PSU__IRQ_P2F_LP_WDT__INT {0} \
   CONFIG.PSU__IRQ_P2F_NAND__INT {0} \
   CONFIG.PSU__IRQ_P2F_OCM_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_DMA__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_LEGACY__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_MSC__INT {0} \
   CONFIG.PSU__IRQ_P2F_PCIE_MSI__INT {0} \
   CONFIG.PSU__IRQ_P2F_PL_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_QSPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_R5_CORE0_ECC_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_R5_CORE1_ECC_ERR__INT {0} \
   CONFIG.PSU__IRQ_P2F_RPU_IPI__INT {0} \
   CONFIG.PSU__IRQ_P2F_RPU_PERMON__INT {0} \
   CONFIG.PSU__IRQ_P2F_RTC_ALARM__INT {0} \
   CONFIG.PSU__IRQ_P2F_RTC_SECONDS__INT {1} \
   CONFIG.PSU__IRQ_P2F_SATA__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO0_WAKE__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO0__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO1_WAKE__INT {0} \
   CONFIG.PSU__IRQ_P2F_SDIO1__INT {0} \
   CONFIG.PSU__IRQ_P2F_SPI0__INT {0} \
   CONFIG.PSU__IRQ_P2F_SPI1__INT {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC0__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC1__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC2__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_TTC3__INT2 {0} \
   CONFIG.PSU__IRQ_P2F_UART0__INT {0} \
   CONFIG.PSU__IRQ_P2F_UART1__INT {0} \
   CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_OTG__INT0 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_OTG__INT1 {0} \
   CONFIG.PSU__IRQ_P2F_USB3_PMU_WAKEUP__INT {0} \
   CONFIG.PSU__IRQ_P2F_XMPU_FPD__INT {0} \
   CONFIG.PSU__IRQ_P2F_XMPU_LPD__INT {0} \
   CONFIG.PSU__IRQ_P2F__INTF_FPD_SMMU__INT {0} \
   CONFIG.PSU__IRQ_P2F__INTF_PPD_CCI__INT {0} \
   CONFIG.PSU__L2_BANK0__POWER__ON {1} \
   CONFIG.PSU__LPDMA0_COHERENCY {0} \
   CONFIG.PSU__LPDMA1_COHERENCY {0} \
   CONFIG.PSU__LPDMA2_COHERENCY {0} \
   CONFIG.PSU__LPDMA3_COHERENCY {0} \
   CONFIG.PSU__LPDMA4_COHERENCY {0} \
   CONFIG.PSU__LPDMA5_COHERENCY {0} \
   CONFIG.PSU__LPDMA6_COHERENCY {0} \
   CONFIG.PSU__LPDMA7_COHERENCY {0} \
   CONFIG.PSU__LPD_SLCR__CSUPMU_WDT_CLK_SEL__SELECT {APB} \
   CONFIG.PSU__LPD_SLCR__CSUPMU__ACT_FREQMHZ {100} \
   CONFIG.PSU__LPD_SLCR__CSUPMU__FREQMHZ {100} \
   CONFIG.PSU__MAXIGP0__DATA_WIDTH {128} \
   CONFIG.PSU__MAXIGP1__DATA_WIDTH {128} \
   CONFIG.PSU__MAXIGP2__DATA_WIDTH {32} \
   CONFIG.PSU__M_AXI_GP0_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__M_AXI_GP1_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__M_AXI_GP2_SUPPORTS_NARROW_BURST {1} \
   CONFIG.PSU__NAND_COHERENCY {0} \
   CONFIG.PSU__NAND_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__NAND__CHIP_ENABLE__ENABLE {0} \
   CONFIG.PSU__NAND__DATA_STROBE__ENABLE {0} \
   CONFIG.PSU__NAND__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__NAND__READY0_BUSY__ENABLE {0} \
   CONFIG.PSU__NAND__READY1_BUSY__ENABLE {0} \
   CONFIG.PSU__NAND__READY_BUSY__ENABLE {0} \
   CONFIG.PSU__NUM_FABRIC_RESETS {1} \
   CONFIG.PSU__OCM_BANK0__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK1__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK2__POWER__ON {1} \
   CONFIG.PSU__OCM_BANK3__POWER__ON {1} \
   CONFIG.PSU__OVERRIDE_HPX_QOS {0} \
   CONFIG.PSU__OVERRIDE__BASIC_CLOCK {0} \
   CONFIG.PSU__PCIE__ACS_VIOLAION {0} \
   CONFIG.PSU__PCIE__ACS_VIOLATION {0} \
   CONFIG.PSU__PCIE__AER_CAPABILITY {0} \
   CONFIG.PSU__PCIE__ATOMICOP_EGRESS_BLOCKED {0} \
   CONFIG.PSU__PCIE__BAR0_64BIT {0} \
   CONFIG.PSU__PCIE__BAR0_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR0_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR0_VAL {} \
   CONFIG.PSU__PCIE__BAR1_64BIT {0} \
   CONFIG.PSU__PCIE__BAR1_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR1_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR1_VAL {} \
   CONFIG.PSU__PCIE__BAR2_64BIT {0} \
   CONFIG.PSU__PCIE__BAR2_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR2_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR2_VAL {} \
   CONFIG.PSU__PCIE__BAR3_64BIT {0} \
   CONFIG.PSU__PCIE__BAR3_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR3_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR3_VAL {} \
   CONFIG.PSU__PCIE__BAR4_64BIT {0} \
   CONFIG.PSU__PCIE__BAR4_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR4_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR4_VAL {} \
   CONFIG.PSU__PCIE__BAR5_64BIT {0} \
   CONFIG.PSU__PCIE__BAR5_ENABLE {0} \
   CONFIG.PSU__PCIE__BAR5_PREFETCHABLE {0} \
   CONFIG.PSU__PCIE__BAR5_VAL {} \
   CONFIG.PSU__PCIE__CLASS_CODE_BASE {} \
   CONFIG.PSU__PCIE__CLASS_CODE_INTERFACE {} \
   CONFIG.PSU__PCIE__CLASS_CODE_SUB {} \
   CONFIG.PSU__PCIE__CLASS_CODE_VALUE {} \
   CONFIG.PSU__PCIE__COMPLETER_ABORT {0} \
   CONFIG.PSU__PCIE__COMPLTION_TIMEOUT {0} \
   CONFIG.PSU__PCIE__CORRECTABLE_INT_ERR {0} \
   CONFIG.PSU__PCIE__CRS_SW_VISIBILITY {0} \
   CONFIG.PSU__PCIE__DEVICE_ID {} \
   CONFIG.PSU__PCIE__ECRC_CHECK {0} \
   CONFIG.PSU__PCIE__ECRC_ERR {0} \
   CONFIG.PSU__PCIE__ECRC_GEN {0} \
   CONFIG.PSU__PCIE__EROM_ENABLE {0} \
   CONFIG.PSU__PCIE__EROM_VAL {} \
   CONFIG.PSU__PCIE__FLOW_CONTROL_ERR {0} \
   CONFIG.PSU__PCIE__FLOW_CONTROL_PROTOCOL_ERR {0} \
   CONFIG.PSU__PCIE__HEADER_LOG_OVERFLOW {0} \
   CONFIG.PSU__PCIE__INTX_GENERATION {0} \
   CONFIG.PSU__PCIE__LANE0__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE1__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE2__ENABLE {0} \
   CONFIG.PSU__PCIE__LANE3__ENABLE {0} \
   CONFIG.PSU__PCIE__MC_BLOCKED_TLP {0} \
   CONFIG.PSU__PCIE__MSIX_BAR_INDICATOR {} \
   CONFIG.PSU__PCIE__MSIX_CAPABILITY {0} \
   CONFIG.PSU__PCIE__MSIX_PBA_BAR_INDICATOR {} \
   CONFIG.PSU__PCIE__MSIX_PBA_OFFSET {0} \
   CONFIG.PSU__PCIE__MSIX_TABLE_OFFSET {0} \
   CONFIG.PSU__PCIE__MSIX_TABLE_SIZE {0} \
   CONFIG.PSU__PCIE__MSI_64BIT_ADDR_CAPABLE {0} \
   CONFIG.PSU__PCIE__MSI_CAPABILITY {0} \
   CONFIG.PSU__PCIE__MULTIHEADER {0} \
   CONFIG.PSU__PCIE__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PCIE__PERIPHERAL__ENDPOINT_ENABLE {1} \
   CONFIG.PSU__PCIE__PERIPHERAL__ROOTPORT_ENABLE {0} \
   CONFIG.PSU__PCIE__PERM_ROOT_ERR_UPDATE {0} \
   CONFIG.PSU__PCIE__RECEIVER_ERR {0} \
   CONFIG.PSU__PCIE__RECEIVER_OVERFLOW {0} \
   CONFIG.PSU__PCIE__RESET__POLARITY {Active Low} \
   CONFIG.PSU__PCIE__REVISION_ID {} \
   CONFIG.PSU__PCIE__SUBSYSTEM_ID {} \
   CONFIG.PSU__PCIE__SUBSYSTEM_VENDOR_ID {} \
   CONFIG.PSU__PCIE__SURPRISE_DOWN {0} \
   CONFIG.PSU__PCIE__TLP_PREFIX_BLOCKED {0} \
   CONFIG.PSU__PCIE__UNCORRECTABL_INT_ERR {0} \
   CONFIG.PSU__PCIE__VENDOR_ID {} \
   CONFIG.PSU__PJTAG__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PL_CLK0_BUF {TRUE} \
   CONFIG.PSU__PL_CLK1_BUF {TRUE} \
   CONFIG.PSU__PL_CLK2_BUF {FALSE} \
   CONFIG.PSU__PL_CLK3_BUF {FALSE} \
   CONFIG.PSU__PL__POWER__ON {1} \
   CONFIG.PSU__PMU_COHERENCY {0} \
   CONFIG.PSU__PMU__AIBACK__ENABLE {0} \
   CONFIG.PSU__PMU__EMIO_GPI__ENABLE {0} \
   CONFIG.PSU__PMU__EMIO_GPO__ENABLE {0} \
   CONFIG.PSU__PMU__GPI0__ENABLE {0} \
   CONFIG.PSU__PMU__GPI1__ENABLE {0} \
   CONFIG.PSU__PMU__GPI2__ENABLE {0} \
   CONFIG.PSU__PMU__GPI3__ENABLE {0} \
   CONFIG.PSU__PMU__GPI4__ENABLE {0} \
   CONFIG.PSU__PMU__GPI5__ENABLE {0} \
   CONFIG.PSU__PMU__GPO0__ENABLE {0} \
   CONFIG.PSU__PMU__GPO1__ENABLE {0} \
   CONFIG.PSU__PMU__GPO2__ENABLE {0} \
   CONFIG.PSU__PMU__GPO3__ENABLE {0} \
   CONFIG.PSU__PMU__GPO4__ENABLE {0} \
   CONFIG.PSU__PMU__GPO5__ENABLE {0} \
   CONFIG.PSU__PMU__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__PMU__PLERROR__ENABLE {0} \
   CONFIG.PSU__PRESET_APPLIED {0} \
   CONFIG.PSU__PROTECTION__DDR_SEGMENTS {NONE} \
   CONFIG.PSU__PROTECTION__DEBUG {0} \
   CONFIG.PSU__PROTECTION__ENABLE {0} \
   CONFIG.PSU__PROTECTION__FPD_SEGMENTS {SA:0xFD1A0000 ;SIZE:1280;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD000000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD010000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD020000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD030000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD040000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD050000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD610000 ;SIZE:512;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware        |        SA:0xFD5D0000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware} \
   CONFIG.PSU__PROTECTION__LOCK_UNUSED_SEGMENTS {0} \
   CONFIG.PSU__PROTECTION__LPD_SEGMENTS {SA:0xFF980000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFF5E0000 ;SIZE:2560;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFFCC0000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFF180000 ;SIZE:768;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFF410000 ;SIZE:640;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFFA70000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware|SA:0xFF9A0000 ;SIZE:64;UNIT:KB ;RegionTZ:Secure ;WrAllowed:Read/Write;subsystemId:PMU Firmware} \
   CONFIG.PSU__PROTECTION__MASTERS {USB1:NonSecure;0|USB0:NonSecure;1|S_AXI_LPD:NA;0|S_AXI_HPC1_FPD:NA;0|S_AXI_HPC0_FPD:NA;0|S_AXI_HP3_FPD:NA;0|S_AXI_HP2_FPD:NA;0|S_AXI_HP1_FPD:NA;1|S_AXI_HP0_FPD:NA;0|S_AXI_ACP:NA;0|S_AXI_ACE:NA;0|SD1:NonSecure;0|SD0:NonSecure;1|SATA1:NonSecure;0|SATA0:NonSecure;0|RPU1:Secure;1|RPU0:Secure;1|QSPI:NonSecure;1|PMU:NA;1|PCIe:NonSecure;0|NAND:NonSecure;0|LDMA:NonSecure;1|GPU:NonSecure;1|GEM3:NonSecure;1|GEM2:NonSecure;1|GEM1:NonSecure;0|GEM0:NonSecure;0|FDMA:NonSecure;1|DP:NonSecure;0|DAP:NA;1|Coresight:NA;1|CSU:NA;1|APU:NA;1} \
   CONFIG.PSU__PROTECTION__MASTERS_TZ {GEM0:NonSecure|SD1:NonSecure|GEM2:NonSecure|GEM1:NonSecure|GEM3:NonSecure|PCIe:NonSecure|DP:NonSecure|NAND:NonSecure|GPU:NonSecure|USB1:NonSecure|USB0:NonSecure|LDMA:NonSecure|FDMA:NonSecure|QSPI:NonSecure|SD0:NonSecure} \
   CONFIG.PSU__PROTECTION__OCM_SEGMENTS {NONE} \
   CONFIG.PSU__PROTECTION__PRESUBSYSTEMS {NONE} \
   CONFIG.PSU__PROTECTION__SLAVES { \
     LPD;USB3_1_XHCI;FE300000;FE3FFFFF;0|LPD;USB3_1;FF9E0000;FF9EFFFF;0|LPD;USB3_0_XHCI;FE200000;FE2FFFFF;1|LPD;USB3_0;FF9D0000;FF9DFFFF;1|LPD;UART1;FF010000;FF01FFFF;0|LPD;UART0;FF000000;FF00FFFF;1|LPD;TTC3;FF140000;FF14FFFF;0|LPD;TTC2;FF130000;FF13FFFF;0|LPD;TTC1;FF120000;FF12FFFF;0|LPD;TTC0;FF110000;FF11FFFF;0|FPD;SWDT1;FD4D0000;FD4DFFFF;0|LPD;SWDT0;FF150000;FF15FFFF;0|LPD;SPI1;FF050000;FF05FFFF;0|LPD;SPI0;FF040000;FF04FFFF;1|FPD;SMMU_REG;FD5F0000;FD5FFFFF;1|FPD;SMMU;FD800000;FDFFFFFF;1|FPD;SIOU;FD3D0000;FD3DFFFF;1|FPD;SERDES;FD400000;FD47FFFF;1|LPD;SD1;FF170000;FF17FFFF;0|LPD;SD0;FF160000;FF16FFFF;1|FPD;SATA;FD0C0000;FD0CFFFF;0|LPD;RTC;FFA60000;FFA6FFFF;1|LPD;RSA_CORE;FFCE0000;FFCEFFFF;1|LPD;RPU;FF9A0000;FF9AFFFF;1|LPD;R5_TCM_RAM_GLOBAL;FFE00000;FFE3FFFF;1|LPD;R5_1_Instruction_Cache;FFEC0000;FFECFFFF;1|LPD;R5_1_Data_Cache;FFED0000;FFEDFFFF;1|LPD;R5_1_BTCM_GLOBAL;FFEB0000;FFEBFFFF;1|LPD;R5_1_ATCM_GLOBAL;FFE90000;FFE9FFFF;1|LPD;R5_0_Instruction_Cache;FFE40000;FFE4FFFF;1|LPD;R5_0_Data_Cache;FFE50000;FFE5FFFF;1|LPD;R5_0_BTCM_GLOBAL;FFE20000;FFE2FFFF;1|LPD;R5_0_ATCM_GLOBAL;FFE00000;FFE0FFFF;1|LPD;QSPI_Linear_Address;C0000000;DFFFFFFF;1|LPD;QSPI;FF0F0000;FF0FFFFF;1|LPD;PMU_RAM;FFDC0000;FFDDFFFF;1|LPD;PMU_GLOBAL;FFD80000;FFDBFFFF;1|FPD;PCIE_MAIN;FD0E0000;FD0EFFFF;0|FPD;PCIE_LOW;E0000000;EFFFFFFF;0|FPD;PCIE_HIGH2;8000000000;BFFFFFFFFF;0|FPD;PCIE_HIGH1;600000000;7FFFFFFFF;0|FPD;PCIE_DMA;FD0F0000;FD0FFFFF;0|FPD;PCIE_ATTRIB;FD480000;FD48FFFF;0|LPD;OCM_XMPU_CFG;FFA70000;FFA7FFFF;1|LPD;OCM_SLCR;FF960000;FF96FFFF;1|OCM;OCM;FFFC0000;FFFFFFFF;1|LPD;NAND;FF100000;FF10FFFF;0|LPD;MBISTJTAG;FFCF0000;FFCFFFFF;1|LPD;LPD_XPPU_SINK;FF9C0000;FF9CFFFF;1|LPD;LPD_XPPU;FF980000;FF98FFFF;1|LPD;LPD_SLCR_SECURE;FF4B0000;FF4DFFFF;1|LPD;LPD_SLCR;FF410000;FF4AFFFF;1|LPD;LPD_GPV;FE100000;FE1FFFFF;1|LPD;LPD_DMA_7;FFAF0000;FFAFFFFF;1|LPD;LPD_DMA_6;FFAE0000;FFAEFFFF;1|LPD;LPD_DMA_5;FFAD0000;FFADFFFF;1|LPD;LPD_DMA_4;FFAC0000;FFACFFFF;1|LPD;LPD_DMA_3;FFAB0000;FFABFFFF;1|LPD;LPD_DMA_2;FFAA0000;FFAAFFFF;1|LPD;LPD_DMA_1;FFA90000;FFA9FFFF;1|LPD;LPD_DMA_0;FFA80000;FFA8FFFF;1|LPD;IPI_CTRL;FF380000;FF3FFFFF;1|LPD;IOU_SLCR;FF180000;FF23FFFF;1|LPD;IOU_SECURE_SLCR;FF240000;FF24FFFF;1|LPD;IOU_SCNTRS;FF260000;FF26FFFF;1|LPD;IOU_SCNTR;FF250000;FF25FFFF;1|LPD;IOU_GPV;FE000000;FE0FFFFF;1|LPD;I2C1;FF030000;FF03FFFF;1|LPD;I2C0;FF020000;FF02FFFF;1|FPD;GPU;FD4B0000;FD4BFFFF;0|LPD;GPIO;FF0A0000;FF0AFFFF;1|LPD;GEM3;FF0E0000;FF0EFFFF;1|LPD;GEM2;FF0D0000;FF0DFFFF;1|LPD;GEM1;FF0C0000;FF0CFFFF;0|LPD;GEM0;FF0B0000;FF0BFFFF;0|FPD;FPD_XMPU_SINK;FD4F0000;FD4FFFFF;1|FPD;FPD_XMPU_CFG;FD5D0000;FD5DFFFF;1|FPD;FPD_SLCR_SECURE;FD690000;FD6CFFFF;1|FPD;FPD_SLCR;FD610000;FD68FFFF;1|FPD;FPD_DMA_CH7;FD570000;FD57FFFF;1|FPD;FPD_DMA_CH6;FD560000;FD56FFFF;1|FPD;FPD_DMA_CH5;FD550000;FD55FFFF;1|FPD;FPD_DMA_CH4;FD540000;FD54FFFF;1|FPD;FPD_DMA_CH3;FD530000;FD53FFFF;1|FPD;FPD_DMA_CH2;FD520000;FD52FFFF;1|FPD;FPD_DMA_CH1;FD510000;FD51FFFF;1|FPD;FPD_DMA_CH0;FD500000;FD50FFFF;1|LPD;EFUSE;FFCC0000;FFCCFFFF;1|FPD;Display Port;FD4A0000;FD4AFFFF;0|FPD;DPDMA;FD4C0000;FD4CFFFF;0|FPD;DDR_XMPU5_CFG;FD050000;FD05FFFF;1|FPD;DDR_XMPU4_CFG;FD040000;FD04FFFF;1|FPD;DDR_XMPU3_CFG;FD030000;FD03FFFF;1|FPD;DDR_XMPU2_CFG;FD020000;FD02FFFF;1|FPD;DDR_XMPU1_CFG;FD010000;FD01FFFF;1|FPD;DDR_XMPU0_CFG;FD000000;FD00FFFF;1|FPD;DDR_QOS_CTRL;FD090000;FD09FFFF;1|FPD;DDR_PHY;FD080000;FD08FFFF;1|DDR;DDR_LOW;0;7FFFFFFF;1|DDR;DDR_HIGH;800000000;97FFFFFFF;1|FPD;DDDR_CTRL;FD070000;FD070FFF;1|LPD;Coresight;FE800000;FEFFFFFF;1|LPD;CSU_DMA;FFC80000;FFC9FFFF;1|LPD;CSU;FFCA0000;FFCAFFFF;1|LPD;CRL_APB;FF5E0000;FF85FFFF;1|FPD;CRF_APB;FD1A0000;FD2DFFFF;1|FPD;CCI_REG;FD5E0000;FD5EFFFF;1|LPD;CAN1;FF070000;FF07FFFF;0|LPD;CAN0;FF060000;FF06FFFF;0|FPD;APU;FD5C0000;FD5CFFFF;1|LPD;APM_INTC_IOU;FFA20000;FFA2FFFF;1|LPD;APM_FPD_LPD;FFA30000;FFA3FFFF;1|FPD;APM_5;FD490000;FD49FFFF;1|FPD;APM_0;FD0B0000;FD0BFFFF;1|LPD;APM2;FFA10000;FFA1FFFF;1|LPD;APM1;FFA00000;FFA0FFFF;1|LPD;AMS;FFA50000;FFA5FFFF;1|FPD;AFI_5;FD3B0000;FD3BFFFF;1|FPD;AFI_4;FD3A0000;FD3AFFFF;1|FPD;AFI_3;FD390000;FD39FFFF;1|FPD;AFI_2;FD380000;FD38FFFF;1|FPD;AFI_1;FD370000;FD37FFFF;1|FPD;AFI_0;FD360000;FD36FFFF;1|LPD;AFIFM6;FF9B0000;FF9BFFFF;1|FPD;ACPU_GIC;F9010000;F907FFFF;1 \
   } \
   CONFIG.PSU__PROTECTION__SUBSYSTEMS {PMU Firmware:PMU} \
   CONFIG.PSU__PSS_ALT_REF_CLK__ENABLE {0} \
   CONFIG.PSU__PSS_ALT_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__PSS_REF_CLK__FREQMHZ {33.333} \
   CONFIG.PSU__QSPI_COHERENCY {0} \
   CONFIG.PSU__QSPI_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__QSPI__GRP_FBCLK__ENABLE {1} \
   CONFIG.PSU__QSPI__GRP_FBCLK__IO {MIO 6} \
   CONFIG.PSU__QSPI__PERIPHERAL__DATA_MODE {x4} \
   CONFIG.PSU__QSPI__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__QSPI__PERIPHERAL__IO {MIO 0 .. 12} \
   CONFIG.PSU__QSPI__PERIPHERAL__MODE {Dual Parallel} \
   CONFIG.PSU__REPORT__DBGLOG {0} \
   CONFIG.PSU__RPU_COHERENCY {0} \
   CONFIG.PSU__RPU__POWER__ON {1} \
   CONFIG.PSU__SATA__LANE0__ENABLE {0} \
   CONFIG.PSU__SATA__LANE1__ENABLE {0} \
   CONFIG.PSU__SATA__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SAXIGP0__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP1__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP2__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP3__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP4__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP5__DATA_WIDTH {128} \
   CONFIG.PSU__SAXIGP6__DATA_WIDTH {128} \
   CONFIG.PSU__SD0_COHERENCY {0} \
   CONFIG.PSU__SD0_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__SD0__DATA_TRANSFER_MODE {8Bit} \
   CONFIG.PSU__SD0__GRP_CD__ENABLE {1} \
   CONFIG.PSU__SD0__GRP_CD__IO {MIO 24} \
   CONFIG.PSU__SD0__GRP_POW__ENABLE {0} \
   CONFIG.PSU__SD0__GRP_WP__ENABLE {1} \
   CONFIG.PSU__SD0__GRP_WP__IO {MIO 25} \
   CONFIG.PSU__SD0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__SD0__PERIPHERAL__IO {MIO 13 .. 22} \
   CONFIG.PSU__SD0__RESET__ENABLE {0} \
   CONFIG.PSU__SD0__SLOT_TYPE {SD 3.0} \
   CONFIG.PSU__SD1_COHERENCY {0} \
   CONFIG.PSU__SD1_ROUTE_THROUGH_FPD {0} \
   CONFIG.PSU__SD1__GRP_CD__ENABLE {0} \
   CONFIG.PSU__SD1__GRP_POW__ENABLE {0} \
   CONFIG.PSU__SD1__GRP_WP__ENABLE {0} \
   CONFIG.PSU__SD1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SD1__RESET__ENABLE {0} \
   CONFIG.PSU__SPI0_LOOP_SPI1__ENABLE {0} \
   CONFIG.PSU__SPI0__GRP_SS0__ENABLE {1} \
   CONFIG.PSU__SPI0__GRP_SS0__IO {MIO 41} \
   CONFIG.PSU__SPI0__GRP_SS1__ENABLE {0} \
   CONFIG.PSU__SPI0__GRP_SS2__ENABLE {0} \
   CONFIG.PSU__SPI0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__SPI0__PERIPHERAL__IO {MIO 38 .. 43} \
   CONFIG.PSU__SPI1__GRP_SS0__ENABLE {0} \
   CONFIG.PSU__SPI1__GRP_SS1__ENABLE {0} \
   CONFIG.PSU__SPI1__GRP_SS2__ENABLE {0} \
   CONFIG.PSU__SPI1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT0__CLOCK__ENABLE {0} \
   CONFIG.PSU__SWDT0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT0__PERIPHERAL__IO {NA} \
   CONFIG.PSU__SWDT0__RESET__ENABLE {0} \
   CONFIG.PSU__SWDT1__CLOCK__ENABLE {0} \
   CONFIG.PSU__SWDT1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__SWDT1__PERIPHERAL__IO {NA} \
   CONFIG.PSU__SWDT1__RESET__ENABLE {0} \
   CONFIG.PSU__TCM0A__POWER__ON {1} \
   CONFIG.PSU__TCM0B__POWER__ON {1} \
   CONFIG.PSU__TCM1A__POWER__ON {1} \
   CONFIG.PSU__TCM1B__POWER__ON {1} \
   CONFIG.PSU__TESTSCAN__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TRACE_PIPELINE_WIDTH {8} \
   CONFIG.PSU__TRACE__INTERNAL_WIDTH {32} \
   CONFIG.PSU__TRACE__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TRISTATE__INVERTED {1} \
   CONFIG.PSU__TSU__BUFG_PORT_PAIR {0} \
   CONFIG.PSU__TTC0__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC0__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TTC0__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC0__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC1__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TTC1__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC1__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC2__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC2__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TTC2__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC2__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__TTC3__CLOCK__ENABLE {0} \
   CONFIG.PSU__TTC3__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__TTC3__PERIPHERAL__IO {NA} \
   CONFIG.PSU__TTC3__WAVEOUT__ENABLE {0} \
   CONFIG.PSU__UART0_LOOP_UART1__ENABLE {0} \
   CONFIG.PSU__UART0__BAUD_RATE {115200} \
   CONFIG.PSU__UART0__MODEM__ENABLE {0} \
   CONFIG.PSU__UART0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__UART0__PERIPHERAL__IO {MIO 46 .. 47} \
   CONFIG.PSU__UART1__MODEM__ENABLE {0} \
   CONFIG.PSU__UART1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB0_COHERENCY {0} \
   CONFIG.PSU__USB0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__USB0__PERIPHERAL__IO {MIO 52 .. 63} \
   CONFIG.PSU__USB0__REF_CLK_FREQ {100} \
   CONFIG.PSU__USB0__REF_CLK_SEL {Ref Clk0} \
   CONFIG.PSU__USB0__RESET__ENABLE {0} \
   CONFIG.PSU__USB1_COHERENCY {0} \
   CONFIG.PSU__USB1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB1__RESET__ENABLE {0} \
   CONFIG.PSU__USB2_0__EMIO__ENABLE {0} \
   CONFIG.PSU__USB2_1__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_0__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_0__PERIPHERAL__ENABLE {1} \
   CONFIG.PSU__USB3_0__PERIPHERAL__IO {GT Lane0} \
   CONFIG.PSU__USB3_1__EMIO__ENABLE {0} \
   CONFIG.PSU__USB3_1__PERIPHERAL__ENABLE {0} \
   CONFIG.PSU__USB__RESET__MODE {Boot Pin} \
   CONFIG.PSU__USB__RESET__POLARITY {Active Low} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP0 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP1 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP2 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP3 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP4 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP5 {0} \
   CONFIG.PSU__USE_DIFF_RW_CLK_GP6 {0} \
   CONFIG.PSU__USE__ADMA {0} \
   CONFIG.PSU__USE__APU_LEGACY_INTERRUPT {0} \
   CONFIG.PSU__USE__AUDIO {0} \
   CONFIG.PSU__USE__CLK {0} \
   CONFIG.PSU__USE__CLK0 {0} \
   CONFIG.PSU__USE__CLK1 {0} \
   CONFIG.PSU__USE__CLK2 {0} \
   CONFIG.PSU__USE__CLK3 {0} \
   CONFIG.PSU__USE__CROSS_TRIGGER {0} \
   CONFIG.PSU__USE__DDR_INTF_REQUESTED {0} \
   CONFIG.PSU__USE__DEBUG__TEST {0} \
   CONFIG.PSU__USE__EVENT_RPU {0} \
   CONFIG.PSU__USE__FABRIC__RST {1} \
   CONFIG.PSU__USE__FTM {0} \
   CONFIG.PSU__USE__GDMA {0} \
   CONFIG.PSU__USE__IRQ {0} \
   CONFIG.PSU__USE__IRQ0 {1} \
   CONFIG.PSU__USE__IRQ1 {1} \
   CONFIG.PSU__USE__M_AXI_GP0 {1} \
   CONFIG.PSU__USE__M_AXI_GP1 {0} \
   CONFIG.PSU__USE__M_AXI_GP2 {1} \
   CONFIG.PSU__USE__PROC_EVENT_BUS {0} \
   CONFIG.PSU__USE__RPU_LEGACY_INTERRUPT {0} \
   CONFIG.PSU__USE__RST0 {0} \
   CONFIG.PSU__USE__RST1 {0} \
   CONFIG.PSU__USE__RST2 {0} \
   CONFIG.PSU__USE__RST3 {0} \
   CONFIG.PSU__USE__RTC {1} \
   CONFIG.PSU__USE__STM {0} \
   CONFIG.PSU__USE__S_AXI_ACE {0} \
   CONFIG.PSU__USE__S_AXI_ACP {0} \
   CONFIG.PSU__USE__S_AXI_GP0 {0} \
   CONFIG.PSU__USE__S_AXI_GP1 {0} \
   CONFIG.PSU__USE__S_AXI_GP2 {0} \
   CONFIG.PSU__USE__S_AXI_GP3 {1} \
   CONFIG.PSU__USE__S_AXI_GP4 {0} \
   CONFIG.PSU__USE__S_AXI_GP5 {0} \
   CONFIG.PSU__USE__S_AXI_GP6 {0} \
   CONFIG.PSU__USE__USB3_0_HUB {0} \
   CONFIG.PSU__USE__USB3_1_HUB {0} \
   CONFIG.PSU__USE__VIDEO {0} \
   CONFIG.PSU__VIDEO_REF_CLK__ENABLE {0} \
   CONFIG.PSU__VIDEO_REF_CLK__FREQMHZ {33.333} \
   CONFIG.QSPI_BOARD_INTERFACE {custom} \
   CONFIG.SATA_BOARD_INTERFACE {custom} \
   CONFIG.SD0_BOARD_INTERFACE {custom} \
   CONFIG.SD1_BOARD_INTERFACE {custom} \
   CONFIG.SPI0_BOARD_INTERFACE {custom} \
   CONFIG.SPI1_BOARD_INTERFACE {custom} \
   CONFIG.SUBPRESET1 {Custom} \
   CONFIG.SUBPRESET2 {Custom} \
   CONFIG.SWDT0_BOARD_INTERFACE {custom} \
   CONFIG.SWDT1_BOARD_INTERFACE {custom} \
   CONFIG.TRACE_BOARD_INTERFACE {custom} \
   CONFIG.TTC0_BOARD_INTERFACE {custom} \
   CONFIG.TTC1_BOARD_INTERFACE {custom} \
   CONFIG.TTC2_BOARD_INTERFACE {custom} \
   CONFIG.TTC3_BOARD_INTERFACE {custom} \
   CONFIG.UART0_BOARD_INTERFACE {custom} \
   CONFIG.UART1_BOARD_INTERFACE {custom} \
   CONFIG.USB0_BOARD_INTERFACE {custom} \
   CONFIG.USB1_BOARD_INTERFACE {custom} \
 ] $zynq_ultra_ps_e_0

  # Create interface connections
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins axi_interc_0/S00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM0_LPD]
  connect_bd_intf_net -intf_net axi_dwidth_conv_0_M_AXI [get_bd_intf_pins axi_dwidth_conv_0/M_AXI] [get_bd_intf_pins axi_register_slice_0/S_AXI]
  connect_bd_intf_net -intf_net axi_dwidth_conv_1_M_AXI [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins axi_dwidth_conv_1/M_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M00_AXI [get_bd_intf_pins axi_interc_0/M00_AXI] [get_bd_intf_pins info_csr_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interc_0_M01_AXI [get_bd_intf_pins m_axi_sysmgmt_csr] [get_bd_intf_pins axi_interc_0/M01_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M02_AXI [get_bd_intf_pins m_axi_dataio_csr] [get_bd_intf_pins axi_interc_0/M02_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M03_AXI [get_bd_intf_pins m_axi_adcacq_csr] [get_bd_intf_pins axi_interc_0/M03_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M04_AXI [get_bd_intf_pins axi_intc_0/s_axi] [get_bd_intf_pins axi_interc_0/M04_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M05_AXI [get_bd_intf_pins axi_intc_1/s_axi] [get_bd_intf_pins axi_interc_0/M05_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M06_AXI [get_bd_intf_pins m_axi_ddr4_csr] [get_bd_intf_pins axi_interc_0/M06_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M07_AXI [get_bd_intf_pins m_axi_dac_src_csr] [get_bd_intf_pins axi_interc_0/M07_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M08_AXI [get_bd_intf_pins m_axi_eth_csr] [get_bd_intf_pins axi_interc_0/M08_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M09_AXI [get_bd_intf_pins axi_interc_0/M09_AXI] [get_bd_intf_pins ext_temp_irq/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interc_0_M10_AXI [get_bd_intf_pins m_axi_adc2dac_csr] [get_bd_intf_pins axi_interc_0/M10_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M11_AXI [get_bd_intf_pins m_axi_fir_csr] [get_bd_intf_pins axi_interc_0/M11_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M12_AXI [get_bd_intf_pins m_axi_pcie_csr] [get_bd_intf_pins axi_interc_0/M12_AXI]
  connect_bd_intf_net -intf_net axi_interc_0_M13_AXI [get_bd_intf_pins m_axi_ts_csr] [get_bd_intf_pins axi_interc_0/M13_AXI]
  connect_bd_intf_net -intf_net axi_register_slice_0_M_AXI [get_bd_intf_pins axi_register_slice_0/M_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/S_AXI_HP1_FPD]
  connect_bd_intf_net -intf_net axi_register_slice_1_M_AXI [get_bd_intf_pins axi_dwidth_conv_1/S_AXI] [get_bd_intf_pins axi_register_slice_1/M_AXI]
  connect_bd_intf_net -intf_net s_axi_hp1_fpd_1 [get_bd_intf_pins s_axi_hp1_fpd] [get_bd_intf_pins axi_dwidth_conv_0/S_AXI]
  connect_bd_intf_net -intf_net zynq_ultra_ps_e_0_M_AXI_HPM0_FPD [get_bd_intf_pins axi_register_slice_1/S_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM0_FPD]

  # Create port connections
  connect_bd_net -net axi_intc_0_irq [get_bd_pins axi_intc_0/irq] [get_bd_pins zynq_ultra_ps_e_0/pl_ps_irq0]
  connect_bd_net -net axi_intc_1_irq [get_bd_pins axi_intc_1/irq] [get_bd_pins zynq_ultra_ps_e_0/pl_ps_irq1]
  connect_bd_net -net dma_irq_1 [get_bd_pins dma_irq] [get_bd_pins irq_concat0/In0]
  connect_bd_net -net ext_temp_irq_irq [get_bd_pins ext_temp_irq/irq] [get_bd_pins irq_concat1/In1]
  connect_bd_net -net ext_temp_irq_n_1 [get_bd_pins ext_temp_irq_n] [get_bd_pins ext_temp_irq/intrpt_src_in]
  connect_bd_net -net irq_1_1 [get_bd_pins irq_1] [get_bd_pins irq_concat1/In0]
  connect_bd_net -net irq_concat1_dout [get_bd_pins axi_intc_0/intr] [get_bd_pins irq_concat0/dout]
  connect_bd_net -net irq_concat_dout [get_bd_pins axi_intc_1/intr] [get_bd_pins irq_concat1/dout]
  connect_bd_net -net pcie_mailbox_irq_1 [get_bd_pins pcie_mailbox_irq] [get_bd_pins irq_concat0/In1]
  connect_bd_net -net proc_sys_reset_0_interconnect_aresetn [get_bd_pins axi_csr_aresetn] [get_bd_pins axi_interc_0/ARESETN] [get_bd_pins info_csr_0/s_axi_csr_aresetn] [get_bd_pins proc_sys_reset_0/interconnect_aresetn]
  connect_bd_net -net proc_sys_reset_0_peripheral_aresetn [get_bd_pins axi_intc_0/s_axi_aresetn] [get_bd_pins axi_intc_1/s_axi_aresetn] [get_bd_pins axi_interc_0/M00_ARESETN] [get_bd_pins axi_interc_0/M01_ARESETN] [get_bd_pins axi_interc_0/M02_ARESETN] [get_bd_pins axi_interc_0/M03_ARESETN] [get_bd_pins axi_interc_0/M04_ARESETN] [get_bd_pins axi_interc_0/M05_ARESETN] [get_bd_pins axi_interc_0/M06_ARESETN] [get_bd_pins axi_interc_0/M07_ARESETN] [get_bd_pins axi_interc_0/M08_ARESETN] [get_bd_pins axi_interc_0/M09_ARESETN] [get_bd_pins axi_interc_0/M10_ARESETN] [get_bd_pins axi_interc_0/M11_ARESETN] [get_bd_pins axi_interc_0/M12_ARESETN] [get_bd_pins axi_interc_0/M13_ARESETN] [get_bd_pins axi_interc_0/S00_ARESETN] [get_bd_pins ext_temp_irq/s_axi_csr_aresetn] [get_bd_pins proc_sys_reset_0/peripheral_aresetn]
  connect_bd_net -net proc_sys_reset_1_peripheral_aresetn [get_bd_pins axi_fpd_aresetn] [get_bd_pins axi_dwidth_conv_0/s_axi_aresetn] [get_bd_pins axi_dwidth_conv_1/s_axi_aresetn] [get_bd_pins axi_register_slice_0/aresetn] [get_bd_pins axi_register_slice_1/aresetn] [get_bd_pins proc_sys_reset_1/peripheral_aresetn]
  connect_bd_net -net rev_1 [get_bd_pins rev] [get_bd_pins info_csr_0/rev]
  connect_bd_net -net rev_date_1 [get_bd_pins rev_date] [get_bd_pins info_csr_0/rev_date]
  connect_bd_net -net size_1 [get_bd_pins size] [get_bd_pins info_csr_0/size]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins proc_sys_reset_0/aux_reset_in] [get_bd_pins proc_sys_reset_0/dcm_locked] [get_bd_pins proc_sys_reset_1/aux_reset_in] [get_bd_pins proc_sys_reset_1/dcm_locked] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins proc_sys_reset_0/mb_debug_sys_rst] [get_bd_pins proc_sys_reset_1/mb_debug_sys_rst] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk0 [get_bd_pins axi_csr_aclk] [get_bd_pins axi_intc_0/s_axi_aclk] [get_bd_pins axi_intc_1/s_axi_aclk] [get_bd_pins axi_interc_0/ACLK] [get_bd_pins axi_interc_0/M00_ACLK] [get_bd_pins axi_interc_0/M01_ACLK] [get_bd_pins axi_interc_0/M02_ACLK] [get_bd_pins axi_interc_0/M03_ACLK] [get_bd_pins axi_interc_0/M04_ACLK] [get_bd_pins axi_interc_0/M05_ACLK] [get_bd_pins axi_interc_0/M06_ACLK] [get_bd_pins axi_interc_0/M07_ACLK] [get_bd_pins axi_interc_0/M08_ACLK] [get_bd_pins axi_interc_0/M09_ACLK] [get_bd_pins axi_interc_0/M10_ACLK] [get_bd_pins axi_interc_0/M11_ACLK] [get_bd_pins axi_interc_0/M12_ACLK] [get_bd_pins axi_interc_0/M13_ACLK] [get_bd_pins axi_interc_0/S00_ACLK] [get_bd_pins ext_temp_irq/s_axi_csr_aclk] [get_bd_pins info_csr_0/s_axi_csr_aclk] [get_bd_pins proc_sys_reset_0/slowest_sync_clk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm0_lpd_aclk] [get_bd_pins zynq_ultra_ps_e_0/pl_clk0]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axi_dwidth_conv_0/s_axi_aclk] [get_bd_pins axi_dwidth_conv_1/s_axi_aclk] [get_bd_pins axi_register_slice_0/aclk] [get_bd_pins axi_register_slice_1/aclk] [get_bd_pins proc_sys_reset_1/slowest_sync_clk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm0_fpd_aclk] [get_bd_pins zynq_ultra_ps_e_0/pl_clk1] [get_bd_pins zynq_ultra_ps_e_0/saxihp1_fpd_aclk]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_resetn0 [get_bd_pins proc_sys_reset_0/ext_reset_in] [get_bd_pins proc_sys_reset_1/ext_reset_in] [get_bd_pins zynq_ultra_ps_e_0/pl_resetn0]
  connect_bd_net -net zynq_ultra_ps_e_0_ps_pl_irq_rtc_seconds [get_bd_pins rtc_pps] [get_bd_pins zynq_ultra_ps_e_0/ps_pl_irq_rtc_seconds]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: pl_ddr4
proc create_hier_cell_pl_ddr4 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_pl_ddr4() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 C0_DDR4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 C0_SYS_CLK

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_fpd


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: ctlreg_rst_subset_vctr, and set properties
  set ctlreg_rst_subset_vctr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 ctlreg_rst_subset_vctr ]
  set_property -dict [ list \
   CONFIG.out_end_index {0} \
   CONFIG.out_start_index {0} \
 ] $ctlreg_rst_subset_vctr

  # Create instance: ddr4_axi_clock_conv, and set properties
  set ddr4_axi_clock_conv [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_clock_converter:2.1 ddr4_axi_clock_conv ]
  set_property -dict [ list \
   CONFIG.ACLK_ASYNC {1} \
   CONFIG.ADDR_WIDTH {33} \
   CONFIG.DATA_WIDTH {512} \
   CONFIG.ID_WIDTH {7} \
   CONFIG.PROTOCOL {AXI4} \
   CONFIG.READ_WRITE_MODE {READ_WRITE} \
 ] $ddr4_axi_clock_conv

  # Create instance: ddr4_ctlstat_csr, and set properties
  set ddr4_ctlstat_csr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_csr:1.0 ddr4_ctlstat_csr ]
  set_property -dict [ list \
   CONFIG.has_interrupt_regs {false} \
   CONFIG.num_ctl_regs {1} \
   CONFIG.num_stat_regs {1} \
 ] $ddr4_ctlstat_csr

  # Create instance: pl_ddr4_0, and set properties
  set pl_ddr4_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:ddr4:2.2 pl_ddr4_0 ]
  set_property -dict [ list \
   CONFIG.C0.BANK_GROUP_WIDTH {1} \
   CONFIG.C0.DDR4_AxiAddressWidth {33} \
   CONFIG.C0.DDR4_AxiArbitrationScheme {ROUND_ROBIN} \
   CONFIG.C0.DDR4_AxiDataWidth {512} \
   CONFIG.C0.DDR4_AxiIDWidth {7} \
   CONFIG.C0.DDR4_CLKFBOUT_MULT {6} \
   CONFIG.C0.DDR4_CasLatency {17} \
   CONFIG.C0.DDR4_DataWidth {64} \
   CONFIG.C0.DDR4_InputClockPeriod {4000} \
   CONFIG.C0.DDR4_MemoryPart {MT40A1G16RC-062E} \
 ] $pl_ddr4_0

  # Create instance: px_xpm_cdc_async_rst_0, and set properties
  set px_xpm_cdc_async_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 px_xpm_cdc_async_rst_0 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $px_xpm_cdc_async_rst_0

  # Create instance: stat_xlconcat_0, and set properties
  set stat_xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 stat_xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {31} \
 ] $stat_xlconcat_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {31} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_1

  # Create interface connections
  connect_bd_intf_net -intf_net C0_SYS_CLK_1 [get_bd_intf_pins C0_SYS_CLK] [get_bd_intf_pins pl_ddr4_0/C0_SYS_CLK]
  connect_bd_intf_net -intf_net ddr4_0_C0_DDR4 [get_bd_intf_pins C0_DDR4] [get_bd_intf_pins pl_ddr4_0/C0_DDR4]
  connect_bd_intf_net -intf_net ddr4_axi_clock_conv_M_AXI [get_bd_intf_pins ddr4_axi_clock_conv/M_AXI] [get_bd_intf_pins pl_ddr4_0/C0_DDR4_S_AXI]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins ddr4_ctlstat_csr/s_axi_csr]
  connect_bd_intf_net -intf_net s_axi_fpd_1 [get_bd_intf_pins s_axi_fpd] [get_bd_intf_pins ddr4_axi_clock_conv/S_AXI]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins ddr4_axi_clock_conv/s_axi_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins ddr4_axi_clock_conv/s_axi_aresetn] [get_bd_pins px_xpm_cdc_async_rst_0/src_arst]
  connect_bd_net -net ctlreg_rst_subset_vctr_out_vector [get_bd_pins ctlreg_rst_subset_vctr/out_vector] [get_bd_pins pl_ddr4_0/sys_rst]
  connect_bd_net -net ddr4_0_c0_ddr4_ui_clk [get_bd_pins ddr4_axi_clock_conv/m_axi_aclk] [get_bd_pins pl_ddr4_0/c0_ddr4_ui_clk] [get_bd_pins px_xpm_cdc_async_rst_0/dest_clk]
  connect_bd_net -net ddr4_0_c0_init_calib_complete [get_bd_pins pl_ddr4_0/c0_init_calib_complete] [get_bd_pins stat_xlconcat_0/In0]
  connect_bd_net -net ddr4_ctlstat_csr_ctl0_out [get_bd_pins ctlreg_rst_subset_vctr/in_vector] [get_bd_pins ddr4_ctlstat_csr/ctl0_out]
  connect_bd_net -net px_xpm_cdc_async_rst_0_dest_arst [get_bd_pins ddr4_axi_clock_conv/m_axi_aresetn] [get_bd_pins pl_ddr4_0/c0_ddr4_aresetn] [get_bd_pins px_xpm_cdc_async_rst_0/dest_arst]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins ddr4_ctlstat_csr/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins ddr4_ctlstat_csr/s_axi_csr_aresetn]
  connect_bd_net -net stat_xlconcat_0_dout [get_bd_pins ddr4_ctlstat_csr/stat0_in] [get_bd_pins stat_xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins stat_xlconcat_0/In1] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins ddr4_ctlstat_csr/reg0_init_val] [get_bd_pins xlconstant_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: pcie_intrfc
proc create_hier_cell_pcie_intrfc { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_pcie_intrfc() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 MGTREFCLK131

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dma_pcie_cntl

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_mgt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_fpd


  # Create pins
  create_bd_pin -dir I -from 7 -to 0 irq_in
  create_bd_pin -dir O pcie_axi_aclk
  create_bd_pin -dir O pcie_axi_aresetn
  create_bd_pin -dir O pcie_lane_led0_n
  create_bd_pin -dir O pcie_lane_led1_n
  create_bd_pin -dir O pcie_link_up_led_n
  create_bd_pin -dir O pcie_mailbox_irq
  create_bd_pin -dir I pcie_perstn_in
  create_bd_pin -dir I -from 7 -to 0 rev
  create_bd_pin -dir I -from 23 -to 0 rev_date
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I -from 11 -to 0 size

  # Create instance: arm_pcie_info_csr, and set properties
  set arm_pcie_info_csr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_brd_info_regs:1.0 arm_pcie_info_csr ]
  set_property -dict [ list \
   CONFIG.board_id {0x6003} \
   CONFIG.fpga_code_id {0x60032} \
   CONFIG.has_ext_temp_irq {false} \
   CONFIG.has_fpga_size_in {true} \
   CONFIG.has_fpio_in {false} \
   CONFIG.has_i2c1_irq {false} \
   CONFIG.has_i2c2_irq {false} \
   CONFIG.has_irq_out {true} \
   CONFIG.has_link_stat_in {true} \
   CONFIG.has_rev_info_in {true} \
   CONFIG.has_sys_mon_irq {false} \
   CONFIG.has_sys_mon_led {false} \
   CONFIG.has_user1_irq {true} \
   CONFIG.has_user2_irq {false} \
   CONFIG.has_user3_irq {false} \
   CONFIG.has_user4_irq {false} \
   CONFIG.has_user5_irq {false} \
   CONFIG.has_user6_irq {false} \
   CONFIG.has_user7_irq {false} \
   CONFIG.has_user8_irq {false} \
   CONFIG.has_user_led_out {false} \
   CONFIG.user_word {0x00020202} \
 ] $arm_pcie_info_csr

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {5} \
 ] $axi_interconnect_0

  # Create instance: axi_interconnect_1, and set properties
  set axi_interconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_1 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {3} \
 ] $axi_interconnect_1

  # Create instance: irq_cdc
  create_hier_cell_irq_cdc $hier_obj irq_cdc

  # Create instance: mailbox_0, and set properties
  set mailbox_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:mailbox:2.1 mailbox_0 ]
  set_property -dict [ list \
   CONFIG.C_ASYNC_CLKS {1} \
   CONFIG.C_IMPL_STYLE {1} \
   CONFIG.C_MAILBOX_DEPTH {1024} \
   CONFIG.C_READ_CLOCK_PERIOD_0 {10000} \
   CONFIG.C_READ_CLOCK_PERIOD_1 {4000} \
   CONFIG.C_S1_AXI_ACLK_FREQ_MHZ {250.0} \
 ] $mailbox_0

  # Create instance: pcie4c_uscale_plus, and set properties
  set pcie4c_uscale_plus [ create_bd_cell -type ip -vlnv xilinx.com:ip:pcie4c_uscale_plus:1.0 pcie4c_uscale_plus ]
  set_property -dict [ list \
   CONFIG.AXISTEN_IF_CQ_ALIGNMENT_MODE {Address_Aligned} \
   CONFIG.AXISTEN_IF_RC_STRADDLE {false} \
   CONFIG.AXISTEN_IF_RQ_ALIGNMENT_MODE {Address_Aligned} \
   CONFIG.PF0_CLASS_CODE {118000} \
   CONFIG.PF0_DEVICE_ID {6003} \
   CONFIG.PF0_INTERRUPT_PIN {INTA} \
   CONFIG.PF0_MSIX_CAP_PBA_BIR {BAR_1:0} \
   CONFIG.PF0_MSIX_CAP_TABLE_BIR {BAR_1:0} \
   CONFIG.PF0_SUBSYSTEM_ID {0300} \
   CONFIG.PF1_MSIX_CAP_PBA_BIR {BAR_1:0} \
   CONFIG.PF1_MSIX_CAP_TABLE_BIR {BAR_1:0} \
   CONFIG.PF2_DEVICE_ID {9438} \
   CONFIG.PF2_MSIX_CAP_PBA_BIR {BAR_1:0} \
   CONFIG.PF2_MSIX_CAP_TABLE_BIR {BAR_1:0} \
   CONFIG.PF3_DEVICE_ID {9638} \
   CONFIG.PF3_MSIX_CAP_PBA_BIR {BAR_1:0} \
   CONFIG.PF3_MSIX_CAP_TABLE_BIR {BAR_1:0} \
   CONFIG.PL_LINK_CAP_MAX_LINK_SPEED {8.0_GT/s} \
   CONFIG.PL_LINK_CAP_MAX_LINK_WIDTH {X8} \
   CONFIG.axisten_freq {250} \
   CONFIG.axisten_if_enable_client_tag {true} \
   CONFIG.axisten_if_width {256_bit} \
   CONFIG.cfg_fc_if {false} \
   CONFIG.cfg_mgmt_if {false} \
   CONFIG.cfg_pm_if {false} \
   CONFIG.cfg_tx_msg_if {false} \
   CONFIG.coreclk_freq {500} \
   CONFIG.enable_auto_rxeq {True} \
   CONFIG.mode_selection {Advanced} \
   CONFIG.pf0_bar0_64bit {true} \
   CONFIG.pf0_base_class_menu {Data_acquisition_and_signal_processing_controllers} \
   CONFIG.pf0_class_code_base {11} \
   CONFIG.pf0_class_code_sub {80} \
   CONFIG.pf0_dev_cap_max_payload {512_bytes} \
   CONFIG.pf0_sub_class_interface_menu {Other_data_acquisition/signal_processing_controllers} \
   CONFIG.pf1_bar0_64bit {true} \
   CONFIG.pf1_vendor_id {12f0} \
   CONFIG.pf2_bar0_64bit {true} \
   CONFIG.pf2_vendor_id {12f0} \
   CONFIG.pf3_bar0_64bit {true} \
   CONFIG.pf3_vendor_id {12f0} \
   CONFIG.plltype {QPLL1} \
   CONFIG.rcv_msg_if {false} \
   CONFIG.tx_fc_if {false} \
   CONFIG.vendor_id {12f0} \
 ] $pcie4c_uscale_plus

  # Create instance: pcie_pcie_info_csr, and set properties
  set pcie_pcie_info_csr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_brd_info_regs:1.0 pcie_pcie_info_csr ]
  set_property -dict [ list \
   CONFIG.board_id {0x6003} \
   CONFIG.fpga_code_id {0x60032} \
   CONFIG.has_ext_temp_irq {false} \
   CONFIG.has_fpga_size_in {true} \
   CONFIG.has_fpio_in {false} \
   CONFIG.has_i2c1_irq {false} \
   CONFIG.has_i2c2_irq {false} \
   CONFIG.has_irq_out {false} \
   CONFIG.has_link_stat_in {true} \
   CONFIG.has_rev_info_in {true} \
   CONFIG.has_sys_mon_irq {false} \
   CONFIG.has_sys_mon_led {false} \
   CONFIG.has_user1_irq {false} \
   CONFIG.has_user2_irq {false} \
   CONFIG.has_user3_irq {false} \
   CONFIG.has_user4_irq {false} \
   CONFIG.has_user5_irq {false} \
   CONFIG.has_user6_irq {false} \
   CONFIG.has_user7_irq {false} \
   CONFIG.has_user8_irq {false} \
   CONFIG.has_user_led_out {false} \
   CONFIG.user_word {0x00020202} \
 ] $pcie_pcie_info_csr

  # Create instance: px_axi4_2_pciepkt_256_0, and set properties
  set px_axi4_2_pciepkt_256_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axi4_2_pciepkt_256:1.0 px_axi4_2_pciepkt_256_0 ]
  set_property -dict [ list \
   CONFIG.data_axi_addr_width {36} \
 ] $px_axi4_2_pciepkt_256_0

  # Create instance: px_axil_addr_sub_0, and set properties
  set px_axil_addr_sub_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_addr_sub:1.1 px_axil_addr_sub_0 ]
  set_property -dict [ list \
   CONFIG.num_bits {16} \
 ] $px_axil_addr_sub_0

  # Create instance: px_pcie2axil_0, and set properties
  set px_pcie2axil_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pcie2axil:1.1 px_pcie2axil_0 ]
  set_property -dict [ list \
   CONFIG.bar0_size_bits {17} \
   CONFIG.bar1_addr_translation {0x00000000} \
   CONFIG.bar1_size_bits {17} \
   CONFIG.bar2_addr_translation {0x00000000} \
   CONFIG.bar2_size_bits {17} \
   CONFIG.bar3_addr_translation {0x00000000} \
   CONFIG.bar3_size_bits {17} \
   CONFIG.bar4_addr_translation {0x00000000} \
   CONFIG.bar4_size_bits {17} \
   CONFIG.bar5_addr_translation {0x00000000} \
   CONFIG.bar5_size_bits {17} \
   CONFIG.num_addr_bits {17} \
 ] $px_pcie2axil_0

  # Create instance: px_pcie4_cfg_ctl_0, and set properties
  set px_pcie4_cfg_ctl_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pcie4_cfg_ctl:1.0 px_pcie4_cfg_ctl_0 ]

  # Create instance: px_pcie_irq_ctlr_0, and set properties
  set px_pcie_irq_ctlr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pcie_irq_ctlr:1.0 px_pcie_irq_ctlr_0 ]
  set_property -dict [ list \
   CONFIG.num_interrupt_sources {9} \
 ] $px_pcie_irq_ctlr_0

  # Create instance: px_pcie_link_stat_0, and set properties
  set px_pcie_link_stat_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pcie_link_stat:1.1 px_pcie_link_stat_0 ]
  set_property -dict [ list \
   CONFIG.ultrascale_plus {true} \
 ] $px_pcie_link_stat_0

  # Create instance: px_pcie_rqrc_gskt_0, and set properties
  set px_pcie_rqrc_gskt_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pcie_rqrc_gskt:1.0 px_pcie_rqrc_gskt_0 ]

  # Create instance: rq_axis_traffic_meter, and set properties
  set rq_axis_traffic_meter [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_traffic_meter:1.0 rq_axis_traffic_meter ]
  set_property -dict [ list \
   CONFIG.div_factor {4} \
   CONFIG.num_bytes {32} \
   CONFIG.tuser_size {60} \
 ] $rq_axis_traffic_meter

  # Create instance: shared_mem, and set properties
  set shared_mem [ create_bd_cell -type ip -vlnv xilinx.com:ip:blk_mem_gen:8.4 shared_mem ]
  set_property -dict [ list \
   CONFIG.Enable_B {Use_ENB_Pin} \
   CONFIG.Memory_Type {True_Dual_Port_RAM} \
   CONFIG.Port_B_Clock {100} \
   CONFIG.Port_B_Enable_Rate {100} \
   CONFIG.Port_B_Write_Rate {50} \
   CONFIG.Use_RSTB_Pin {true} \
 ] $shared_mem

  # Create instance: shared_mem_arm_bram, and set properties
  set shared_mem_arm_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 shared_mem_arm_bram ]
  set_property -dict [ list \
   CONFIG.ECC_TYPE {0} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.SINGLE_PORT_BRAM {1} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
 ] $shared_mem_arm_bram

  # Create instance: shared_mem_pcie_bram, and set properties
  set shared_mem_pcie_bram [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_bram_ctrl:4.1 shared_mem_pcie_bram ]
  set_property -dict [ list \
   CONFIG.ECC_TYPE {0} \
   CONFIG.PROTOCOL {AXI4LITE} \
   CONFIG.SINGLE_PORT_BRAM {1} \
   CONFIG.SUPPORTS_NARROW_BURST {0} \
 ] $shared_mem_pcie_bram

  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.1 util_ds_buf_0 ]
  set_property -dict [ list \
   CONFIG.C_BUF_TYPE {IBUFDSGTE} \
 ] $util_ds_buf_0

  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {8} \
   CONFIG.IN1_WIDTH {1} \
 ] $xlconcat_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {8} \
 ] $xlconstant_0

  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]

  # Create interface connections
  connect_bd_intf_net -intf_net MGTREFCLK131_1 [get_bd_intf_pins MGTREFCLK131] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins px_pcie_irq_ctlr_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins mailbox_0/S1_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins pcie_pcie_info_csr/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins rq_axis_traffic_meter/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins px_axil_addr_sub_0/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_1_M00_AXI [get_bd_intf_pins axi_interconnect_1/M00_AXI] [get_bd_intf_pins mailbox_0/S0_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M01_AXI [get_bd_intf_pins arm_pcie_info_csr/s_axi_csr] [get_bd_intf_pins axi_interconnect_1/M01_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_1_M02_AXI [get_bd_intf_pins axi_interconnect_1/M02_AXI] [get_bd_intf_pins shared_mem_arm_bram/S_AXI]
  connect_bd_intf_net -intf_net pcie4c_uscale_plus_m_axis_cq [get_bd_intf_pins pcie4c_uscale_plus/m_axis_cq] [get_bd_intf_pins px_pcie2axil_0/s_axis_cq]
  connect_bd_intf_net -intf_net pcie4c_uscale_plus_m_axis_rc [get_bd_intf_pins pcie4c_uscale_plus/m_axis_rc] [get_bd_intf_pins px_pcie_rqrc_gskt_0/s_axis_pcie_rc]
  connect_bd_intf_net -intf_net pcie4c_uscale_plus_pcie4_cfg_status [get_bd_intf_pins pcie4c_uscale_plus/pcie4_cfg_status] [get_bd_intf_pins px_pcie_link_stat_0/pcie4_cfg_status]
  connect_bd_intf_net -intf_net pcie4c_uscale_plus_pcie4_mgt [get_bd_intf_pins pcie_mgt] [get_bd_intf_pins pcie4c_uscale_plus/pcie4_mgt]
  connect_bd_intf_net -intf_net px_axi4_2_pciepkt_256_0_m_axis_pcie_rq [get_bd_intf_pins px_axi4_2_pciepkt_256_0/m_axis_pcie_rq] [get_bd_intf_pins rq_axis_traffic_meter/s_axis]
  connect_bd_intf_net -intf_net px_axil_addr_sub_0_m_axi [get_bd_intf_pins px_axil_addr_sub_0/m_axi] [get_bd_intf_pins shared_mem_pcie_bram/S_AXI]
  connect_bd_intf_net -intf_net px_pcie2axil_0_m_axi [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins px_pcie2axil_0/m_axi]
  connect_bd_intf_net -intf_net px_pcie2axil_0_m_axis_cc [get_bd_intf_pins pcie4c_uscale_plus/s_axis_cc] [get_bd_intf_pins px_pcie2axil_0/m_axis_cc]
  connect_bd_intf_net -intf_net px_pcie4_cfg_ctl_0_pcie4_cfg_control [get_bd_intf_pins pcie4c_uscale_plus/pcie4_cfg_control] [get_bd_intf_pins px_pcie4_cfg_ctl_0/pcie4_cfg_control]
  connect_bd_intf_net -intf_net px_pcie_irq_ctlr_0_pcie3_cfg_interrupt [get_bd_intf_pins pcie4c_uscale_plus/pcie4_cfg_interrupt] [get_bd_intf_pins px_pcie_irq_ctlr_0/pcie3_cfg_interrupt]
  connect_bd_intf_net -intf_net px_pcie_irq_ctlr_0_pcie3_cfg_interrupt_msi [get_bd_intf_pins pcie4c_uscale_plus/pcie4_cfg_msi] [get_bd_intf_pins px_pcie_irq_ctlr_0/pcie3_cfg_interrupt_msi]
  connect_bd_intf_net -intf_net px_pcie_link_stat_0_m_axis_dma_pcie_cntl [get_bd_intf_pins m_axis_dma_pcie_cntl] [get_bd_intf_pins px_pcie_link_stat_0/m_axis_dma_pcie_cntl]
  connect_bd_intf_net -intf_net px_pcie_rqrc_gskt_0_m_axis_pcie_rq [get_bd_intf_pins pcie4c_uscale_plus/s_axis_rq] [get_bd_intf_pins px_pcie_rqrc_gskt_0/m_axis_pcie_rq]
  connect_bd_intf_net -intf_net rq_axis_traffic_meter_m_axis [get_bd_intf_pins px_pcie_rqrc_gskt_0/s_axis_pcie_rq] [get_bd_intf_pins rq_axis_traffic_meter/m_axis]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_1/S00_AXI]
  connect_bd_intf_net -intf_net s_axi_fpd_1 [get_bd_intf_pins s_axi_fpd] [get_bd_intf_pins px_axi4_2_pciepkt_256_0/s_axi_mm2s]
  connect_bd_intf_net -intf_net shared_mem_arm_bram_BRAM_PORTA [get_bd_intf_pins shared_mem/BRAM_PORTA] [get_bd_intf_pins shared_mem_arm_bram/BRAM_PORTA]
  connect_bd_intf_net -intf_net shared_mem_pcie_bram_BRAM_PORTA [get_bd_intf_pins shared_mem/BRAM_PORTB] [get_bd_intf_pins shared_mem_pcie_bram/BRAM_PORTA]

  # Create port connections
  connect_bd_net -net info_csr_0_byte_swap [get_bd_pins pcie_pcie_info_csr/byte_swap] [get_bd_pins px_pcie_link_stat_0/byte_swap]
  connect_bd_net -net irq_cdc_irq_out [get_bd_pins irq_cdc/irq_out] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net irq_in_1 [get_bd_pins irq_in] [get_bd_pins irq_cdc/irq]
  connect_bd_net -net mailbox_0_Interrupt_0 [get_bd_pins pcie_mailbox_irq] [get_bd_pins mailbox_0/Interrupt_0]
  connect_bd_net -net mailbox_0_Interrupt_1 [get_bd_pins mailbox_0/Interrupt_1] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net pcie4_uscale_plus_0_user_clk [get_bd_pins pcie_axi_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins irq_cdc/dest_clk] [get_bd_pins mailbox_0/S1_AXI_ACLK] [get_bd_pins pcie4c_uscale_plus/user_clk] [get_bd_pins pcie_pcie_info_csr/s_axi_csr_aclk] [get_bd_pins px_axi4_2_pciepkt_256_0/aclk] [get_bd_pins px_axil_addr_sub_0/axi_aclk] [get_bd_pins px_pcie2axil_0/user_clk] [get_bd_pins px_pcie4_cfg_ctl_0/user_clk] [get_bd_pins px_pcie_irq_ctlr_0/aclk] [get_bd_pins px_pcie_link_stat_0/aclk] [get_bd_pins px_pcie_rqrc_gskt_0/aclk] [get_bd_pins rq_axis_traffic_meter/axis_aclk] [get_bd_pins rq_axis_traffic_meter/s_axi_csr_aclk] [get_bd_pins shared_mem_pcie_bram/s_axi_aclk]
  connect_bd_net -net pcie4_uscale_plus_0_user_lnk_up [get_bd_pins arm_pcie_info_csr/user1_irq] [get_bd_pins pcie4c_uscale_plus/user_lnk_up] [get_bd_pins px_pcie2axil_0/user_lnk_up] [get_bd_pins px_pcie4_cfg_ctl_0/usr_link_up]
  connect_bd_net -net pcie4c_uscale_plus_user_reset [get_bd_pins pcie4c_uscale_plus/user_reset] [get_bd_pins px_pcie2axil_0/user_reset]
  connect_bd_net -net pcie_perstn_in_1 [get_bd_pins pcie_perstn_in] [get_bd_pins pcie4c_uscale_plus/sys_reset]
  connect_bd_net -net px_pcie2axil_0_cc_shutdown_ok [get_bd_pins px_pcie2axil_0/cc_shutdown_ok] [get_bd_pins px_pcie4_cfg_ctl_0/cc_shutdown_ok]
  connect_bd_net -net px_pcie4_cfg_ctl_0_shutdown_rqst [get_bd_pins px_pcie2axil_0/cc_shutdown_rqst] [get_bd_pins px_pcie4_cfg_ctl_0/rq_shutdown_ok] [get_bd_pins px_pcie4_cfg_ctl_0/shutdown_rqst]
  connect_bd_net -net px_pcie_irq_ctlr_0_msi_enable_out [get_bd_pins px_pcie_irq_ctlr_0/msi_enable_out] [get_bd_pins px_pcie_link_stat_0/msi_en]
  connect_bd_net -net px_pcie_link_stat_0_lane_led0_n [get_bd_pins pcie_lane_led0_n] [get_bd_pins px_pcie_link_stat_0/lane_led0_n]
  connect_bd_net -net px_pcie_link_stat_0_lane_led1_n [get_bd_pins pcie_lane_led1_n] [get_bd_pins px_pcie_link_stat_0/lane_led1_n]
  connect_bd_net -net px_pcie_link_stat_0_pcie_link_status_info [get_bd_pins arm_pcie_info_csr/pcie_link_status_info] [get_bd_pins pcie_pcie_info_csr/pcie_link_status_info] [get_bd_pins px_pcie_link_stat_0/pcie_link_status_info]
  connect_bd_net -net px_pcie_link_stat_0_pcie_link_up_led_n [get_bd_pins pcie_link_up_led_n] [get_bd_pins px_pcie_link_stat_0/pcie_link_up_led_n]
  connect_bd_net -net rev_1 [get_bd_pins rev] [get_bd_pins arm_pcie_info_csr/rev] [get_bd_pins pcie_pcie_info_csr/rev]
  connect_bd_net -net rev_date_1 [get_bd_pins rev_date] [get_bd_pins arm_pcie_info_csr/rev_date] [get_bd_pins pcie_pcie_info_csr/rev_date]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins arm_pcie_info_csr/s_axi_csr_aclk] [get_bd_pins axi_interconnect_1/ACLK] [get_bd_pins axi_interconnect_1/M00_ACLK] [get_bd_pins axi_interconnect_1/M01_ACLK] [get_bd_pins axi_interconnect_1/M02_ACLK] [get_bd_pins axi_interconnect_1/S00_ACLK] [get_bd_pins irq_cdc/s_axi_csr_aclk] [get_bd_pins mailbox_0/S0_AXI_ACLK] [get_bd_pins shared_mem_arm_bram/s_axi_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins arm_pcie_info_csr/s_axi_csr_aresetn] [get_bd_pins axi_interconnect_1/ARESETN] [get_bd_pins axi_interconnect_1/M00_ARESETN] [get_bd_pins axi_interconnect_1/M01_ARESETN] [get_bd_pins axi_interconnect_1/M02_ARESETN] [get_bd_pins axi_interconnect_1/S00_ARESETN] [get_bd_pins mailbox_0/S0_AXI_ARESETN] [get_bd_pins shared_mem_arm_bram/s_axi_aresetn]
  connect_bd_net -net size_1 [get_bd_pins size] [get_bd_pins arm_pcie_info_csr/size] [get_bd_pins pcie_pcie_info_csr/size]
  connect_bd_net -net util_ds_buf_0_IBUF_DS_ODIV2 [get_bd_pins pcie4c_uscale_plus/sys_clk] [get_bd_pins util_ds_buf_0/IBUF_DS_ODIV2]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins pcie4c_uscale_plus/sys_clk_gt] [get_bd_pins util_ds_buf_0/IBUF_OUT]
  connect_bd_net -net xdma_0_axi_aresetn [get_bd_pins pcie_axi_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins mailbox_0/S1_AXI_ARESETN] [get_bd_pins pcie_pcie_info_csr/s_axi_csr_aresetn] [get_bd_pins px_axi4_2_pciepkt_256_0/aresetn] [get_bd_pins px_axil_addr_sub_0/axi_aresetn] [get_bd_pins px_pcie2axil_0/aresetn] [get_bd_pins px_pcie_irq_ctlr_0/aresetn] [get_bd_pins px_pcie_link_stat_0/aresetn] [get_bd_pins rq_axis_traffic_meter/axis_aresetn] [get_bd_pins rq_axis_traffic_meter/s_axi_csr_aresetn] [get_bd_pins shared_mem_pcie_bram/s_axi_aresetn]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins px_pcie_irq_ctlr_0/int_in] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins px_pcie_irq_ctlr_0/cfg_interrupt_msi_vf_enable] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins px_pcie_rqrc_gskt_0/m_axis_pcie_rc_tready] [get_bd_pins xlconstant_1/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: eth_100ge
proc create_hier_cell_eth_100ge { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_eth_100ge() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 eth100ge_ch0123_gt

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 eth100ge_ch4567_gt

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0123_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4567_ppld


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir O axi_usr_rx_reset
  create_bd_pin -dir O eth100ge_ch0123_fifo_aresetn
  create_bd_pin -dir O eth100ge_ch0123_link_led_n
  create_bd_pin -dir O -from 16 -to 0 eth100ge_ch0123_payload_size_ctl
  create_bd_pin -dir O eth100ge_ch0123_payload_size_ctl_en
  create_bd_pin -dir O eth100ge_ch0123_txclk
  create_bd_pin -dir O eth100ge_ch4567_fifo_aresetn
  create_bd_pin -dir O eth100ge_ch4567_link_led_n
  create_bd_pin -dir O -from 16 -to 0 eth100ge_ch4567_payload_size_ctl
  create_bd_pin -dir O eth100ge_ch4567_payload_size_ctl_en
  create_bd_pin -dir O eth100ge_ch4567_txclk
  create_bd_pin -dir O eth_100g_0_linkdn_irq
  create_bd_pin -dir O eth_100g_0_linkup_irq
  create_bd_pin -dir O eth_100g_1_linkdn_irq
  create_bd_pin -dir O eth_100g_1_linkup_irq
  create_bd_pin -dir I gt_ref_clk
  create_bd_pin -dir O ppld2udp_0_irq
  create_bd_pin -dir O ppld2udp_1_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn

  # Create instance: async_pkt_fifo_0, and set properties
  set async_pkt_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 async_pkt_fifo_0 ]
  set_property -dict [ list \
   CONFIG.Clock_Type_AXI {Independent_Clock} \
   CONFIG.Empty_Threshold_Assert_Value_axis {509} \
   CONFIG.Empty_Threshold_Assert_Value_rach {13} \
   CONFIG.Empty_Threshold_Assert_Value_rdch {1018} \
   CONFIG.Empty_Threshold_Assert_Value_wach {13} \
   CONFIG.Empty_Threshold_Assert_Value_wdch {1018} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {13} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Independent_Clocks_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Independent_Clocks_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Independent_Clocks_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Independent_Clocks_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Independent_Clocks_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Independent_Clocks_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $async_pkt_fifo_0

  # Create instance: async_pkt_fifo_1, and set properties
  set async_pkt_fifo_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:fifo_generator:13.2 async_pkt_fifo_1 ]
  set_property -dict [ list \
   CONFIG.Clock_Type_AXI {Independent_Clock} \
   CONFIG.Empty_Threshold_Assert_Value_axis {509} \
   CONFIG.Empty_Threshold_Assert_Value_rach {13} \
   CONFIG.Empty_Threshold_Assert_Value_rdch {1018} \
   CONFIG.Empty_Threshold_Assert_Value_wach {13} \
   CONFIG.Empty_Threshold_Assert_Value_wdch {1018} \
   CONFIG.Empty_Threshold_Assert_Value_wrch {13} \
   CONFIG.Enable_TLAST {true} \
   CONFIG.FIFO_Application_Type_axis {Packet_FIFO} \
   CONFIG.FIFO_Implementation_axis {Independent_Clocks_Block_RAM} \
   CONFIG.FIFO_Implementation_rach {Independent_Clocks_Distributed_RAM} \
   CONFIG.FIFO_Implementation_rdch {Independent_Clocks_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wach {Independent_Clocks_Distributed_RAM} \
   CONFIG.FIFO_Implementation_wdch {Independent_Clocks_Builtin_FIFO} \
   CONFIG.FIFO_Implementation_wrch {Independent_Clocks_Distributed_RAM} \
   CONFIG.Full_Threshold_Assert_Value_axis {511} \
   CONFIG.Full_Threshold_Assert_Value_rach {15} \
   CONFIG.Full_Threshold_Assert_Value_wach {15} \
   CONFIG.Full_Threshold_Assert_Value_wrch {15} \
   CONFIG.HAS_TKEEP {true} \
   CONFIG.INTERFACE_TYPE {AXI_STREAM} \
   CONFIG.Input_Depth_axis {512} \
   CONFIG.Reset_Type {Asynchronous_Reset} \
   CONFIG.TDATA_NUM_BYTES {64} \
   CONFIG.TKEEP_WIDTH {64} \
   CONFIG.TSTRB_WIDTH {64} \
   CONFIG.TUSER_WIDTH {104} \
 ] $async_pkt_fifo_1

  # Create instance: axi_intercon, and set properties
  set axi_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon ]
  set_property -dict [ list \
   CONFIG.NUM_MI {4} \
 ] $axi_intercon

  # Create instance: eth_ex_design_0
  create_hier_cell_eth_ex_design_0 $hier_obj eth_ex_design_0

  # Create instance: eth_ex_design_1
  create_hier_cell_eth_ex_design_1 $hier_obj eth_ex_design_1

  # Create instance: fiforst_cdc_async_rst_0, and set properties
  set fiforst_cdc_async_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 fiforst_cdc_async_rst_0 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
 ] $fiforst_cdc_async_rst_0

  # Create instance: fiforst_cdc_async_rst_1, and set properties
  set fiforst_cdc_async_rst_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 fiforst_cdc_async_rst_1 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {2} \
 ] $fiforst_cdc_async_rst_1

  # Create instance: px_ppld2udp100ge_axi_0, and set properties
  set px_ppld2udp100ge_axi_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppld2udp100ge_axis_axis_tx:1.1 px_ppld2udp100ge_axi_0 ]

  # Create instance: px_ppld2udp100ge_axi_1, and set properties
  set px_ppld2udp100ge_axi_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_ppld2udp100ge_axis_axis_tx:1.1 px_ppld2udp100ge_axi_1 ]

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_1

  # Create interface connections
  connect_bd_intf_net -intf_net async_pkt_fifo_0_M_AXIS [get_bd_intf_pins async_pkt_fifo_0/M_AXIS] [get_bd_intf_pins px_ppld2udp100ge_axi_0/s_axis_ppld]
  connect_bd_intf_net -intf_net async_pkt_fifo_1_M_AXIS [get_bd_intf_pins async_pkt_fifo_1/M_AXIS] [get_bd_intf_pins px_ppld2udp100ge_axi_1/s_axis_ppld]
  connect_bd_intf_net -intf_net axi_intercon_M02_AXI [get_bd_intf_pins axi_intercon/M02_AXI] [get_bd_intf_pins px_ppld2udp100ge_axi_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon_M03_AXI [get_bd_intf_pins axi_intercon/M03_AXI] [get_bd_intf_pins px_ppld2udp100ge_axi_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_intercon/M00_AXI] [get_bd_intf_pins eth_ex_design_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_intercon/M01_AXI] [get_bd_intf_pins eth_ex_design_1/s_axi_csr]
  connect_bd_intf_net -intf_net eth_ex_design_0_gt_serial_port [get_bd_intf_pins eth100ge_ch0123_gt] [get_bd_intf_pins eth_ex_design_0/gt_serial_port]
  connect_bd_intf_net -intf_net eth_ex_design_1_gt_serial_port [get_bd_intf_pins eth100ge_ch4567_gt] [get_bd_intf_pins eth_ex_design_1/gt_serial_port]
  connect_bd_intf_net -intf_net px_ppld2udp100ge_axi_0_m_axis [get_bd_intf_pins eth_ex_design_0/s_axis_tx] [get_bd_intf_pins px_ppld2udp100ge_axi_0/m_axis]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0123_ppld_1 [get_bd_intf_pins s_axis_ch0123_ppld] [get_bd_intf_pins async_pkt_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch4567_ppld_1 [get_bd_intf_pins s_axis_ch4567_ppld] [get_bd_intf_pins async_pkt_fifo_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_tx_1 [get_bd_intf_pins eth_ex_design_1/s_axis_tx] [get_bd_intf_pins px_ppld2udp100ge_axi_1/m_axis]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins async_pkt_fifo_0/s_aclk] [get_bd_pins async_pkt_fifo_1/s_aclk] [get_bd_pins fiforst_cdc_async_rst_0/dest_clk] [get_bd_pins fiforst_cdc_async_rst_1/dest_clk]
  connect_bd_net -net eth_ex_design_0_axi_usr_rx_reset [get_bd_pins axi_usr_rx_reset] [get_bd_pins eth_ex_design_0/axi_usr_rx_reset]
  connect_bd_net -net eth_ex_design_0_gt_txusrclk2 [get_bd_pins eth100ge_ch0123_txclk] [get_bd_pins async_pkt_fifo_0/m_aclk] [get_bd_pins eth_ex_design_0/gt_txusrclk2] [get_bd_pins px_ppld2udp100ge_axi_0/s_axis_ppld_aclk]
  connect_bd_net -net eth_ex_design_0_link_led_n [get_bd_pins eth100ge_ch0123_link_led_n] [get_bd_pins eth_ex_design_0/link_led_n]
  connect_bd_net -net eth_ex_design_0_linkdn_irq [get_bd_pins eth_100g_0_linkdn_irq] [get_bd_pins eth_ex_design_0/linkdn_irq]
  connect_bd_net -net eth_ex_design_0_linkup_irq [get_bd_pins eth_100g_0_linkup_irq] [get_bd_pins eth_ex_design_0/linkup_irq]
  connect_bd_net -net eth_ex_design_0_stat_rx_pause_req [get_bd_pins eth_ex_design_0/stat_rx_pause_req] [get_bd_pins px_ppld2udp100ge_axi_0/stat_rx_pause_req]
  connect_bd_net -net eth_ex_design_0_stat_rx_pause_valid [get_bd_pins eth_ex_design_0/stat_rx_pause_valid] [get_bd_pins px_ppld2udp100ge_axi_0/stat_rx_pause_valid]
  connect_bd_net -net eth_ex_design_0_stat_tx_local_fault [get_bd_pins eth_ex_design_0/stat_tx_local_fault] [get_bd_pins px_ppld2udp100ge_axi_0/stat_tx_local_fault]
  connect_bd_net -net eth_ex_design_0_usr_tx_reset [get_bd_pins eth_ex_design_0/usr_tx_reset] [get_bd_pins px_ppld2udp100ge_axi_0/usr_tx_reset] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net eth_ex_design_1_gt_txusrclk2 [get_bd_pins eth100ge_ch4567_txclk] [get_bd_pins async_pkt_fifo_1/m_aclk] [get_bd_pins eth_ex_design_1/gt_txusrclk2] [get_bd_pins px_ppld2udp100ge_axi_1/s_axis_ppld_aclk]
  connect_bd_net -net eth_ex_design_1_link_led_n [get_bd_pins eth100ge_ch4567_link_led_n] [get_bd_pins eth_ex_design_1/link_led_n]
  connect_bd_net -net eth_ex_design_1_linkdn_irq [get_bd_pins eth_100g_1_linkdn_irq] [get_bd_pins eth_ex_design_1/linkdn_irq]
  connect_bd_net -net eth_ex_design_1_linkup_irq [get_bd_pins eth_100g_1_linkup_irq] [get_bd_pins eth_ex_design_1/linkup_irq]
  connect_bd_net -net eth_ex_design_1_stat_rx_pause_req [get_bd_pins eth_ex_design_1/stat_rx_pause_req] [get_bd_pins px_ppld2udp100ge_axi_1/stat_rx_pause_req]
  connect_bd_net -net eth_ex_design_1_stat_rx_pause_valid [get_bd_pins eth_ex_design_1/stat_rx_pause_valid] [get_bd_pins px_ppld2udp100ge_axi_1/stat_rx_pause_valid]
  connect_bd_net -net eth_ex_design_1_stat_tx_local_fault [get_bd_pins eth_ex_design_1/stat_tx_local_fault] [get_bd_pins px_ppld2udp100ge_axi_1/stat_tx_local_fault]
  connect_bd_net -net eth_ex_design_1_usr_tx_reset [get_bd_pins eth_ex_design_1/usr_tx_reset] [get_bd_pins px_ppld2udp100ge_axi_1/usr_tx_reset] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net fiforst_cdc_async_rst_0_dest_arst [get_bd_pins async_pkt_fifo_0/s_aresetn] [get_bd_pins fiforst_cdc_async_rst_0/dest_arst]
  connect_bd_net -net fiforst_cdc_async_rst_1_dest_arst [get_bd_pins async_pkt_fifo_1/s_aresetn] [get_bd_pins fiforst_cdc_async_rst_1/dest_arst]
  connect_bd_net -net gt_ref_clk_1 [get_bd_pins gt_ref_clk] [get_bd_pins eth_ex_design_0/gt_ref_clk] [get_bd_pins eth_ex_design_1/gt_ref_clk]
  connect_bd_net -net px_ppld2udp100ge_axi_0_irq [get_bd_pins ppld2udp_0_irq] [get_bd_pins px_ppld2udp100ge_axi_0/irq]
  connect_bd_net -net px_ppld2udp100ge_axi_0_payload_size_ctl [get_bd_pins eth100ge_ch0123_payload_size_ctl] [get_bd_pins px_ppld2udp100ge_axi_0/payload_size_ctl]
  connect_bd_net -net px_ppld2udp100ge_axi_0_payload_size_ctl_en [get_bd_pins eth100ge_ch0123_payload_size_ctl_en] [get_bd_pins px_ppld2udp100ge_axi_0/payload_size_ctl_en]
  connect_bd_net -net px_ppld2udp100ge_axi_1_irq [get_bd_pins ppld2udp_1_irq] [get_bd_pins px_ppld2udp100ge_axi_1/irq]
  connect_bd_net -net px_ppld2udp100ge_axi_1_payload_size_ctl [get_bd_pins eth100ge_ch4567_payload_size_ctl] [get_bd_pins px_ppld2udp100ge_axi_1/payload_size_ctl]
  connect_bd_net -net px_ppld2udp100ge_axi_1_payload_size_ctl_en [get_bd_pins eth100ge_ch4567_payload_size_ctl_en] [get_bd_pins px_ppld2udp100ge_axi_1/payload_size_ctl_en]
  connect_bd_net -net px_ppld2udp100ge_tx_0_ext_fifo_aresetn [get_bd_pins eth100ge_ch0123_fifo_aresetn] [get_bd_pins fiforst_cdc_async_rst_0/src_arst] [get_bd_pins px_ppld2udp100ge_axi_0/ext_fifo_aresetn]
  connect_bd_net -net px_ppld2udp100ge_tx_1_ext_fifo_aresetn [get_bd_pins eth100ge_ch4567_fifo_aresetn] [get_bd_pins fiforst_cdc_async_rst_1/src_arst] [get_bd_pins px_ppld2udp100ge_axi_1/ext_fifo_aresetn]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_intercon/ACLK] [get_bd_pins axi_intercon/M00_ACLK] [get_bd_pins axi_intercon/M01_ACLK] [get_bd_pins axi_intercon/M02_ACLK] [get_bd_pins axi_intercon/M03_ACLK] [get_bd_pins axi_intercon/S00_ACLK] [get_bd_pins eth_ex_design_0/s_axi_csr_aclk] [get_bd_pins eth_ex_design_1/s_axi_csr_aclk] [get_bd_pins px_ppld2udp100ge_axi_0/s_axi_csr_aclk] [get_bd_pins px_ppld2udp100ge_axi_1/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_intercon/ARESETN] [get_bd_pins axi_intercon/M00_ARESETN] [get_bd_pins axi_intercon/M01_ARESETN] [get_bd_pins axi_intercon/M02_ARESETN] [get_bd_pins axi_intercon/M03_ARESETN] [get_bd_pins axi_intercon/S00_ARESETN] [get_bd_pins eth_ex_design_0/s_axi_csr_aresetn] [get_bd_pins eth_ex_design_1/s_axi_csr_aresetn] [get_bd_pins px_ppld2udp100ge_axi_0/s_axi_csr_aresetn] [get_bd_pins px_ppld2udp100ge_axi_1/s_axi_csr_aresetn]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins px_ppld2udp100ge_axi_1/s_axis_ppld_aresetn] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins px_ppld2udp100ge_axi_0/s_axis_ppld_aresetn] [get_bd_pins util_vector_logic_1/Res]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dec_fir
proc create_hier_cell_dec_fir { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dec_fir() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch0_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch1_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch2_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch3_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch4_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch5_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch6_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_ch7_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_pdti


  # Create pins
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_aclk
  create_bd_pin -dir I s_axis_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {16} \
   CONFIG.S00_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: axis_broadcast_0, and set properties
  set axis_broadcast_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_0

  # Create instance: axis_broadcast_1, and set properties
  set axis_broadcast_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_1

  # Create instance: axis_broadcast_2, and set properties
  set axis_broadcast_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_2

  # Create instance: axis_broadcast_3, and set properties
  set axis_broadcast_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_3

  # Create instance: axis_broadcast_4, and set properties
  set axis_broadcast_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_4

  # Create instance: axis_broadcast_5, and set properties
  set axis_broadcast_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_5

  # Create instance: axis_broadcast_6, and set properties
  set axis_broadcast_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_6

  # Create instance: axis_broadcast_7, and set properties
  set axis_broadcast_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M00_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TUSER_REMAP {tuser[127:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {128} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {128} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_7

  # Create instance: axis_pdti_mux_0, and set properties
  set axis_pdti_mux_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_0 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_0

  # Create instance: axis_pdti_mux_1, and set properties
  set axis_pdti_mux_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_1 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_1

  # Create instance: axis_pdti_mux_2, and set properties
  set axis_pdti_mux_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_2 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_2

  # Create instance: axis_pdti_mux_3, and set properties
  set axis_pdti_mux_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_3 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_3

  # Create instance: axis_pdti_mux_4, and set properties
  set axis_pdti_mux_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_4 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_4

  # Create instance: axis_pdti_mux_5, and set properties
  set axis_pdti_mux_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_5 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_5

  # Create instance: axis_pdti_mux_6, and set properties
  set axis_pdti_mux_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_6 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_6

  # Create instance: axis_pdti_mux_7, and set properties
  set axis_pdti_mux_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_mux:1.1 axis_pdti_mux_7 ]
  set_property -dict [ list \
   CONFIG.data_byte_width {32} \
 ] $axis_pdti_mux_7

  # Create instance: dec16fir_0, and set properties
  set dec16fir_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_0 ]

  # Create instance: dec16fir_1, and set properties
  set dec16fir_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_1 ]

  # Create instance: dec16fir_2, and set properties
  set dec16fir_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_2 ]

  # Create instance: dec16fir_3, and set properties
  set dec16fir_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_3 ]

  # Create instance: dec16fir_4, and set properties
  set dec16fir_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_4 ]

  # Create instance: dec16fir_5, and set properties
  set dec16fir_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_5 ]

  # Create instance: dec16fir_6, and set properties
  set dec16fir_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_6 ]

  # Create instance: dec16fir_7, and set properties
  set dec16fir_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pdti_dec16fir_8:1.1 dec16fir_7 ]

  # Create instance: pdti_upsizer_0, and set properties
  set pdti_upsizer_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_0 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_0

  # Create instance: pdti_upsizer_1, and set properties
  set pdti_upsizer_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_1 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_1

  # Create instance: pdti_upsizer_2, and set properties
  set pdti_upsizer_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_2 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_2

  # Create instance: pdti_upsizer_3, and set properties
  set pdti_upsizer_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_3 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_3

  # Create instance: pdti_upsizer_4, and set properties
  set pdti_upsizer_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_4 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_4

  # Create instance: pdti_upsizer_5, and set properties
  set pdti_upsizer_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_5 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_5

  # Create instance: pdti_upsizer_6, and set properties
  set pdti_upsizer_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_6 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_6

  # Create instance: pdti_upsizer_7, and set properties
  set pdti_upsizer_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axis_pdti_upsizer:1.1 pdti_upsizer_7 ]
  set_property -dict [ list \
   CONFIG.bytes_per_sample {4} \
   CONFIG.out_samples_per_cycle {8} \
 ] $pdti_upsizer_7

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins dec16fir_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins dec16fir_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins dec16fir_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins dec16fir_3/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins dec16fir_4/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_interconnect_0/M05_AXI] [get_bd_intf_pins dec16fir_5/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins axi_interconnect_0/M06_AXI] [get_bd_intf_pins dec16fir_6/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins axi_interconnect_0/M07_AXI] [get_bd_intf_pins dec16fir_7/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M08_AXI [get_bd_intf_pins axi_interconnect_0/M08_AXI] [get_bd_intf_pins axis_pdti_mux_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M09_AXI [get_bd_intf_pins axi_interconnect_0/M09_AXI] [get_bd_intf_pins axis_pdti_mux_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M10_AXI [get_bd_intf_pins axi_interconnect_0/M10_AXI] [get_bd_intf_pins axis_pdti_mux_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M11_AXI [get_bd_intf_pins axi_interconnect_0/M11_AXI] [get_bd_intf_pins axis_pdti_mux_3/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M12_AXI [get_bd_intf_pins axi_interconnect_0/M12_AXI] [get_bd_intf_pins axis_pdti_mux_4/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M13_AXI [get_bd_intf_pins axi_interconnect_0/M13_AXI] [get_bd_intf_pins axis_pdti_mux_5/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M14_AXI [get_bd_intf_pins axi_interconnect_0/M14_AXI] [get_bd_intf_pins axis_pdti_mux_6/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M15_AXI [get_bd_intf_pins axi_interconnect_0/M15_AXI] [get_bd_intf_pins axis_pdti_mux_7/s_axi_csr]
  connect_bd_intf_net -intf_net axis_broadcast_0_M00_AXIS [get_bd_intf_pins axis_broadcast_0/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_0/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_0_M01_AXIS [get_bd_intf_pins axis_broadcast_0/M01_AXIS] [get_bd_intf_pins dec16fir_0/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_1_M00_AXIS [get_bd_intf_pins axis_broadcast_1/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_1/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_1_M01_AXIS [get_bd_intf_pins axis_broadcast_1/M01_AXIS] [get_bd_intf_pins dec16fir_1/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS [get_bd_intf_pins axis_broadcast_2/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_2/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_2_M01_AXIS [get_bd_intf_pins axis_broadcast_2/M01_AXIS] [get_bd_intf_pins dec16fir_2/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS [get_bd_intf_pins axis_broadcast_3/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_3/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_3_M01_AXIS [get_bd_intf_pins axis_broadcast_3/M01_AXIS] [get_bd_intf_pins dec16fir_3/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_4_M00_AXIS [get_bd_intf_pins axis_broadcast_4/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_4/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_4_M01_AXIS [get_bd_intf_pins axis_broadcast_4/M01_AXIS] [get_bd_intf_pins dec16fir_4/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_5_M00_AXIS [get_bd_intf_pins axis_broadcast_5/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_5/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_5_M01_AXIS [get_bd_intf_pins axis_broadcast_5/M01_AXIS] [get_bd_intf_pins dec16fir_5/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_6_M00_AXIS [get_bd_intf_pins axis_broadcast_6/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_6/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_6_M01_AXIS [get_bd_intf_pins axis_broadcast_6/M01_AXIS] [get_bd_intf_pins dec16fir_6/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_7_M00_AXIS [get_bd_intf_pins axis_broadcast_7/M00_AXIS] [get_bd_intf_pins axis_pdti_mux_7/s_axis_i0_pdti]
  connect_bd_intf_net -intf_net axis_broadcast_7_M01_AXIS [get_bd_intf_pins axis_broadcast_7/M01_AXIS] [get_bd_intf_pins dec16fir_7/s_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_0_m_axis_pdti [get_bd_intf_pins m_axis_ch0_pdti] [get_bd_intf_pins axis_pdti_mux_0/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_1_m_axis_pdti [get_bd_intf_pins m_axis_ch1_pdti] [get_bd_intf_pins axis_pdti_mux_1/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_2_m_axis_pdti [get_bd_intf_pins m_axis_ch2_pdti] [get_bd_intf_pins axis_pdti_mux_2/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_3_m_axis_pdti [get_bd_intf_pins m_axis_ch3_pdti] [get_bd_intf_pins axis_pdti_mux_3/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_4_m_axis_pdti [get_bd_intf_pins m_axis_ch4_pdti] [get_bd_intf_pins axis_pdti_mux_4/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_5_m_axis_pdti [get_bd_intf_pins m_axis_ch5_pdti] [get_bd_intf_pins axis_pdti_mux_5/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_6_m_axis_pdti [get_bd_intf_pins m_axis_ch6_pdti] [get_bd_intf_pins axis_pdti_mux_6/m_axis_pdti]
  connect_bd_intf_net -intf_net axis_pdti_mux_7_m_axis_pdti [get_bd_intf_pins m_axis_ch7_pdti] [get_bd_intf_pins axis_pdti_mux_7/m_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_0_m_axis_pdti [get_bd_intf_pins dec16fir_0/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_0/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_1_m_axis_pdti [get_bd_intf_pins dec16fir_1/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_1/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_2_m_axis_pdti [get_bd_intf_pins dec16fir_2/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_2/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_3_m_axis_pdti [get_bd_intf_pins dec16fir_3/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_3/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_4_m_axis_pdti [get_bd_intf_pins dec16fir_4/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_4/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_5_m_axis_pdti [get_bd_intf_pins dec16fir_5/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_5/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_6_m_axis_pdti [get_bd_intf_pins dec16fir_6/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_6/s_axis_pdti]
  connect_bd_intf_net -intf_net dec16fir_7_m_axis_pdti [get_bd_intf_pins dec16fir_7/m_axis_pdti] [get_bd_intf_pins pdti_upsizer_7/s_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_0_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_0/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_0/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_1_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_1/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_1/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_2_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_2/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_2/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_3_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_3/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_3/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_4_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_4/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_4/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_5_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_5/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_5/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_6_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_6/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_6/m_axis_pdti]
  connect_bd_intf_net -intf_net pdti_upsizer_7_m_axis_pdti [get_bd_intf_pins axis_pdti_mux_7/s_axis_i1_pdti] [get_bd_intf_pins pdti_upsizer_7/m_axis_pdti]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins axis_broadcast_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins axis_broadcast_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins axis_broadcast_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins axis_broadcast_3/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch4_pdti_1 [get_bd_intf_pins s_axis_ch4_pdti] [get_bd_intf_pins axis_broadcast_4/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch5_pdti_1 [get_bd_intf_pins s_axis_ch5_pdti] [get_bd_intf_pins axis_broadcast_5/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch6_pdti_1 [get_bd_intf_pins s_axis_ch6_pdti] [get_bd_intf_pins axis_broadcast_6/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch7_pdti_1 [get_bd_intf_pins s_axis_ch7_pdti] [get_bd_intf_pins axis_broadcast_7/S_AXIS]

  # Create port connections
  connect_bd_net -net dec16fir_0_syncout_n [get_bd_pins dec16fir_0/syncout_n] [get_bd_pins pdti_upsizer_0/axis_aresetn]
  connect_bd_net -net dec16fir_1_syncout_n [get_bd_pins dec16fir_1/syncout_n] [get_bd_pins pdti_upsizer_1/axis_aresetn]
  connect_bd_net -net dec16fir_2_syncout_n [get_bd_pins dec16fir_2/syncout_n] [get_bd_pins pdti_upsizer_2/axis_aresetn]
  connect_bd_net -net dec16fir_3_syncout_n [get_bd_pins dec16fir_3/syncout_n] [get_bd_pins pdti_upsizer_3/axis_aresetn]
  connect_bd_net -net dec16fir_4_syncout_n [get_bd_pins dec16fir_4/syncout_n] [get_bd_pins pdti_upsizer_4/axis_aresetn]
  connect_bd_net -net dec16fir_5_syncout_n [get_bd_pins dec16fir_5/syncout_n] [get_bd_pins pdti_upsizer_5/axis_aresetn]
  connect_bd_net -net dec16fir_6_syncout_n [get_bd_pins dec16fir_6/syncout_n] [get_bd_pins pdti_upsizer_6/axis_aresetn]
  connect_bd_net -net dec16fir_7_syncout_n [get_bd_pins dec16fir_7/syncout_n] [get_bd_pins pdti_upsizer_7/axis_aresetn]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/M09_ACLK] [get_bd_pins axi_interconnect_0/M10_ACLK] [get_bd_pins axi_interconnect_0/M11_ACLK] [get_bd_pins axi_interconnect_0/M12_ACLK] [get_bd_pins axi_interconnect_0/M13_ACLK] [get_bd_pins axi_interconnect_0/M14_ACLK] [get_bd_pins axi_interconnect_0/M15_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axis_pdti_mux_0/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_1/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_2/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_3/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_4/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_5/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_6/s_axi_csr_aclk] [get_bd_pins axis_pdti_mux_7/s_axi_csr_aclk] [get_bd_pins dec16fir_0/s_axi_csr_aclk] [get_bd_pins dec16fir_1/s_axi_csr_aclk] [get_bd_pins dec16fir_2/s_axi_csr_aclk] [get_bd_pins dec16fir_3/s_axi_csr_aclk] [get_bd_pins dec16fir_4/s_axi_csr_aclk] [get_bd_pins dec16fir_5/s_axi_csr_aclk] [get_bd_pins dec16fir_6/s_axi_csr_aclk] [get_bd_pins dec16fir_7/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/M09_ARESETN] [get_bd_pins axi_interconnect_0/M10_ARESETN] [get_bd_pins axi_interconnect_0/M11_ARESETN] [get_bd_pins axi_interconnect_0/M12_ARESETN] [get_bd_pins axi_interconnect_0/M13_ARESETN] [get_bd_pins axi_interconnect_0/M14_ARESETN] [get_bd_pins axi_interconnect_0/M15_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axis_pdti_mux_0/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_1/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_2/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_3/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_4/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_5/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_6/s_axi_csr_aresetn] [get_bd_pins axis_pdti_mux_7/s_axi_csr_aresetn] [get_bd_pins dec16fir_0/s_axi_csr_aresetn] [get_bd_pins dec16fir_1/s_axi_csr_aresetn] [get_bd_pins dec16fir_2/s_axi_csr_aresetn] [get_bd_pins dec16fir_3/s_axi_csr_aresetn] [get_bd_pins dec16fir_4/s_axi_csr_aresetn] [get_bd_pins dec16fir_5/s_axi_csr_aresetn] [get_bd_pins dec16fir_6/s_axi_csr_aresetn] [get_bd_pins dec16fir_7/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_broadcast_0/aclk] [get_bd_pins axis_broadcast_1/aclk] [get_bd_pins axis_broadcast_2/aclk] [get_bd_pins axis_broadcast_3/aclk] [get_bd_pins axis_broadcast_4/aclk] [get_bd_pins axis_broadcast_5/aclk] [get_bd_pins axis_broadcast_6/aclk] [get_bd_pins axis_broadcast_7/aclk] [get_bd_pins axis_pdti_mux_0/s_axis_aclk] [get_bd_pins axis_pdti_mux_1/s_axis_aclk] [get_bd_pins axis_pdti_mux_2/s_axis_aclk] [get_bd_pins axis_pdti_mux_3/s_axis_aclk] [get_bd_pins axis_pdti_mux_4/s_axis_aclk] [get_bd_pins axis_pdti_mux_5/s_axis_aclk] [get_bd_pins axis_pdti_mux_6/s_axis_aclk] [get_bd_pins axis_pdti_mux_7/s_axis_aclk] [get_bd_pins dec16fir_0/axis_aclk] [get_bd_pins dec16fir_1/axis_aclk] [get_bd_pins dec16fir_2/axis_aclk] [get_bd_pins dec16fir_3/axis_aclk] [get_bd_pins dec16fir_4/axis_aclk] [get_bd_pins dec16fir_5/axis_aclk] [get_bd_pins dec16fir_6/axis_aclk] [get_bd_pins dec16fir_7/axis_aclk] [get_bd_pins pdti_upsizer_0/axis_aclk] [get_bd_pins pdti_upsizer_1/axis_aclk] [get_bd_pins pdti_upsizer_2/axis_aclk] [get_bd_pins pdti_upsizer_3/axis_aclk] [get_bd_pins pdti_upsizer_4/axis_aclk] [get_bd_pins pdti_upsizer_5/axis_aclk] [get_bd_pins pdti_upsizer_6/axis_aclk] [get_bd_pins pdti_upsizer_7/axis_aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_broadcast_0/aresetn] [get_bd_pins axis_broadcast_1/aresetn] [get_bd_pins axis_broadcast_2/aresetn] [get_bd_pins axis_broadcast_3/aresetn] [get_bd_pins axis_broadcast_4/aresetn] [get_bd_pins axis_broadcast_5/aresetn] [get_bd_pins axis_broadcast_6/aresetn] [get_bd_pins axis_broadcast_7/aresetn] [get_bd_pins axis_pdti_mux_0/s_axis_aresetn] [get_bd_pins axis_pdti_mux_1/s_axis_aresetn] [get_bd_pins axis_pdti_mux_2/s_axis_aresetn] [get_bd_pins axis_pdti_mux_3/s_axis_aresetn] [get_bd_pins axis_pdti_mux_4/s_axis_aresetn] [get_bd_pins axis_pdti_mux_5/s_axis_aresetn] [get_bd_pins axis_pdti_mux_6/s_axis_aresetn] [get_bd_pins axis_pdti_mux_7/s_axis_aresetn] [get_bd_pins dec16fir_0/axis_aresetn] [get_bd_pins dec16fir_1/axis_aresetn] [get_bd_pins dec16fir_2/axis_aresetn] [get_bd_pins dec16fir_3/axis_aresetn] [get_bd_pins dec16fir_4/axis_aresetn] [get_bd_pins dec16fir_5/axis_aresetn] [get_bd_pins dec16fir_6/axis_aresetn] [get_bd_pins dec16fir_7/axis_aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dataio_intrfc
proc create_hier_cell_dataio_intrfc { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dataio_intrfc() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc0_clk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc1_clk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc3_clk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 dac0_clk_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 dac1_clk_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc0_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc1_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc2_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc3_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc4_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc5_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc6_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_adc7_pdti

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ptctl

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch0_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch1_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch2_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch3_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch4_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch5_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch6_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_loopback_ch7_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac0_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac1_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac2_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac3_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac4_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac5_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac7_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac_6_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin0_01_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin0_23_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin1_01_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin1_23_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin2_01_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin2_23_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin3_01_0

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin3_23_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout00_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout01_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout02_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout03_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout10_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout11_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout12_0

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout13_0


  # Create pins
  create_bd_pin -dir O adc_axis_aclk
  create_bd_pin -dir O adc_axis_aresetn
  create_bd_pin -dir O adc_sync_bus_irq
  create_bd_pin -dir I carrier_pps
  create_bd_pin -dir O dac_axis_aclk
  create_bd_pin -dir O dac_axis_aresetn
  create_bd_pin -dir I gate_in
  create_bd_pin -dir I gate_trig_ttl_in
  create_bd_pin -dir I -type clk ref_clk_0
  create_bd_pin -dir O rf_adc_cntl_stat_irq
  create_bd_pin -dir I rf_axis_aclk
  create_bd_pin -dir O rf_data_conv_irq
  create_bd_pin -dir I rtc_pps_in
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I sync_in
  create_bd_pin -dir O sync_rst_gen_out_n
  create_bd_pin -dir I sysref
  create_bd_pin -dir O timestamp_irq

  # Create instance: adc_clk_mmcm, and set properties
  set adc_clk_mmcm [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 adc_clk_mmcm ]
  set_property -dict [ list \
   CONFIG.AXI_DRP {false} \
   CONFIG.CLKIN1_JITTER_PS {40.0} \
   CONFIG.CLKIN2_JITTER_PS {40.0} \
   CONFIG.CLKOUT1_DRIVES {Buffer} \
   CONFIG.CLKOUT1_JITTER {74.376} \
   CONFIG.CLKOUT1_PHASE_ERROR {78.266} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT2_DRIVES {Buffer} \
   CONFIG.CLKOUT2_JITTER {85.736} \
   CONFIG.CLKOUT2_PHASE_ERROR {79.008} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {100.000} \
   CONFIG.CLKOUT2_USED {false} \
   CONFIG.CLKOUT3_DRIVES {Buffer} \
   CONFIG.CLKOUT4_DRIVES {Buffer} \
   CONFIG.CLKOUT5_DRIVES {Buffer} \
   CONFIG.CLKOUT6_DRIVES {Buffer} \
   CONFIG.CLKOUT7_DRIVES {Buffer} \
   CONFIG.ENABLE_CLOCK_MONITOR {false} \
   CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {4.750} \
   CONFIG.MMCM_CLKIN1_PERIOD {4.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {10.0} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {2.375} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {1} \
   CONFIG.MMCM_COMPENSATION {AUTO} \
   CONFIG.MMCM_DIVCLK_DIVIDE {1} \
   CONFIG.NUM_OUT_CLKS {1} \
   CONFIG.PRIMITIVE {MMCM} \
   CONFIG.PRIM_IN_FREQ {250} \
   CONFIG.PRIM_SOURCE {No_buffer} \
   CONFIG.SECONDARY_IN_FREQ {100.000} \
   CONFIG.SECONDARY_SOURCE {Single_ended_clock_capable_pin} \
   CONFIG.USE_DYN_RECONFIG {true} \
   CONFIG.USE_INCLK_SWITCHOVER {false} \
   CONFIG.USE_PHASE_ALIGNMENT {true} \
 ] $adc_clk_mmcm

  # Create instance: adc_clk_mmcm2, and set properties
  set adc_clk_mmcm2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 adc_clk_mmcm2 ]
  set_property -dict [ list \
   CONFIG.AXI_DRP {false} \
   CONFIG.CLKIN1_JITTER_PS {20.0} \
   CONFIG.CLKIN2_JITTER_PS {20.0} \
   CONFIG.CLKOUT1_DRIVES {Buffer} \
   CONFIG.CLKOUT1_JITTER {74.181} \
   CONFIG.CLKOUT1_PHASE_ERROR {78.266} \
   CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT2_DRIVES {Buffer} \
   CONFIG.CLKOUT2_JITTER {85.571} \
   CONFIG.CLKOUT2_PHASE_ERROR {79.008} \
   CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT2_USED {false} \
   CONFIG.CLKOUT3_DRIVES {Buffer} \
   CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT4_DRIVES {Buffer} \
   CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT5_DRIVES {Buffer} \
   CONFIG.CLKOUT5_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT6_DRIVES {Buffer} \
   CONFIG.CLKOUT6_REQUESTED_OUT_FREQ {500} \
   CONFIG.CLKOUT7_DRIVES {Buffer} \
   CONFIG.CLKOUT7_REQUESTED_OUT_FREQ {500} \
   CONFIG.ENABLE_CLOCK_MONITOR {false} \
   CONFIG.FEEDBACK_SOURCE {FDBK_AUTO} \
   CONFIG.MMCM_CLKFBOUT_MULT_F {4.750} \
   CONFIG.MMCM_CLKIN1_PERIOD {2.000} \
   CONFIG.MMCM_CLKIN2_PERIOD {2.000} \
   CONFIG.MMCM_CLKOUT0_DIVIDE_F {2.375} \
   CONFIG.MMCM_CLKOUT1_DIVIDE {1} \
   CONFIG.MMCM_COMPENSATION {AUTO} \
   CONFIG.MMCM_DIVCLK_DIVIDE {2} \
   CONFIG.NUM_OUT_CLKS {1} \
   CONFIG.PRIMITIVE {MMCM} \
   CONFIG.PRIM_IN_FREQ {500} \
   CONFIG.PRIM_SOURCE {No_buffer} \
   CONFIG.SECONDARY_IN_FREQ {500} \
   CONFIG.SECONDARY_SOURCE {No_buffer} \
   CONFIG.USE_DYN_RECONFIG {true} \
   CONFIG.USE_FREQ_SYNTH {false} \
   CONFIG.USE_INCLK_SWITCHOVER {true} \
   CONFIG.USE_PHASE_ALIGNMENT {true} \
 ] $adc_clk_mmcm2

  # Create instance: adc_merge_streams
  create_hier_cell_adc_merge_streams $hier_obj adc_merge_streams

  # Create instance: adc_rst_csr, and set properties
  set adc_rst_csr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_axil_csr:1.0 adc_rst_csr ]
  set_property -dict [ list \
   CONFIG.has_interrupt_regs {false} \
   CONFIG.num_ctl_regs {1} \
   CONFIG.num_stat_regs {0} \
 ] $adc_rst_csr

  # Create instance: axi_intercon0, and set properties
  set axi_intercon0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_intercon0 ]
  set_property -dict [ list \
   CONFIG.NUM_MI {12} \
   CONFIG.NUM_SI {1} \
 ] $axi_intercon0

  # Create instance: clk_freq_cntr_adc_h, and set properties
  set clk_freq_cntr_adc_h [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_clock_frq_cntr:1.0 clk_freq_cntr_adc_h ]
  set_property -dict [ list \
   CONFIG.ref_freq_hz {200000000} \
 ] $clk_freq_cntr_adc_h

  # Create instance: clk_freq_cntr_adc_l, and set properties
  set clk_freq_cntr_adc_l [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_clock_frq_cntr:1.0 clk_freq_cntr_adc_l ]
  set_property -dict [ list \
   CONFIG.ref_freq_hz {200000000} \
 ] $clk_freq_cntr_adc_l

  # Create instance: clk_freq_cntr_dac, and set properties
  set clk_freq_cntr_dac [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_clock_frq_cntr:1.0 clk_freq_cntr_dac ]
  set_property -dict [ list \
   CONFIG.ref_freq_hz {200000000} \
 ] $clk_freq_cntr_dac

  # Create instance: loopback_fork
  create_hier_cell_loopback_fork $hier_obj loopback_fork

  # Create instance: px_pwron_rst_0, and set properties
  set px_pwron_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pwron_rst:1.0 px_pwron_rst_0 ]
  set_property -dict [ list \
   CONFIG.has_rst_input {true} \
   CONFIG.has_rst_output {false} \
 ] $px_pwron_rst_0

  # Create instance: px_pwron_rst_1, and set properties
  set px_pwron_rst_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_pwron_rst:1.0 px_pwron_rst_1 ]
  set_property -dict [ list \
   CONFIG.has_rst_input {true} \
   CONFIG.has_rst_output {false} \
 ] $px_pwron_rst_1

  # Create instance: px_rfsoc_adc_syncbus, and set properties
  set px_rfsoc_adc_syncbus [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rfsoc_syncbus_intrfc:1.2 px_rfsoc_adc_syncbus ]
  set_property -dict [ list \
   CONFIG.ext_axiclk_version {true} \
   CONFIG.has_fabric_gate_in {false} \
   CONFIG.has_fabric_pps_in {false} \
   CONFIG.has_fabric_sync_in {false} \
   CONFIG.has_fabric_sysref_in {false} \
   CONFIG.has_fabric_trig_in {false} \
   CONFIG.initial_led_src {2} \
   CONFIG.use_gate_tap_delay {false} \
   CONFIG.use_sync_tap_delay {false} \
   CONFIG.use_sysref_tap_delay {false} \
   CONFIG.use_ttl_trig_tap_delay {false} \
 ] $px_rfsoc_adc_syncbus

  # Create instance: px_subset_vctr_0, and set properties
  set px_subset_vctr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_subset_vctr:1.1 px_subset_vctr_0 ]
  set_property -dict [ list \
   CONFIG.out_end_index {0} \
   CONFIG.out_start_index {0} \
 ] $px_subset_vctr_0

  # Create instance: px_timestamp_gen, and set properties
  set px_timestamp_gen [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_timestamp_gen_sgate:1.0 px_timestamp_gen ]

  # Create instance: px_xpm_cdc_async_rst_0, and set properties
  set px_xpm_cdc_async_rst_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_xpm_cdc_async_rst:1.1 px_xpm_cdc_async_rst_0 ]
  set_property -dict [ list \
   CONFIG.DEST_SYNC_FF {3} \
 ] $px_xpm_cdc_async_rst_0

  # Create instance: rf_adc_cntl_stat, and set properties
  set rf_adc_cntl_stat [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_adc_cntl_stat:2.2 rf_adc_cntl_stat ]
  set_property -dict [ list \
   CONFIG.en_adc01_rts {true} \
   CONFIG.en_adc0_thresh_outputs {false} \
   CONFIG.en_adc1_thresh_outputs {false} \
   CONFIG.en_adc23_rts {true} \
   CONFIG.en_adc2_thresh_outputs {false} \
   CONFIG.en_adc3_thresh_outputs {false} \
   CONFIG.en_adc45_rts {true} \
   CONFIG.en_adc4_thresh_outputs {false} \
   CONFIG.en_adc5_thresh_outputs {false} \
   CONFIG.en_adc67_rts {true} \
   CONFIG.en_adc6_thresh_outputs {false} \
   CONFIG.en_adc7_thresh_outputs {false} \
   CONFIG.has_pl_event_in {false} \
   CONFIG.inv_data {true} \
 ] $rf_adc_cntl_stat

  # Create instance: rf_data_converter, and set properties
  set rf_data_converter [ create_bd_cell -type ip -vlnv xilinx.com:ip:usp_rf_data_converter:2.4 rf_data_converter ]
  set_property -dict [ list \
   CONFIG.ADC0_Fabric_Freq {500.000} \
   CONFIG.ADC0_Multi_Tile_Sync {true} \
   CONFIG.ADC0_Outclk_Freq {250.000} \
   CONFIG.ADC0_Refclk_Freq {4000.000} \
   CONFIG.ADC0_Sampling_Rate {4} \
   CONFIG.ADC1_Enable {1} \
   CONFIG.ADC1_Fabric_Freq {500.000} \
   CONFIG.ADC1_Multi_Tile_Sync {true} \
   CONFIG.ADC1_Outclk_Freq {250.000} \
   CONFIG.ADC1_Refclk_Freq {4000.000} \
   CONFIG.ADC1_Sampling_Rate {4} \
   CONFIG.ADC2_Enable {1} \
   CONFIG.ADC2_Fabric_Freq {500.000} \
   CONFIG.ADC2_Multi_Tile_Sync {true} \
   CONFIG.ADC2_Outclk_Freq {250.000} \
   CONFIG.ADC2_Refclk_Freq {4000.000} \
   CONFIG.ADC2_Sampling_Rate {4} \
   CONFIG.ADC3_Enable {1} \
   CONFIG.ADC3_Fabric_Freq {500.000} \
   CONFIG.ADC3_Multi_Tile_Sync {true} \
   CONFIG.ADC3_Outclk_Freq {250.000} \
   CONFIG.ADC3_Refclk_Freq {4000.000} \
   CONFIG.ADC3_Sampling_Rate {4} \
   CONFIG.ADC_Coarse_Mixer_Freq00 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq01 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq02 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq03 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq12 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq13 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq22 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq23 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq32 {0} \
   CONFIG.ADC_Coarse_Mixer_Freq33 {0} \
   CONFIG.ADC_Data_Type00 {1} \
   CONFIG.ADC_Data_Type01 {1} \
   CONFIG.ADC_Data_Type02 {1} \
   CONFIG.ADC_Data_Type03 {1} \
   CONFIG.ADC_Data_Type10 {1} \
   CONFIG.ADC_Data_Type11 {1} \
   CONFIG.ADC_Data_Type12 {1} \
   CONFIG.ADC_Data_Type13 {1} \
   CONFIG.ADC_Data_Type20 {1} \
   CONFIG.ADC_Data_Type21 {1} \
   CONFIG.ADC_Data_Type22 {1} \
   CONFIG.ADC_Data_Type23 {1} \
   CONFIG.ADC_Data_Type30 {1} \
   CONFIG.ADC_Data_Type31 {1} \
   CONFIG.ADC_Data_Type32 {1} \
   CONFIG.ADC_Data_Type33 {1} \
   CONFIG.ADC_Data_Width00 {8} \
   CONFIG.ADC_Data_Width01 {8} \
   CONFIG.ADC_Data_Width02 {8} \
   CONFIG.ADC_Data_Width03 {8} \
   CONFIG.ADC_Decimation_Mode00 {1} \
   CONFIG.ADC_Decimation_Mode01 {1} \
   CONFIG.ADC_Decimation_Mode02 {1} \
   CONFIG.ADC_Decimation_Mode03 {1} \
   CONFIG.ADC_Decimation_Mode10 {1} \
   CONFIG.ADC_Decimation_Mode11 {1} \
   CONFIG.ADC_Decimation_Mode12 {1} \
   CONFIG.ADC_Decimation_Mode13 {1} \
   CONFIG.ADC_Decimation_Mode20 {1} \
   CONFIG.ADC_Decimation_Mode21 {1} \
   CONFIG.ADC_Decimation_Mode22 {1} \
   CONFIG.ADC_Decimation_Mode23 {1} \
   CONFIG.ADC_Decimation_Mode30 {1} \
   CONFIG.ADC_Decimation_Mode31 {1} \
   CONFIG.ADC_Decimation_Mode32 {1} \
   CONFIG.ADC_Decimation_Mode33 {1} \
   CONFIG.ADC_Dither02 {true} \
   CONFIG.ADC_Dither03 {true} \
   CONFIG.ADC_Dither10 {true} \
   CONFIG.ADC_Dither11 {true} \
   CONFIG.ADC_Dither12 {true} \
   CONFIG.ADC_Dither13 {true} \
   CONFIG.ADC_Dither20 {true} \
   CONFIG.ADC_Dither21 {true} \
   CONFIG.ADC_Dither22 {true} \
   CONFIG.ADC_Dither23 {true} \
   CONFIG.ADC_Dither30 {true} \
   CONFIG.ADC_Dither31 {true} \
   CONFIG.ADC_Dither32 {true} \
   CONFIG.ADC_Dither33 {true} \
   CONFIG.ADC_Mixer_Mode00 {0} \
   CONFIG.ADC_Mixer_Mode01 {0} \
   CONFIG.ADC_Mixer_Mode02 {0} \
   CONFIG.ADC_Mixer_Mode03 {0} \
   CONFIG.ADC_Mixer_Mode10 {0} \
   CONFIG.ADC_Mixer_Mode11 {0} \
   CONFIG.ADC_Mixer_Mode12 {0} \
   CONFIG.ADC_Mixer_Mode13 {0} \
   CONFIG.ADC_Mixer_Mode20 {0} \
   CONFIG.ADC_Mixer_Mode21 {0} \
   CONFIG.ADC_Mixer_Mode22 {0} \
   CONFIG.ADC_Mixer_Mode23 {0} \
   CONFIG.ADC_Mixer_Mode30 {0} \
   CONFIG.ADC_Mixer_Mode31 {0} \
   CONFIG.ADC_Mixer_Mode32 {0} \
   CONFIG.ADC_Mixer_Mode33 {0} \
   CONFIG.ADC_Mixer_Type02 {1} \
   CONFIG.ADC_Mixer_Type03 {1} \
   CONFIG.ADC_Mixer_Type10 {1} \
   CONFIG.ADC_Mixer_Type11 {1} \
   CONFIG.ADC_Mixer_Type12 {1} \
   CONFIG.ADC_Mixer_Type13 {1} \
   CONFIG.ADC_Mixer_Type20 {1} \
   CONFIG.ADC_Mixer_Type21 {1} \
   CONFIG.ADC_Mixer_Type22 {1} \
   CONFIG.ADC_Mixer_Type23 {1} \
   CONFIG.ADC_Mixer_Type30 {1} \
   CONFIG.ADC_Mixer_Type31 {1} \
   CONFIG.ADC_Mixer_Type32 {1} \
   CONFIG.ADC_Mixer_Type33 {1} \
   CONFIG.ADC_NCO_Freq02 {0} \
   CONFIG.ADC_NCO_Freq03 {0} \
   CONFIG.ADC_NCO_Freq12 {0} \
   CONFIG.ADC_NCO_Freq13 {0} \
   CONFIG.ADC_NCO_Freq22 {0} \
   CONFIG.ADC_NCO_Freq23 {0} \
   CONFIG.ADC_NCO_Freq32 {0} \
   CONFIG.ADC_NCO_Freq33 {0} \
   CONFIG.ADC_RESERVED_1_00 {false} \
   CONFIG.ADC_RESERVED_1_02 {false} \
   CONFIG.ADC_RESERVED_1_10 {false} \
   CONFIG.ADC_RESERVED_1_12 {false} \
   CONFIG.ADC_RESERVED_1_20 {false} \
   CONFIG.ADC_RESERVED_1_22 {false} \
   CONFIG.ADC_RESERVED_1_30 {false} \
   CONFIG.ADC_RESERVED_1_32 {false} \
   CONFIG.ADC_RTS {true} \
   CONFIG.ADC_Slice02_Enable {true} \
   CONFIG.ADC_Slice03_Enable {true} \
   CONFIG.ADC_Slice10_Enable {true} \
   CONFIG.ADC_Slice11_Enable {true} \
   CONFIG.ADC_Slice12_Enable {true} \
   CONFIG.ADC_Slice13_Enable {true} \
   CONFIG.ADC_Slice20_Enable {true} \
   CONFIG.ADC_Slice21_Enable {true} \
   CONFIG.ADC_Slice22_Enable {true} \
   CONFIG.ADC_Slice23_Enable {true} \
   CONFIG.ADC_Slice30_Enable {true} \
   CONFIG.ADC_Slice31_Enable {true} \
   CONFIG.ADC_Slice32_Enable {true} \
   CONFIG.ADC_Slice33_Enable {true} \
   CONFIG.Axiclk_Freq {62.5} \
   CONFIG.Calibration_Freeze {true} \
   CONFIG.DAC0_Clock_Dist {0} \
   CONFIG.DAC0_Clock_Source {6} \
   CONFIG.DAC0_Enable {1} \
   CONFIG.DAC0_Fabric_Freq {500.000} \
   CONFIG.DAC0_Multi_Tile_Sync {true} \
   CONFIG.DAC0_Outclk_Freq {250.000} \
   CONFIG.DAC0_Refclk_Freq {4000.000} \
   CONFIG.DAC0_Sampling_Rate {4} \
   CONFIG.DAC0_VOP {32.0} \
   CONFIG.DAC1_Clock_Source {6} \
   CONFIG.DAC1_Enable {1} \
   CONFIG.DAC1_Fabric_Freq {500.000} \
   CONFIG.DAC1_Multi_Tile_Sync {true} \
   CONFIG.DAC1_Outclk_Freq {250.000} \
   CONFIG.DAC1_Refclk_Freq {4000.000} \
   CONFIG.DAC1_Sampling_Rate {4} \
   CONFIG.DAC1_VOP {32} \
   CONFIG.DAC2_Clock_Dist {1} \
   CONFIG.DAC2_Enable {1} \
   CONFIG.DAC2_Fabric_Freq {500.000} \
   CONFIG.DAC2_Multi_Tile_Sync {true} \
   CONFIG.DAC2_Outclk_Freq {250.000} \
   CONFIG.DAC2_Refclk_Freq {4000.000} \
   CONFIG.DAC2_Sampling_Rate {4} \
   CONFIG.DAC2_VOP {32} \
   CONFIG.DAC3_Clock_Source {6} \
   CONFIG.DAC3_Enable {1} \
   CONFIG.DAC3_Fabric_Freq {500.000} \
   CONFIG.DAC3_Multi_Tile_Sync {true} \
   CONFIG.DAC3_Outclk_Freq {250.000} \
   CONFIG.DAC3_Refclk_Freq {4000.000} \
   CONFIG.DAC3_Sampling_Rate {4} \
   CONFIG.DAC3_VOP {32} \
   CONFIG.DAC_Coarse_Mixer_Freq00 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq02 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq10 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq12 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq20 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq22 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq30 {3} \
   CONFIG.DAC_Coarse_Mixer_Freq32 {3} \
   CONFIG.DAC_Data_Width00 {8} \
   CONFIG.DAC_Data_Width02 {8} \
   CONFIG.DAC_Data_Width10 {8} \
   CONFIG.DAC_Data_Width12 {8} \
   CONFIG.DAC_Data_Width20 {8} \
   CONFIG.DAC_Data_Width22 {8} \
   CONFIG.DAC_Data_Width30 {8} \
   CONFIG.DAC_Data_Width32 {8} \
   CONFIG.DAC_Interpolation_Mode00 {1} \
   CONFIG.DAC_Interpolation_Mode02 {1} \
   CONFIG.DAC_Interpolation_Mode10 {1} \
   CONFIG.DAC_Interpolation_Mode12 {1} \
   CONFIG.DAC_Interpolation_Mode20 {1} \
   CONFIG.DAC_Interpolation_Mode22 {1} \
   CONFIG.DAC_Interpolation_Mode30 {1} \
   CONFIG.DAC_Interpolation_Mode32 {1} \
   CONFIG.DAC_Invsinc_Ctrl10 {false} \
   CONFIG.DAC_Invsinc_Ctrl12 {false} \
   CONFIG.DAC_Mixer_Type00 {1} \
   CONFIG.DAC_Mixer_Type02 {1} \
   CONFIG.DAC_Mixer_Type10 {1} \
   CONFIG.DAC_Mixer_Type12 {1} \
   CONFIG.DAC_Mixer_Type20 {1} \
   CONFIG.DAC_Mixer_Type22 {1} \
   CONFIG.DAC_Mixer_Type30 {1} \
   CONFIG.DAC_Mixer_Type32 {1} \
   CONFIG.DAC_RESERVED_1_00 {false} \
   CONFIG.DAC_RESERVED_1_01 {false} \
   CONFIG.DAC_RESERVED_1_02 {false} \
   CONFIG.DAC_RESERVED_1_03 {false} \
   CONFIG.DAC_RESERVED_1_10 {false} \
   CONFIG.DAC_RESERVED_1_11 {false} \
   CONFIG.DAC_RESERVED_1_12 {false} \
   CONFIG.DAC_RESERVED_1_13 {false} \
   CONFIG.DAC_RESERVED_1_20 {false} \
   CONFIG.DAC_RESERVED_1_21 {false} \
   CONFIG.DAC_RESERVED_1_22 {false} \
   CONFIG.DAC_RESERVED_1_23 {false} \
   CONFIG.DAC_RESERVED_1_30 {false} \
   CONFIG.DAC_RESERVED_1_31 {false} \
   CONFIG.DAC_RESERVED_1_32 {false} \
   CONFIG.DAC_RESERVED_1_33 {false} \
   CONFIG.DAC_Slice00_Enable {true} \
   CONFIG.DAC_Slice02_Enable {true} \
   CONFIG.DAC_Slice10_Enable {true} \
   CONFIG.DAC_Slice12_Enable {true} \
   CONFIG.DAC_Slice20_Enable {true} \
   CONFIG.DAC_Slice22_Enable {true} \
   CONFIG.DAC_Slice30_Enable {true} \
   CONFIG.DAC_Slice32_Enable {true} \
 ] $rf_data_converter

  # Create instance: sysref_period_cntr, and set properties
  set sysref_period_cntr [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_periodic_sig_cntr:1.0 sysref_period_cntr ]

  # Create instance: timectl_reg_slice0, and set properties
  set timectl_reg_slice0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 timectl_reg_slice0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {4} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $timectl_reg_slice0

  # Create instance: timectl_reg_slice3, and set properties
  set timectl_reg_slice3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 timectl_reg_slice3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {1} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $timectl_reg_slice3

  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property -dict [ list \
   CONFIG.C_OPERATION {not} \
   CONFIG.C_SIZE {1} \
   CONFIG.LOGO_FILE {data/sym_notgate.png} \
 ] $util_vector_logic_0

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property -dict [ list \
   CONFIG.CONST_VAL {0} \
   CONFIG.CONST_WIDTH {32} \
 ] $xlconstant_0

  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins vin0_01_0] [get_bd_intf_pins rf_data_converter/vin0_01]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins sysref_in_0] [get_bd_intf_pins rf_data_converter/sysref_in]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins adc0_clk_0] [get_bd_intf_pins rf_data_converter/adc0_clk]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins vout00_0] [get_bd_intf_pins rf_data_converter/vout00]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins vin0_23_0] [get_bd_intf_pins rf_data_converter/vin0_23]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins vin1_01_0] [get_bd_intf_pins rf_data_converter/vin1_01]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins vin1_23_0] [get_bd_intf_pins rf_data_converter/vin1_23]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins vin2_01_0] [get_bd_intf_pins rf_data_converter/vin2_01]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins vin2_23_0] [get_bd_intf_pins rf_data_converter/vin2_23]
  connect_bd_intf_net -intf_net Conn11 [get_bd_intf_pins vin3_01_0] [get_bd_intf_pins rf_data_converter/vin3_01]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins vin3_23_0] [get_bd_intf_pins rf_data_converter/vin3_23]
  connect_bd_intf_net -intf_net Conn13 [get_bd_intf_pins vout01_0] [get_bd_intf_pins rf_data_converter/vout02]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins vout02_0] [get_bd_intf_pins rf_data_converter/vout10]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins vout03_0] [get_bd_intf_pins rf_data_converter/vout12]
  connect_bd_intf_net -intf_net Conn16 [get_bd_intf_pins vout10_0] [get_bd_intf_pins rf_data_converter/vout20]
  connect_bd_intf_net -intf_net Conn17 [get_bd_intf_pins vout11_0] [get_bd_intf_pins rf_data_converter/vout22]
  connect_bd_intf_net -intf_net Conn18 [get_bd_intf_pins vout12_0] [get_bd_intf_pins rf_data_converter/vout30]
  connect_bd_intf_net -intf_net Conn19 [get_bd_intf_pins vout13_0] [get_bd_intf_pins rf_data_converter/vout32]
  connect_bd_intf_net -intf_net Conn20 [get_bd_intf_pins adc1_clk_0] [get_bd_intf_pins rf_data_converter/adc1_clk]
  connect_bd_intf_net -intf_net Conn21 [get_bd_intf_pins adc2_clk_0] [get_bd_intf_pins rf_data_converter/adc2_clk]
  connect_bd_intf_net -intf_net Conn22 [get_bd_intf_pins adc3_clk_0] [get_bd_intf_pins rf_data_converter/adc3_clk]
  connect_bd_intf_net -intf_net Conn23 [get_bd_intf_pins dac1_clk_0] [get_bd_intf_pins rf_data_converter/dac2_clk]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc0_pdti [get_bd_intf_pins m_axis_adc0_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc0_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc1_pdti [get_bd_intf_pins m_axis_adc1_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc1_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc2_pdti [get_bd_intf_pins m_axis_adc2_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc2_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc3_pdti [get_bd_intf_pins m_axis_adc3_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc3_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc4_pdti [get_bd_intf_pins m_axis_adc4_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc4_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc5_pdti [get_bd_intf_pins m_axis_adc5_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc5_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc6_pdti [get_bd_intf_pins m_axis_adc6_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc6_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_adc7_pdti [get_bd_intf_pins m_axis_adc7_pdti] [get_bd_intf_pins adc_merge_streams/m_axis_adc7_pdti]
  connect_bd_intf_net -intf_net adc_merge_streams_m_axis_ptctl [get_bd_intf_pins m_axis_dac_ptctl] [get_bd_intf_pins adc_merge_streams/m_axis_ptctl]
  connect_bd_intf_net -intf_net axi_intercon0_M02_AXI [get_bd_intf_pins adc_merge_streams/s_axi_csr] [get_bd_intf_pins axi_intercon0/M02_AXI]
  connect_bd_intf_net -intf_net axi_intercon0_M03_AXI [get_bd_intf_pins axi_intercon0/M03_AXI] [get_bd_intf_pins px_rfsoc_adc_syncbus/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M04_AXI [get_bd_intf_pins axi_intercon0/M04_AXI] [get_bd_intf_pins rf_adc_cntl_stat/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M05_AXI [get_bd_intf_pins axi_intercon0/M05_AXI] [get_bd_intf_pins sysref_period_cntr/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M06_AXI [get_bd_intf_pins axi_intercon0/M06_AXI] [get_bd_intf_pins px_timestamp_gen/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M07_AXI [get_bd_intf_pins axi_intercon0/M07_AXI] [get_bd_intf_pins clk_freq_cntr_adc_l/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M08_AXI [get_bd_intf_pins axi_intercon0/M08_AXI] [get_bd_intf_pins clk_freq_cntr_dac/s_axi_csr]
  connect_bd_intf_net -intf_net axi_intercon0_M09_AXI [get_bd_intf_pins adc_clk_mmcm/s_axi_lite] [get_bd_intf_pins axi_intercon0/M09_AXI]
  connect_bd_intf_net -intf_net axi_intercon0_M10_AXI [get_bd_intf_pins adc_clk_mmcm2/s_axi_lite] [get_bd_intf_pins axi_intercon0/M10_AXI]
  connect_bd_intf_net -intf_net axi_intercon0_M11_AXI [get_bd_intf_pins adc_rst_csr/s_axi_csr] [get_bd_intf_pins axi_intercon0/M11_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_intercon0/M00_AXI] [get_bd_intf_pins rf_data_converter/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_intercon0/M01_AXI] [get_bd_intf_pins clk_freq_cntr_adc_h/s_axi_csr]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch0_i [get_bd_intf_pins adc_merge_streams/s_axis_ch0_i] [get_bd_intf_pins loopback_fork/m_axis_ch0_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch0_q [get_bd_intf_pins adc_merge_streams/s_axis_ch0_q] [get_bd_intf_pins loopback_fork/m_axis_ch0_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch1_i [get_bd_intf_pins adc_merge_streams/s_axis_ch1_i] [get_bd_intf_pins loopback_fork/m_axis_ch1_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch1_q [get_bd_intf_pins adc_merge_streams/s_axis_ch1_q] [get_bd_intf_pins loopback_fork/m_axis_ch1_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch2_i [get_bd_intf_pins adc_merge_streams/s_axis_ch2_i] [get_bd_intf_pins loopback_fork/m_axis_ch2_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch2_q [get_bd_intf_pins adc_merge_streams/s_axis_ch2_q] [get_bd_intf_pins loopback_fork/m_axis_ch2_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch3_i [get_bd_intf_pins adc_merge_streams/s_axis_ch3_i] [get_bd_intf_pins loopback_fork/m_axis_ch3_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch3_q [get_bd_intf_pins adc_merge_streams/s_axis_ch3_q] [get_bd_intf_pins loopback_fork/m_axis_ch3_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch4_i [get_bd_intf_pins adc_merge_streams/s_axis_ch4_i] [get_bd_intf_pins loopback_fork/m_axis_ch4_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch4_q [get_bd_intf_pins adc_merge_streams/s_axis_ch4_q] [get_bd_intf_pins loopback_fork/m_axis_ch4_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch5_i [get_bd_intf_pins adc_merge_streams/s_axis_ch5_i] [get_bd_intf_pins loopback_fork/m_axis_ch5_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch5_q [get_bd_intf_pins adc_merge_streams/s_axis_ch5_q] [get_bd_intf_pins loopback_fork/m_axis_ch5_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch6_i [get_bd_intf_pins adc_merge_streams/s_axis_ch6_i] [get_bd_intf_pins loopback_fork/m_axis_ch6_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch6_q [get_bd_intf_pins adc_merge_streams/s_axis_ch6_q] [get_bd_intf_pins loopback_fork/m_axis_ch6_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch7_i [get_bd_intf_pins adc_merge_streams/s_axis_ch7_i] [get_bd_intf_pins loopback_fork/m_axis_ch7_i]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_ch7_q [get_bd_intf_pins adc_merge_streams/s_axis_ch7_q] [get_bd_intf_pins loopback_fork/m_axis_ch7_q]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch0_pd [get_bd_intf_pins m_axis_loopback_ch0_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch0_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch1_pd [get_bd_intf_pins m_axis_loopback_ch1_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch1_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch2_pd [get_bd_intf_pins m_axis_loopback_ch2_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch2_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch3_pd [get_bd_intf_pins m_axis_loopback_ch3_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch3_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch4_pd [get_bd_intf_pins m_axis_loopback_ch4_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch4_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch5_pd [get_bd_intf_pins m_axis_loopback_ch5_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch5_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch6_pd [get_bd_intf_pins m_axis_loopback_ch6_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch6_pd]
  connect_bd_intf_net -intf_net drfm_fork_m_axis_drfm_ch7_pd [get_bd_intf_pins m_axis_loopback_ch7_pd] [get_bd_intf_pins loopback_fork/m_axis_loopback_ch7_pd]
  connect_bd_intf_net -intf_net px_rfsoc_adc_syncbus_m_axis_timecntl [get_bd_intf_pins px_rfsoc_adc_syncbus/m_axis_timecntl] [get_bd_intf_pins timectl_reg_slice0/S_AXIS]
  connect_bd_intf_net -intf_net px_rfsoc_syncbus_m_axis_ptctl [get_bd_intf_pins px_rfsoc_adc_syncbus/m_axis_ptctl] [get_bd_intf_pins timectl_reg_slice3/S_AXIS]
  connect_bd_intf_net -intf_net px_timestamp_gen_m_axis_pts [get_bd_intf_pins adc_merge_streams/s_axis_pts] [get_bd_intf_pins px_timestamp_gen/m_axis_pts]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc0_calibration [get_bd_intf_pins rf_adc_cntl_stat/adc0_calibration] [get_bd_intf_pins rf_data_converter/adc0_calibration]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc0_rts [get_bd_intf_pins rf_adc_cntl_stat/adc0_rts] [get_bd_intf_pins rf_data_converter/adc0_rts]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc1_calibration [get_bd_intf_pins rf_adc_cntl_stat/adc1_calibration] [get_bd_intf_pins rf_data_converter/adc1_calibration]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc1_rts [get_bd_intf_pins rf_adc_cntl_stat/adc1_rts] [get_bd_intf_pins rf_data_converter/adc1_rts]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc2_calibration [get_bd_intf_pins rf_adc_cntl_stat/adc2_calibration] [get_bd_intf_pins rf_data_converter/adc2_calibration]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc2_rts [get_bd_intf_pins rf_adc_cntl_stat/adc2_rts] [get_bd_intf_pins rf_data_converter/adc2_rts]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc3_calibration [get_bd_intf_pins rf_adc_cntl_stat/adc3_calibration] [get_bd_intf_pins rf_data_converter/adc3_calibration]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_adc3_rts [get_bd_intf_pins rf_adc_cntl_stat/adc3_rts] [get_bd_intf_pins rf_data_converter/adc3_rts]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc0_q [get_bd_intf_pins loopback_fork/s_axis_ch0_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc0_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc1_i [get_bd_intf_pins loopback_fork/s_axis_ch1_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc1_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc1_q [get_bd_intf_pins loopback_fork/s_axis_ch1_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc1_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc2_i [get_bd_intf_pins loopback_fork/s_axis_ch2_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc2_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc2_q [get_bd_intf_pins loopback_fork/s_axis_ch2_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc2_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc3_i [get_bd_intf_pins loopback_fork/s_axis_ch3_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc3_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc3_q [get_bd_intf_pins loopback_fork/s_axis_ch3_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc3_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc4_i [get_bd_intf_pins loopback_fork/s_axis_ch4_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc4_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc4_q [get_bd_intf_pins loopback_fork/s_axis_ch4_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc4_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc5_i [get_bd_intf_pins loopback_fork/s_axis_ch5_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc5_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc5_q [get_bd_intf_pins loopback_fork/s_axis_ch5_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc5_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc6_i [get_bd_intf_pins loopback_fork/s_axis_ch6_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc6_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc6_q [get_bd_intf_pins loopback_fork/s_axis_ch6_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc6_q]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc7_i [get_bd_intf_pins loopback_fork/s_axis_ch7_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc7_i]
  connect_bd_intf_net -intf_net rf_adc_cntl_stat_m_axis_adc7_q [get_bd_intf_pins loopback_fork/s_axis_ch7_q] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc7_q]
  connect_bd_intf_net -intf_net rf_data_converter_m00_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc0_i] [get_bd_intf_pins rf_data_converter/m00_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m01_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc0_q] [get_bd_intf_pins rf_data_converter/m01_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m02_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc1_i] [get_bd_intf_pins rf_data_converter/m02_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m03_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc1_q] [get_bd_intf_pins rf_data_converter/m03_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m10_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc2_i] [get_bd_intf_pins rf_data_converter/m10_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m11_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc2_q] [get_bd_intf_pins rf_data_converter/m11_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m12_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc3_i] [get_bd_intf_pins rf_data_converter/m12_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m13_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc3_q] [get_bd_intf_pins rf_data_converter/m13_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m20_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc4_i] [get_bd_intf_pins rf_data_converter/m20_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m21_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc4_q] [get_bd_intf_pins rf_data_converter/m21_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m22_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc5_i] [get_bd_intf_pins rf_data_converter/m22_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m23_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc5_q] [get_bd_intf_pins rf_data_converter/m23_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m30_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc6_i] [get_bd_intf_pins rf_data_converter/m30_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m31_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc6_q] [get_bd_intf_pins rf_data_converter/m31_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m32_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc7_i] [get_bd_intf_pins rf_data_converter/m32_axis]
  connect_bd_intf_net -intf_net rf_data_converter_m33_axis [get_bd_intf_pins rf_adc_cntl_stat/s_axis_adc7_q] [get_bd_intf_pins rf_data_converter/m33_axis]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_intercon0/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_i_1 [get_bd_intf_pins loopback_fork/s_axis_ch0_i] [get_bd_intf_pins rf_adc_cntl_stat/m_axis_adc0_i]
  connect_bd_intf_net -intf_net s_axis_dac0_pd_1 [get_bd_intf_pins s_axis_dac0_pd] [get_bd_intf_pins rf_data_converter/s00_axis]
  connect_bd_intf_net -intf_net s_axis_dac1_pd_1 [get_bd_intf_pins s_axis_dac1_pd] [get_bd_intf_pins rf_data_converter/s02_axis]
  connect_bd_intf_net -intf_net s_axis_dac2_pd_1 [get_bd_intf_pins s_axis_dac2_pd] [get_bd_intf_pins rf_data_converter/s10_axis]
  connect_bd_intf_net -intf_net s_axis_dac3_pd_1 [get_bd_intf_pins s_axis_dac3_pd] [get_bd_intf_pins rf_data_converter/s12_axis]
  connect_bd_intf_net -intf_net s_axis_dac4_pd_1 [get_bd_intf_pins s_axis_dac4_pd] [get_bd_intf_pins rf_data_converter/s20_axis]
  connect_bd_intf_net -intf_net s_axis_dac5_pd_1 [get_bd_intf_pins s_axis_dac5_pd] [get_bd_intf_pins rf_data_converter/s22_axis]
  connect_bd_intf_net -intf_net s_axis_dac7_pd_1 [get_bd_intf_pins s_axis_dac7_pd] [get_bd_intf_pins rf_data_converter/s32_axis]
  connect_bd_intf_net -intf_net s_axis_dac_6_pd_1 [get_bd_intf_pins s_axis_dac_6_pd] [get_bd_intf_pins rf_data_converter/s30_axis]
  connect_bd_intf_net -intf_net timectl_reg_slice0_M_AXIS [get_bd_intf_pins rf_adc_cntl_stat/s_axis_ptctl] [get_bd_intf_pins timectl_reg_slice0/M_AXIS]
  connect_bd_intf_net -intf_net timectl_reg_slice3_M_AXIS [get_bd_intf_pins px_timestamp_gen/s_axis_ptctl] [get_bd_intf_pins timectl_reg_slice3/M_AXIS]

  # Create port connections
  connect_bd_net -net Net [get_bd_pins px_pwron_rst_0/rst_in_n] [get_bd_pins px_xpm_cdc_async_rst_0/src_arst] [get_bd_pins rf_adc_cntl_stat/rf_adc_clk_domain_man_rstn]
  connect_bd_net -net adc_clk_mmcm_clk_out1 [get_bd_pins adc_clk_mmcm/clk_out1] [get_bd_pins adc_clk_mmcm2/clk_in1]
  connect_bd_net -net adc_merge_streams_sync_rst_gen_out_n [get_bd_pins sync_rst_gen_out_n] [get_bd_pins adc_merge_streams/sync_rst_gen_out_n]
  connect_bd_net -net gate_in_0_1 [get_bd_pins gate_in] [get_bd_pins px_rfsoc_adc_syncbus/pin_gate_in]
  connect_bd_net -net pps_in_0_1 [get_bd_pins carrier_pps] [get_bd_pins px_rfsoc_adc_syncbus/pps_in]
  connect_bd_net -net px_axil_csr_0_ctl0_out [get_bd_pins adc_rst_csr/ctl0_out] [get_bd_pins px_subset_vctr_0/in_vector]
  connect_bd_net -net px_pwron_rst_0_rst_out_n [get_bd_pins dac_axis_aresetn] [get_bd_pins adc_merge_streams/s_axis_aresetn] [get_bd_pins clk_freq_cntr_adc_h/resetn] [get_bd_pins clk_freq_cntr_dac/resetn] [get_bd_pins loopback_fork/s_axis_aresetn] [get_bd_pins px_pwron_rst_0/rst_out_n] [get_bd_pins px_timestamp_gen/s_axis_aresetn] [get_bd_pins rf_data_converter/m0_axis_aresetn] [get_bd_pins rf_data_converter/m1_axis_aresetn] [get_bd_pins rf_data_converter/m2_axis_aresetn] [get_bd_pins rf_data_converter/m3_axis_aresetn] [get_bd_pins rf_data_converter/s0_axis_aresetn] [get_bd_pins rf_data_converter/s1_axis_aresetn] [get_bd_pins rf_data_converter/s2_axis_aresetn] [get_bd_pins rf_data_converter/s3_axis_aresetn] [get_bd_pins timectl_reg_slice0/aresetn] [get_bd_pins timectl_reg_slice3/aresetn]
  connect_bd_net -net px_pwron_rst_1_rst_out_n [get_bd_pins adc_axis_aresetn] [get_bd_pins adc_merge_streams/m_axis_pdti_aresetn] [get_bd_pins clk_freq_cntr_adc_l/resetn] [get_bd_pins px_pwron_rst_1/rst_out_n]
  connect_bd_net -net px_rfsoc_adc_syncbus_irq [get_bd_pins adc_sync_bus_irq] [get_bd_pins px_rfsoc_adc_syncbus/irq]
  connect_bd_net -net px_rfsoc_adc_syncbus_sysref_out [get_bd_pins px_rfsoc_adc_syncbus/sysref_out] [get_bd_pins rf_data_converter/user_sysref_adc] [get_bd_pins rf_data_converter/user_sysref_dac] [get_bd_pins sysref_period_cntr/signal_in]
  connect_bd_net -net px_subset_vctr_0_out_vector [get_bd_pins px_subset_vctr_0/out_vector] [get_bd_pins rf_data_converter/s_axi_aresetn]
  connect_bd_net -net px_timestamp_gen_irq [get_bd_pins timestamp_irq] [get_bd_pins px_timestamp_gen/irq]
  connect_bd_net -net px_xpm_cdc_async_rst_0_dest_arst [get_bd_pins px_pwron_rst_1/rst_in_n] [get_bd_pins px_xpm_cdc_async_rst_0/dest_arst]
  connect_bd_net -net ref_clk_0_1 [get_bd_pins ref_clk_0] [get_bd_pins clk_freq_cntr_adc_h/ref_clk] [get_bd_pins clk_freq_cntr_adc_l/ref_clk] [get_bd_pins clk_freq_cntr_dac/ref_clk]
  connect_bd_net -net rf_adc_cntl_stat_irq1 [get_bd_pins rf_adc_cntl_stat_irq] [get_bd_pins rf_adc_cntl_stat/irq]
  connect_bd_net -net rf_adc_cntl_stat_mmcm_clk_src_sel [get_bd_pins rf_adc_cntl_stat/mmcm_clk_src_sel] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net rf_axis_aclk_1 [get_bd_pins rf_axis_aclk] [get_bd_pins adc_clk_mmcm2/clk_in2]
  connect_bd_net -net rf_data_converter_clk_adc0 [get_bd_pins adc_axis_aclk] [get_bd_pins adc_clk_mmcm/clk_in1] [get_bd_pins adc_merge_streams/m_axis_pdti_aclk] [get_bd_pins clk_freq_cntr_adc_l/clk_in] [get_bd_pins px_pwron_rst_1/clk] [get_bd_pins px_xpm_cdc_async_rst_0/dest_clk] [get_bd_pins rf_data_converter/clk_adc0]
  connect_bd_net -net rf_data_converter_upgraded_ipi_irq [get_bd_pins rf_data_conv_irq] [get_bd_pins rf_data_converter/irq]
  connect_bd_net -net rtc_pps_in_1 [get_bd_pins rtc_pps_in] [get_bd_pins px_rfsoc_adc_syncbus/rtc_pps_in]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins adc_clk_mmcm/s_axi_aclk] [get_bd_pins adc_clk_mmcm2/s_axi_aclk] [get_bd_pins adc_merge_streams/s_axi_csr_aclk] [get_bd_pins adc_rst_csr/s_axi_csr_aclk] [get_bd_pins axi_intercon0/ACLK] [get_bd_pins axi_intercon0/M00_ACLK] [get_bd_pins axi_intercon0/M01_ACLK] [get_bd_pins axi_intercon0/M02_ACLK] [get_bd_pins axi_intercon0/M03_ACLK] [get_bd_pins axi_intercon0/M04_ACLK] [get_bd_pins axi_intercon0/M05_ACLK] [get_bd_pins axi_intercon0/M06_ACLK] [get_bd_pins axi_intercon0/M07_ACLK] [get_bd_pins axi_intercon0/M08_ACLK] [get_bd_pins axi_intercon0/M09_ACLK] [get_bd_pins axi_intercon0/M10_ACLK] [get_bd_pins axi_intercon0/M11_ACLK] [get_bd_pins axi_intercon0/S00_ACLK] [get_bd_pins clk_freq_cntr_adc_h/s_axi_csr_aclk] [get_bd_pins clk_freq_cntr_adc_l/s_axi_csr_aclk] [get_bd_pins clk_freq_cntr_dac/s_axi_csr_aclk] [get_bd_pins px_rfsoc_adc_syncbus/s_axi_csr_aclk] [get_bd_pins px_timestamp_gen/s_axi_csr_aclk] [get_bd_pins rf_adc_cntl_stat/s_axi_csr_aclk] [get_bd_pins rf_data_converter/s_axi_aclk] [get_bd_pins sysref_period_cntr/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins adc_clk_mmcm/s_axi_aresetn] [get_bd_pins adc_clk_mmcm2/s_axi_aresetn] [get_bd_pins adc_merge_streams/s_axi_csr_aresetn] [get_bd_pins adc_rst_csr/s_axi_csr_aresetn] [get_bd_pins axi_intercon0/ARESETN] [get_bd_pins axi_intercon0/M00_ARESETN] [get_bd_pins axi_intercon0/M01_ARESETN] [get_bd_pins axi_intercon0/M02_ARESETN] [get_bd_pins axi_intercon0/M03_ARESETN] [get_bd_pins axi_intercon0/M04_ARESETN] [get_bd_pins axi_intercon0/M05_ARESETN] [get_bd_pins axi_intercon0/M06_ARESETN] [get_bd_pins axi_intercon0/M07_ARESETN] [get_bd_pins axi_intercon0/M08_ARESETN] [get_bd_pins axi_intercon0/M09_ARESETN] [get_bd_pins axi_intercon0/M10_ARESETN] [get_bd_pins axi_intercon0/M11_ARESETN] [get_bd_pins axi_intercon0/S00_ARESETN] [get_bd_pins clk_freq_cntr_adc_h/s_axi_csr_aresetn] [get_bd_pins clk_freq_cntr_adc_l/s_axi_csr_aresetn] [get_bd_pins clk_freq_cntr_dac/s_axi_csr_aresetn] [get_bd_pins px_rfsoc_adc_syncbus/s_axi_csr_aresetn] [get_bd_pins px_timestamp_gen/s_axi_csr_aresetn] [get_bd_pins rf_adc_cntl_stat/s_axi_csr_aresetn] [get_bd_pins sysref_period_cntr/s_axi_csr_aresetn]
  connect_bd_net -net sync_in_0_1 [get_bd_pins sync_in] [get_bd_pins px_rfsoc_adc_syncbus/pin_sync_in]
  connect_bd_net -net sync_rst_1 [get_bd_pins adc_merge_streams/sync_rst] [get_bd_pins rf_adc_cntl_stat/pl_event_out]
  connect_bd_net -net sysref_1 [get_bd_pins sysref] [get_bd_pins px_rfsoc_adc_syncbus/pin_sysref_in]
  connect_bd_net -net trig_ttl_in_0_1 [get_bd_pins gate_trig_ttl_in] [get_bd_pins px_rfsoc_adc_syncbus/pin_trig_ttl_in]
  connect_bd_net -net usp_rf_data_converter_0_clk_dac0 [get_bd_pins dac_axis_aclk] [get_bd_pins adc_clk_mmcm2/clk_out1] [get_bd_pins adc_merge_streams/s_axis_aclk] [get_bd_pins clk_freq_cntr_adc_h/clk_in] [get_bd_pins clk_freq_cntr_dac/clk_in] [get_bd_pins loopback_fork/s_axis_aclk] [get_bd_pins px_pwron_rst_0/clk] [get_bd_pins px_rfsoc_adc_syncbus/sample_clk] [get_bd_pins px_timestamp_gen/s_axis_aclk] [get_bd_pins rf_adc_cntl_stat/adc_aclk] [get_bd_pins rf_data_converter/m0_axis_aclk] [get_bd_pins rf_data_converter/m1_axis_aclk] [get_bd_pins rf_data_converter/m2_axis_aclk] [get_bd_pins rf_data_converter/m3_axis_aclk] [get_bd_pins rf_data_converter/s0_axis_aclk] [get_bd_pins rf_data_converter/s1_axis_aclk] [get_bd_pins rf_data_converter/s2_axis_aclk] [get_bd_pins rf_data_converter/s3_axis_aclk] [get_bd_pins sysref_period_cntr/clk_in] [get_bd_pins timectl_reg_slice0/aclk] [get_bd_pins timectl_reg_slice3/aclk]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins adc_clk_mmcm2/clk_in_sel] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins adc_rst_csr/reg0_init_val] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: dac_sig_src
proc create_hier_cell_dac_sig_src { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_dac_sig_src() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch0_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch1_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch2_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch3_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch4_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch5_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch6_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch7_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_dac_ptctl

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch0_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch1_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch2_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch3_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch4_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch5_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch6_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_drfm_ch7_pd


  # Create pins
  create_bd_pin -dir O dac_chirp_irq
  create_bd_pin -dir O dac_test_sig_irq
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_aclk
  create_bd_pin -dir I s_axis_aresetn
  create_bd_pin -dir I s_axis_hr_aclk
  create_bd_pin -dir I s_axis_hr_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {0} \
   CONFIG.M01_HAS_REGSLICE {0} \
   CONFIG.M02_HAS_REGSLICE {0} \
   CONFIG.M03_HAS_REGSLICE {0} \
   CONFIG.M04_HAS_REGSLICE {0} \
   CONFIG.M05_HAS_REGSLICE {0} \
   CONFIG.M06_HAS_REGSLICE {0} \
   CONFIG.M07_HAS_REGSLICE {0} \
   CONFIG.M08_HAS_REGSLICE {0} \
   CONFIG.M09_HAS_REGSLICE {0} \
   CONFIG.M10_HAS_REGSLICE {0} \
   CONFIG.M11_HAS_REGSLICE {0} \
   CONFIG.M12_HAS_REGSLICE {0} \
   CONFIG.M13_HAS_REGSLICE {0} \
   CONFIG.M14_HAS_REGSLICE {0} \
   CONFIG.M15_HAS_REGSLICE {0} \
   CONFIG.NUM_MI {16} \
   CONFIG.S00_HAS_REGSLICE {0} \
 ] $axi_interconnect_0

  # Create instance: axi_interconnect_1, and set properties
  set axi_interconnect_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_1 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {0} \
   CONFIG.M01_HAS_REGSLICE {0} \
   CONFIG.M02_HAS_REGSLICE {0} \
   CONFIG.NUM_MI {3} \
   CONFIG.S00_HAS_REGSLICE {0} \
 ] $axi_interconnect_1

  # Create instance: axis_broadcast_0, and set properties
  set axis_broadcast_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_0

  # Create instance: axis_broadcast_1, and set properties
  set axis_broadcast_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_1

  # Create instance: axis_broadcast_2, and set properties
  set axis_broadcast_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_2

  # Create instance: axis_broadcast_3, and set properties
  set axis_broadcast_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_3

  # Create instance: axis_broadcast_4, and set properties
  set axis_broadcast_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_4

  # Create instance: axis_broadcast_5, and set properties
  set axis_broadcast_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_5

  # Create instance: axis_broadcast_6, and set properties
  set axis_broadcast_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_6

  # Create instance: axis_broadcast_7, and set properties
  set axis_broadcast_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcast_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $axis_broadcast_7

  # Create instance: axis_subset_conv_i_0, and set properties
  set axis_subset_conv_i_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_0 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_0

  # Create instance: axis_subset_conv_i_1, and set properties
  set axis_subset_conv_i_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_1 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_1

  # Create instance: axis_subset_conv_i_2, and set properties
  set axis_subset_conv_i_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_2 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_2

  # Create instance: axis_subset_conv_i_3, and set properties
  set axis_subset_conv_i_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_3 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_3

  # Create instance: axis_subset_conv_i_4, and set properties
  set axis_subset_conv_i_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_4 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_4

  # Create instance: axis_subset_conv_i_5, and set properties
  set axis_subset_conv_i_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_5 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_5

  # Create instance: axis_subset_conv_i_6, and set properties
  set axis_subset_conv_i_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_6 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_6

  # Create instance: axis_subset_conv_i_7, and set properties
  set axis_subset_conv_i_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_i_7 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[127:0]} \
 ] $axis_subset_conv_i_7

  # Create instance: axis_subset_conv_q_0, and set properties
  set axis_subset_conv_q_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_0 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_0

  # Create instance: axis_subset_conv_q_1, and set properties
  set axis_subset_conv_q_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_1 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_1

  # Create instance: axis_subset_conv_q_2, and set properties
  set axis_subset_conv_q_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_2 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_2

  # Create instance: axis_subset_conv_q_3, and set properties
  set axis_subset_conv_q_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_3 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_3

  # Create instance: axis_subset_conv_q_4, and set properties
  set axis_subset_conv_q_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_4 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_4

  # Create instance: axis_subset_conv_q_5, and set properties
  set axis_subset_conv_q_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_5 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_5

  # Create instance: axis_subset_conv_q_6, and set properties
  set axis_subset_conv_q_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_6 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_6

  # Create instance: axis_subset_conv_q_7, and set properties
  set axis_subset_conv_q_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_subset_converter:1.1 axis_subset_conv_q_7 ]
  set_property -dict [ list \
   CONFIG.M_HAS_TKEEP {0} \
   CONFIG.M_HAS_TLAST {0} \
   CONFIG.M_HAS_TREADY {0} \
   CONFIG.M_HAS_TSTRB {0} \
   CONFIG.M_TDATA_NUM_BYTES {16} \
   CONFIG.M_TDEST_WIDTH {0} \
   CONFIG.M_TID_WIDTH {0} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.S_HAS_TKEEP {0} \
   CONFIG.S_HAS_TLAST {0} \
   CONFIG.S_HAS_TREADY {0} \
   CONFIG.S_HAS_TSTRB {0} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TDEST_WIDTH {0} \
   CONFIG.S_TID_WIDTH {0} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDATA_REMAP {tdata[255:128]} \
 ] $axis_subset_conv_q_7

  # Create instance: chirp_generator
  create_hier_cell_chirp_generator $hier_obj chirp_generator

  # Create instance: const_80per_dc_level
  create_hier_cell_const_80per_dc_level $hier_obj const_80per_dc_level

  # Create instance: dac_src_switch_0, and set properties
  set dac_src_switch_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_0 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_0

  # Create instance: dac_src_switch_1, and set properties
  set dac_src_switch_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_1 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_1

  # Create instance: dac_src_switch_2, and set properties
  set dac_src_switch_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_2 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_2

  # Create instance: dac_src_switch_3, and set properties
  set dac_src_switch_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_3 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_3

  # Create instance: dac_src_switch_4, and set properties
  set dac_src_switch_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_4 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_4

  # Create instance: dac_src_switch_5, and set properties
  set dac_src_switch_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_5 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_5

  # Create instance: dac_src_switch_6, and set properties
  set dac_src_switch_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_6 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_6

  # Create instance: dac_src_switch_7, and set properties
  set dac_src_switch_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_src_switch_7 ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {2} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_src_switch_7

  # Create instance: dac_ts_src_switch, and set properties
  set dac_ts_src_switch [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_switch:1.1 dac_ts_src_switch ]
  set_property -dict [ list \
   CONFIG.DECODER_REG {0} \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.NUM_SI {3} \
   CONFIG.OUTPUT_REG {1} \
   CONFIG.ROUTING_MODE {1} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $dac_ts_src_switch

  # Create instance: ptctl_broadcast, and set properties
  set ptctl_broadcast [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 ptctl_broadcast ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M02_TDATA_REMAP {tdata[31:0]} \
   CONFIG.M_TDATA_NUM_BYTES {4} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.NUM_MI {2} \
   CONFIG.S_TDATA_NUM_BYTES {4} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $ptctl_broadcast

  # Create instance: px_rf_dac_fmtr_0, and set properties
  set px_rf_dac_fmtr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_0 ]

  # Create instance: px_rf_dac_fmtr_1, and set properties
  set px_rf_dac_fmtr_1 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_1 ]

  # Create instance: px_rf_dac_fmtr_2, and set properties
  set px_rf_dac_fmtr_2 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_2 ]

  # Create instance: px_rf_dac_fmtr_3, and set properties
  set px_rf_dac_fmtr_3 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_3 ]

  # Create instance: px_rf_dac_fmtr_4, and set properties
  set px_rf_dac_fmtr_4 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_4 ]

  # Create instance: px_rf_dac_fmtr_5, and set properties
  set px_rf_dac_fmtr_5 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_5 ]

  # Create instance: px_rf_dac_fmtr_6, and set properties
  set px_rf_dac_fmtr_6 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_6 ]

  # Create instance: px_rf_dac_fmtr_7, and set properties
  set px_rf_dac_fmtr_7 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_rf_dac_fmtr:1.0 px_rf_dac_fmtr_7 ]

  # Create instance: test_sig_generator
  create_hier_cell_test_sig_generator $hier_obj test_sig_generator

  # Create instance: ts_broadcast, and set properties
  set ts_broadcast [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 ts_broadcast ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.M00_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M01_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M02_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M03_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M04_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M05_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M06_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M07_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M08_TDATA_REMAP {tdata[255:0]} \
   CONFIG.M_TDATA_NUM_BYTES {32} \
   CONFIG.M_TUSER_WIDTH {0} \
   CONFIG.NUM_MI {8} \
   CONFIG.S_TDATA_NUM_BYTES {32} \
   CONFIG.S_TUSER_WIDTH {0} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
 ] $ts_broadcast

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins px_rf_dac_fmtr_6/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins px_rf_dac_fmtr_7/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins dac_src_switch_0/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M03_AXI [get_bd_intf_pins axi_interconnect_0/M03_AXI] [get_bd_intf_pins dac_src_switch_1/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M04_AXI [get_bd_intf_pins axi_interconnect_0/M04_AXI] [get_bd_intf_pins dac_src_switch_2/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M05_AXI [get_bd_intf_pins axi_interconnect_0/M05_AXI] [get_bd_intf_pins dac_src_switch_3/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M06_AXI [get_bd_intf_pins axi_interconnect_0/M06_AXI] [get_bd_intf_pins dac_src_switch_4/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M07_AXI [get_bd_intf_pins axi_interconnect_0/M07_AXI] [get_bd_intf_pins dac_src_switch_5/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M08_AXI [get_bd_intf_pins axi_interconnect_0/M08_AXI] [get_bd_intf_pins dac_src_switch_6/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M09_AXI [get_bd_intf_pins axi_interconnect_0/M09_AXI] [get_bd_intf_pins dac_src_switch_7/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_0_M10_AXI [get_bd_intf_pins axi_interconnect_0/M10_AXI] [get_bd_intf_pins px_rf_dac_fmtr_0/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M11_AXI [get_bd_intf_pins axi_interconnect_0/M11_AXI] [get_bd_intf_pins px_rf_dac_fmtr_1/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M12_AXI [get_bd_intf_pins axi_interconnect_0/M12_AXI] [get_bd_intf_pins px_rf_dac_fmtr_2/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M13_AXI [get_bd_intf_pins axi_interconnect_0/M13_AXI] [get_bd_intf_pins px_rf_dac_fmtr_3/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M14_AXI [get_bd_intf_pins axi_interconnect_0/M14_AXI] [get_bd_intf_pins px_rf_dac_fmtr_4/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_0_M15_AXI [get_bd_intf_pins axi_interconnect_0/M15_AXI] [get_bd_intf_pins px_rf_dac_fmtr_5/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_1_M01_AXI [get_bd_intf_pins axi_interconnect_1/M01_AXI] [get_bd_intf_pins chirp_generator/s_axi_csr]
  connect_bd_intf_net -intf_net axi_interconnect_1_M02_AXI [get_bd_intf_pins axi_interconnect_1/M02_AXI] [get_bd_intf_pins dac_ts_src_switch/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axis_broadcast_0_M00_AXIS [get_bd_intf_pins axis_broadcast_0/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_0_M01_AXIS [get_bd_intf_pins axis_broadcast_0/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_1_M00_AXIS [get_bd_intf_pins axis_broadcast_1/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_1_M01_AXIS [get_bd_intf_pins axis_broadcast_1/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M00_AXIS [get_bd_intf_pins axis_broadcast_2/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_2_M01_AXIS [get_bd_intf_pins axis_broadcast_2/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_2/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M00_AXIS [get_bd_intf_pins axis_broadcast_3/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_3/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_3_M01_AXIS [get_bd_intf_pins axis_broadcast_3/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_3/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_4_M00_AXIS [get_bd_intf_pins axis_broadcast_4/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_4/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_4_M01_AXIS [get_bd_intf_pins axis_broadcast_4/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_4/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_5_M00_AXIS [get_bd_intf_pins axis_broadcast_5/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_5/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_5_M01_AXIS [get_bd_intf_pins axis_broadcast_5/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_5/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_6_M00_AXIS [get_bd_intf_pins axis_broadcast_6/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_6/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_6_M01_AXIS [get_bd_intf_pins axis_broadcast_6/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_6/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_7_M00_AXIS [get_bd_intf_pins axis_broadcast_7/M00_AXIS] [get_bd_intf_pins axis_subset_conv_i_7/S_AXIS]
  connect_bd_intf_net -intf_net axis_broadcast_7_M01_AXIS [get_bd_intf_pins axis_broadcast_7/M01_AXIS] [get_bd_intf_pins axis_subset_conv_q_7/S_AXIS]
  connect_bd_intf_net -intf_net axis_subset_conv_i_0_M_AXIS [get_bd_intf_pins axis_subset_conv_i_0/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_0/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_1_M_AXIS [get_bd_intf_pins axis_subset_conv_i_1/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_1/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_2_M_AXIS [get_bd_intf_pins axis_subset_conv_i_2/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_2/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_3_M_AXIS [get_bd_intf_pins axis_subset_conv_i_3/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_3/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_4_M_AXIS [get_bd_intf_pins axis_subset_conv_i_4/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_4/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_5_M_AXIS [get_bd_intf_pins axis_subset_conv_i_5/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_5/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_6_M_AXIS [get_bd_intf_pins axis_subset_conv_i_6/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_6/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_i_7_M_AXIS [get_bd_intf_pins axis_subset_conv_i_7/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_7/s_axis_i]
  connect_bd_intf_net -intf_net axis_subset_conv_q_0_M_AXIS [get_bd_intf_pins axis_subset_conv_q_0/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_0/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_1_M_AXIS [get_bd_intf_pins axis_subset_conv_q_1/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_1/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_2_M_AXIS [get_bd_intf_pins axis_subset_conv_q_2/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_2/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_3_M_AXIS [get_bd_intf_pins axis_subset_conv_q_3/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_3/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_4_M_AXIS [get_bd_intf_pins axis_subset_conv_q_4/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_4/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_5_M_AXIS [get_bd_intf_pins axis_subset_conv_q_5/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_5/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_6_M_AXIS [get_bd_intf_pins axis_subset_conv_q_6/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_6/s_axis_q]
  connect_bd_intf_net -intf_net axis_subset_conv_q_7_M_AXIS [get_bd_intf_pins axis_subset_conv_q_7/M_AXIS] [get_bd_intf_pins px_rf_dac_fmtr_7/s_axis_q]
  connect_bd_intf_net -intf_net chirp_broadcast1_M00_AXIS [get_bd_intf_pins dac_src_switch_0/S00_AXIS] [get_bd_intf_pins ts_broadcast/M00_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M02_AXIS [get_bd_intf_pins dac_src_switch_2/S00_AXIS] [get_bd_intf_pins ts_broadcast/M02_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M03_AXIS [get_bd_intf_pins dac_src_switch_3/S00_AXIS] [get_bd_intf_pins ts_broadcast/M03_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M04_AXIS [get_bd_intf_pins dac_src_switch_4/S00_AXIS] [get_bd_intf_pins ts_broadcast/M04_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M05_AXIS [get_bd_intf_pins dac_src_switch_5/S00_AXIS] [get_bd_intf_pins ts_broadcast/M05_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M06_AXIS [get_bd_intf_pins dac_src_switch_6/S00_AXIS] [get_bd_intf_pins ts_broadcast/M06_AXIS]
  connect_bd_intf_net -intf_net chirp_broadcast1_M07_AXIS [get_bd_intf_pins dac_src_switch_7/S00_AXIS] [get_bd_intf_pins ts_broadcast/M07_AXIS]
  connect_bd_intf_net -intf_net chirp_generator_M_AXIS [get_bd_intf_pins chirp_generator/m_axis_chirp] [get_bd_intf_pins dac_ts_src_switch/S01_AXIS]
  connect_bd_intf_net -intf_net const_80per_dc_level_m_axis [get_bd_intf_pins const_80per_dc_level/m_axis] [get_bd_intf_pins dac_ts_src_switch/S02_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_0_M00_AXIS [get_bd_intf_pins axis_broadcast_0/S_AXIS] [get_bd_intf_pins dac_src_switch_0/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_1_M00_AXIS [get_bd_intf_pins axis_broadcast_1/S_AXIS] [get_bd_intf_pins dac_src_switch_1/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_2_M00_AXIS [get_bd_intf_pins axis_broadcast_2/S_AXIS] [get_bd_intf_pins dac_src_switch_2/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_3_M00_AXIS [get_bd_intf_pins axis_broadcast_3/S_AXIS] [get_bd_intf_pins dac_src_switch_3/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_4_M00_AXIS [get_bd_intf_pins axis_broadcast_4/S_AXIS] [get_bd_intf_pins dac_src_switch_4/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_5_M00_AXIS [get_bd_intf_pins axis_broadcast_5/S_AXIS] [get_bd_intf_pins dac_src_switch_5/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_6_M00_AXIS [get_bd_intf_pins axis_broadcast_6/S_AXIS] [get_bd_intf_pins dac_src_switch_6/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_7_M00_AXIS [get_bd_intf_pins axis_broadcast_7/S_AXIS] [get_bd_intf_pins dac_src_switch_7/M00_AXIS]
  connect_bd_intf_net -intf_net dac_src_switch_8_M00_AXIS [get_bd_intf_pins dac_ts_src_switch/M00_AXIS] [get_bd_intf_pins ts_broadcast/S_AXIS]
  connect_bd_intf_net -intf_net ptctl_broadcast_M01_AXIS [get_bd_intf_pins chirp_generator/s_axis_ptctl] [get_bd_intf_pins ptctl_broadcast/M01_AXIS]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_0_m_axis [get_bd_intf_pins m_axis_dac_ch0_pd] [get_bd_intf_pins px_rf_dac_fmtr_0/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_1_m_axis [get_bd_intf_pins m_axis_dac_ch1_pd] [get_bd_intf_pins px_rf_dac_fmtr_1/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_2_m_axis [get_bd_intf_pins m_axis_dac_ch2_pd] [get_bd_intf_pins px_rf_dac_fmtr_2/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_3_m_axis [get_bd_intf_pins m_axis_dac_ch3_pd] [get_bd_intf_pins px_rf_dac_fmtr_3/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_4_m_axis [get_bd_intf_pins m_axis_dac_ch4_pd] [get_bd_intf_pins px_rf_dac_fmtr_4/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_5_m_axis [get_bd_intf_pins m_axis_dac_ch5_pd] [get_bd_intf_pins px_rf_dac_fmtr_5/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_6_m_axis [get_bd_intf_pins m_axis_dac_ch6_pd] [get_bd_intf_pins px_rf_dac_fmtr_6/m_axis]
  connect_bd_intf_net -intf_net px_rf_dac_fmtr_7_m_axis [get_bd_intf_pins m_axis_dac_ch7_pd] [get_bd_intf_pins px_rf_dac_fmtr_7/m_axis]
  connect_bd_intf_net -intf_net s_axi_csr1_1 [get_bd_intf_pins s_axi_csr1] [get_bd_intf_pins axi_interconnect_1/S00_AXI]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net s_axi_csr_2 [get_bd_intf_pins axi_interconnect_1/M00_AXI] [get_bd_intf_pins test_sig_generator/s_axi_csr]
  connect_bd_intf_net -intf_net s_axis_dac_ptctl_1 [get_bd_intf_pins s_axis_dac_ptctl] [get_bd_intf_pins ptctl_broadcast/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch0_pd_1 [get_bd_intf_pins s_axis_drfm_ch0_pd] [get_bd_intf_pins dac_src_switch_0/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch1_pd_1 [get_bd_intf_pins s_axis_drfm_ch1_pd] [get_bd_intf_pins dac_src_switch_1/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch2_pd_1 [get_bd_intf_pins s_axis_drfm_ch2_pd] [get_bd_intf_pins dac_src_switch_2/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch3_pd_1 [get_bd_intf_pins s_axis_drfm_ch3_pd] [get_bd_intf_pins dac_src_switch_3/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch4_pd_1 [get_bd_intf_pins s_axis_drfm_ch4_pd] [get_bd_intf_pins dac_src_switch_4/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch5_pd_1 [get_bd_intf_pins s_axis_drfm_ch5_pd] [get_bd_intf_pins dac_src_switch_5/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch6_pd_1 [get_bd_intf_pins s_axis_drfm_ch6_pd] [get_bd_intf_pins dac_src_switch_6/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_drfm_ch7_pd_1 [get_bd_intf_pins s_axis_drfm_ch7_pd] [get_bd_intf_pins dac_src_switch_7/S01_AXIS]
  connect_bd_intf_net -intf_net s_axis_ptctl_1 [get_bd_intf_pins ptctl_broadcast/M00_AXIS] [get_bd_intf_pins test_sig_generator/s_axis_ptctl]
  connect_bd_intf_net -intf_net test_sig_generator_m_axis [get_bd_intf_pins dac_ts_src_switch/S00_AXIS] [get_bd_intf_pins test_sig_generator/m_axis_ts]
  connect_bd_intf_net -intf_net ts_broadcast_M01_AXIS [get_bd_intf_pins dac_src_switch_1/S00_AXIS] [get_bd_intf_pins ts_broadcast/M01_AXIS]

  # Create port connections
  connect_bd_net -net chirp_generator_dac_chirp_irq [get_bd_pins dac_chirp_irq] [get_bd_pins chirp_generator/dac_chirp_irq]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins axi_interconnect_0/M03_ACLK] [get_bd_pins axi_interconnect_0/M04_ACLK] [get_bd_pins axi_interconnect_0/M05_ACLK] [get_bd_pins axi_interconnect_0/M06_ACLK] [get_bd_pins axi_interconnect_0/M07_ACLK] [get_bd_pins axi_interconnect_0/M08_ACLK] [get_bd_pins axi_interconnect_0/M09_ACLK] [get_bd_pins axi_interconnect_0/M10_ACLK] [get_bd_pins axi_interconnect_0/M11_ACLK] [get_bd_pins axi_interconnect_0/M12_ACLK] [get_bd_pins axi_interconnect_0/M13_ACLK] [get_bd_pins axi_interconnect_0/M14_ACLK] [get_bd_pins axi_interconnect_0/M15_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_1/ACLK] [get_bd_pins axi_interconnect_1/M00_ACLK] [get_bd_pins axi_interconnect_1/M01_ACLK] [get_bd_pins axi_interconnect_1/M02_ACLK] [get_bd_pins axi_interconnect_1/S00_ACLK] [get_bd_pins chirp_generator/s_axi_csr_aclk] [get_bd_pins dac_src_switch_0/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_1/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_2/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_3/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_4/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_5/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_6/s_axi_ctrl_aclk] [get_bd_pins dac_src_switch_7/s_axi_ctrl_aclk] [get_bd_pins dac_ts_src_switch/s_axi_ctrl_aclk] [get_bd_pins px_rf_dac_fmtr_0/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_1/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_2/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_3/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_4/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_5/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_6/s_axi_csr_aclk] [get_bd_pins px_rf_dac_fmtr_7/s_axi_csr_aclk] [get_bd_pins test_sig_generator/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins axi_interconnect_0/M03_ARESETN] [get_bd_pins axi_interconnect_0/M04_ARESETN] [get_bd_pins axi_interconnect_0/M05_ARESETN] [get_bd_pins axi_interconnect_0/M06_ARESETN] [get_bd_pins axi_interconnect_0/M07_ARESETN] [get_bd_pins axi_interconnect_0/M08_ARESETN] [get_bd_pins axi_interconnect_0/M09_ARESETN] [get_bd_pins axi_interconnect_0/M10_ARESETN] [get_bd_pins axi_interconnect_0/M11_ARESETN] [get_bd_pins axi_interconnect_0/M12_ARESETN] [get_bd_pins axi_interconnect_0/M13_ARESETN] [get_bd_pins axi_interconnect_0/M14_ARESETN] [get_bd_pins axi_interconnect_0/M15_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_1/ARESETN] [get_bd_pins axi_interconnect_1/M00_ARESETN] [get_bd_pins axi_interconnect_1/M01_ARESETN] [get_bd_pins axi_interconnect_1/M02_ARESETN] [get_bd_pins axi_interconnect_1/S00_ARESETN] [get_bd_pins chirp_generator/s_axi_csr_aresetn] [get_bd_pins dac_src_switch_0/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_1/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_2/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_3/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_4/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_5/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_6/s_axi_ctrl_aresetn] [get_bd_pins dac_src_switch_7/s_axi_ctrl_aresetn] [get_bd_pins dac_ts_src_switch/s_axi_ctrl_aresetn] [get_bd_pins px_rf_dac_fmtr_0/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_1/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_2/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_3/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_4/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_5/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_6/s_axi_csr_aresetn] [get_bd_pins px_rf_dac_fmtr_7/s_axi_csr_aresetn] [get_bd_pins test_sig_generator/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_broadcast_0/aclk] [get_bd_pins axis_broadcast_1/aclk] [get_bd_pins axis_broadcast_2/aclk] [get_bd_pins axis_broadcast_3/aclk] [get_bd_pins axis_broadcast_4/aclk] [get_bd_pins axis_broadcast_5/aclk] [get_bd_pins axis_broadcast_6/aclk] [get_bd_pins axis_broadcast_7/aclk] [get_bd_pins axis_subset_conv_i_0/aclk] [get_bd_pins axis_subset_conv_i_1/aclk] [get_bd_pins axis_subset_conv_i_2/aclk] [get_bd_pins axis_subset_conv_i_3/aclk] [get_bd_pins axis_subset_conv_i_4/aclk] [get_bd_pins axis_subset_conv_i_5/aclk] [get_bd_pins axis_subset_conv_i_6/aclk] [get_bd_pins axis_subset_conv_i_7/aclk] [get_bd_pins axis_subset_conv_q_0/aclk] [get_bd_pins axis_subset_conv_q_1/aclk] [get_bd_pins axis_subset_conv_q_2/aclk] [get_bd_pins axis_subset_conv_q_3/aclk] [get_bd_pins axis_subset_conv_q_4/aclk] [get_bd_pins axis_subset_conv_q_5/aclk] [get_bd_pins axis_subset_conv_q_6/aclk] [get_bd_pins axis_subset_conv_q_7/aclk] [get_bd_pins chirp_generator/s_axis_aclk] [get_bd_pins const_80per_dc_level/axis_aclk] [get_bd_pins dac_src_switch_0/aclk] [get_bd_pins dac_src_switch_1/aclk] [get_bd_pins dac_src_switch_2/aclk] [get_bd_pins dac_src_switch_3/aclk] [get_bd_pins dac_src_switch_4/aclk] [get_bd_pins dac_src_switch_5/aclk] [get_bd_pins dac_src_switch_6/aclk] [get_bd_pins dac_src_switch_7/aclk] [get_bd_pins dac_ts_src_switch/aclk] [get_bd_pins px_rf_dac_fmtr_0/axis_aclk] [get_bd_pins px_rf_dac_fmtr_1/axis_aclk] [get_bd_pins px_rf_dac_fmtr_2/axis_aclk] [get_bd_pins px_rf_dac_fmtr_3/axis_aclk] [get_bd_pins px_rf_dac_fmtr_4/axis_aclk] [get_bd_pins px_rf_dac_fmtr_5/axis_aclk] [get_bd_pins px_rf_dac_fmtr_6/axis_aclk] [get_bd_pins px_rf_dac_fmtr_7/axis_aclk] [get_bd_pins test_sig_generator/s_axis_aclk] [get_bd_pins ts_broadcast/aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_broadcast_0/aresetn] [get_bd_pins axis_broadcast_1/aresetn] [get_bd_pins axis_broadcast_2/aresetn] [get_bd_pins axis_broadcast_3/aresetn] [get_bd_pins axis_broadcast_4/aresetn] [get_bd_pins axis_broadcast_5/aresetn] [get_bd_pins axis_broadcast_6/aresetn] [get_bd_pins axis_broadcast_7/aresetn] [get_bd_pins axis_subset_conv_i_0/aresetn] [get_bd_pins axis_subset_conv_i_1/aresetn] [get_bd_pins axis_subset_conv_i_2/aresetn] [get_bd_pins axis_subset_conv_i_3/aresetn] [get_bd_pins axis_subset_conv_i_4/aresetn] [get_bd_pins axis_subset_conv_i_5/aresetn] [get_bd_pins axis_subset_conv_i_6/aresetn] [get_bd_pins axis_subset_conv_i_7/aresetn] [get_bd_pins axis_subset_conv_q_0/aresetn] [get_bd_pins axis_subset_conv_q_1/aresetn] [get_bd_pins axis_subset_conv_q_2/aresetn] [get_bd_pins axis_subset_conv_q_3/aresetn] [get_bd_pins axis_subset_conv_q_4/aresetn] [get_bd_pins axis_subset_conv_q_5/aresetn] [get_bd_pins axis_subset_conv_q_6/aresetn] [get_bd_pins axis_subset_conv_q_7/aresetn] [get_bd_pins chirp_generator/s_axis_aresetn] [get_bd_pins dac_src_switch_0/aresetn] [get_bd_pins dac_src_switch_1/aresetn] [get_bd_pins dac_src_switch_2/aresetn] [get_bd_pins dac_src_switch_3/aresetn] [get_bd_pins dac_src_switch_4/aresetn] [get_bd_pins dac_src_switch_5/aresetn] [get_bd_pins dac_src_switch_6/aresetn] [get_bd_pins dac_src_switch_7/aresetn] [get_bd_pins dac_ts_src_switch/aresetn] [get_bd_pins px_rf_dac_fmtr_0/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_1/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_2/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_3/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_4/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_5/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_6/axis_aresetn] [get_bd_pins px_rf_dac_fmtr_7/axis_aresetn] [get_bd_pins test_sig_generator/s_axis_aresetn] [get_bd_pins ts_broadcast/aresetn]
  connect_bd_net -net s_axis_hr_aclk_1 [get_bd_pins s_axis_hr_aclk] [get_bd_pins chirp_generator/s_axis_hr_aclk] [get_bd_pins ptctl_broadcast/aclk] [get_bd_pins test_sig_generator/s_axis_hr_aclk]
  connect_bd_net -net s_axis_hr_aresetn_1 [get_bd_pins s_axis_hr_aresetn] [get_bd_pins chirp_generator/s_axis_hr_aresetn] [get_bd_pins ptctl_broadcast/aresetn] [get_bd_pins test_sig_generator/s_axis_hr_aresetn]
  connect_bd_net -net test_sig_generator_irq [get_bd_pins dac_test_sig_irq] [get_bd_pins test_sig_generator/irq]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: adc_data_acq
proc create_hier_cell_adc_data_acq { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_adc_data_acq() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 m_axi_fpd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_100ge_ch0123_ppld

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_100ge_ch4567_ppld

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_pdti

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_pdti


  # Create pins
  create_bd_pin -dir I axi_fpd_aclk
  create_bd_pin -dir I axi_fpd_aresetn
  create_bd_pin -dir O ch0_flowctl_irq
  create_bd_pin -dir O ch0_ufifo_irq
  create_bd_pin -dir O ch1_flowctl_irq
  create_bd_pin -dir O ch1_ufifo_irq
  create_bd_pin -dir O ch2_flowctl_irq
  create_bd_pin -dir O ch2_ufifo_irq
  create_bd_pin -dir O ch3_flowctl_irq
  create_bd_pin -dir O ch3_ufifo_irq
  create_bd_pin -dir O ch4_flowctl_irq
  create_bd_pin -dir O ch4_ufifo_irq
  create_bd_pin -dir O ch5_flowctl_irq
  create_bd_pin -dir O ch5_ufifo_irq
  create_bd_pin -dir O ch6_flowctl_irq
  create_bd_pin -dir O ch6_ufifo_irq
  create_bd_pin -dir O ch7_flowctl_irq
  create_bd_pin -dir O ch7_ufifo_irq
  create_bd_pin -dir O -from 7 -to 0 dma_irq_vctr
  create_bd_pin -dir I eth100ge_ch0123_fifo_aresetn
  create_bd_pin -dir I -from 16 -to 0 eth100ge_ch0123_pkt_size
  create_bd_pin -dir I eth100ge_ch0123_pkt_size_en
  create_bd_pin -dir I eth100ge_ch0123_txclk
  create_bd_pin -dir I eth100ge_ch4567_fifo_aresetn
  create_bd_pin -dir I -from 16 -to 0 eth100ge_ch4567_pkt_size
  create_bd_pin -dir I eth100ge_ch4567_pkt_size_en
  create_bd_pin -dir I eth100ge_ch4567_txclk
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_pdti_aclk
  create_bd_pin -dir I s_axis_pdti_aresetn

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: ch0123_adc_acq
  create_hier_cell_ch0123_adc_acq $hier_obj ch0123_adc_acq

  # Create instance: ch4567_adc_acq
  create_hier_cell_ch4567_adc_acq $hier_obj ch4567_adc_acq

  # Create instance: csr_axi_intercon, and set properties
  set csr_axi_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 csr_axi_intercon ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {3} \
   CONFIG.M01_HAS_REGSLICE {3} \
   CONFIG.S00_HAS_REGSLICE {1} \
 ] $csr_axi_intercon

  # Create instance: dma_irq_concat, and set properties
  set dma_irq_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 dma_irq_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.IN4_WIDTH {1} \
   CONFIG.IN5_WIDTH {1} \
   CONFIG.IN6_WIDTH {1} \
   CONFIG.IN7_WIDTH {1} \
   CONFIG.NUM_PORTS {8} \
 ] $dma_irq_concat

  # Create interface connections
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins ch0123_adc_acq/s_axi_csr] [get_bd_intf_pins csr_axi_intercon/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI1 [get_bd_intf_pins m_axi_fpd] [get_bd_intf_pins axi_interconnect_0/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M01_AXI [get_bd_intf_pins ch4567_adc_acq/s_axi_csr] [get_bd_intf_pins csr_axi_intercon/M01_AXI]
  connect_bd_intf_net -intf_net ch0123_adc_acq_m_axi_fpd [get_bd_intf_pins axi_interconnect_0/S00_AXI] [get_bd_intf_pins ch0123_adc_acq/m_axi_fpd]
  connect_bd_intf_net -intf_net ch0123_adc_acq_m_axis_100ge_ch0123_ppld [get_bd_intf_pins m_axis_100ge_ch0123_ppld] [get_bd_intf_pins ch0123_adc_acq/m_axis_100ge_ch0123_ppld]
  connect_bd_intf_net -intf_net ch4567_adc_acq_m_axi_fpd [get_bd_intf_pins axi_interconnect_0/S01_AXI] [get_bd_intf_pins ch4567_adc_acq/m_axi_fpd]
  connect_bd_intf_net -intf_net ch4567_adc_acq_m_axis_100ge_ch4567_ppld [get_bd_intf_pins m_axis_100ge_ch4567_ppld] [get_bd_intf_pins ch4567_adc_acq/m_axis_100ge_ch4567_ppld]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins csr_axi_intercon/S00_AXI]
  connect_bd_intf_net -intf_net s_axis_ch0_pdti_1 [get_bd_intf_pins s_axis_ch0_pdti] [get_bd_intf_pins ch0123_adc_acq/s_axis_ch0_pdti]
  connect_bd_intf_net -intf_net s_axis_ch1_pdti_1 [get_bd_intf_pins s_axis_ch1_pdti] [get_bd_intf_pins ch0123_adc_acq/s_axis_ch1_pdti]
  connect_bd_intf_net -intf_net s_axis_ch2_pdti_1 [get_bd_intf_pins s_axis_ch2_pdti] [get_bd_intf_pins ch0123_adc_acq/s_axis_ch2_pdti]
  connect_bd_intf_net -intf_net s_axis_ch3_pdti_1 [get_bd_intf_pins s_axis_ch3_pdti] [get_bd_intf_pins ch0123_adc_acq/s_axis_ch3_pdti]
  connect_bd_intf_net -intf_net s_axis_ch4_pdti_1 [get_bd_intf_pins s_axis_ch4_pdti] [get_bd_intf_pins ch4567_adc_acq/s_axis_ch0_pdti]
  connect_bd_intf_net -intf_net s_axis_ch5_pdti_1 [get_bd_intf_pins s_axis_ch5_pdti] [get_bd_intf_pins ch4567_adc_acq/s_axis_ch1_pdti]
  connect_bd_intf_net -intf_net s_axis_ch6_pdti_1 [get_bd_intf_pins s_axis_ch6_pdti] [get_bd_intf_pins ch4567_adc_acq/s_axis_ch2_pdti]
  connect_bd_intf_net -intf_net s_axis_ch7_pdti_1 [get_bd_intf_pins s_axis_ch7_pdti] [get_bd_intf_pins ch4567_adc_acq/s_axis_ch3_pdti]

  # Create port connections
  connect_bd_net -net axi_fpd_aclk_1 [get_bd_pins axi_fpd_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins axi_interconnect_0/S01_ACLK] [get_bd_pins ch0123_adc_acq/axi_fpd_aclk] [get_bd_pins ch4567_adc_acq/axi_fpd_aclk]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins axi_fpd_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins axi_interconnect_0/S01_ARESETN] [get_bd_pins ch0123_adc_acq/axi_fpd_aresetn] [get_bd_pins ch4567_adc_acq/axi_fpd_aresetn]
  connect_bd_net -net ch0123_adc_acq_adc_dma_0_irq [get_bd_pins ch0123_adc_acq/adc_dma_0_irq] [get_bd_pins dma_irq_concat/In0]
  connect_bd_net -net ch0123_adc_acq_adc_dma_1_irq [get_bd_pins ch0123_adc_acq/adc_dma_1_irq] [get_bd_pins dma_irq_concat/In1]
  connect_bd_net -net ch0123_adc_acq_adc_dma_2_irq [get_bd_pins ch0123_adc_acq/adc_dma_2_irq] [get_bd_pins dma_irq_concat/In2]
  connect_bd_net -net ch0123_adc_acq_adc_dma_3_irq [get_bd_pins ch0123_adc_acq/adc_dma_3_irq] [get_bd_pins dma_irq_concat/In3]
  connect_bd_net -net ch0123_adc_acq_ch0_flowctl_irq [get_bd_pins ch0_flowctl_irq] [get_bd_pins ch0123_adc_acq/ch0_flowctl_irq]
  connect_bd_net -net ch0123_adc_acq_ch0_ufifo_irq [get_bd_pins ch0_ufifo_irq] [get_bd_pins ch0123_adc_acq/ch0_ufifo_irq]
  connect_bd_net -net ch0123_adc_acq_ch1_flowctl_irq [get_bd_pins ch1_flowctl_irq] [get_bd_pins ch0123_adc_acq/ch1_flowctl_irq]
  connect_bd_net -net ch0123_adc_acq_ch1_ufifo_irq [get_bd_pins ch1_ufifo_irq] [get_bd_pins ch0123_adc_acq/ch1_ufifo_irq]
  connect_bd_net -net ch0123_adc_acq_ch2_flowctl_irq [get_bd_pins ch2_flowctl_irq] [get_bd_pins ch0123_adc_acq/ch2_flowctl_irq]
  connect_bd_net -net ch0123_adc_acq_ch2_ufifo_irq [get_bd_pins ch2_ufifo_irq] [get_bd_pins ch0123_adc_acq/ch2_ufifo_irq]
  connect_bd_net -net ch0123_adc_acq_ch3_flowctl_irq [get_bd_pins ch3_flowctl_irq] [get_bd_pins ch0123_adc_acq/ch3_flowctl_irq]
  connect_bd_net -net ch0123_adc_acq_ch3_ufifo_irq [get_bd_pins ch3_ufifo_irq] [get_bd_pins ch0123_adc_acq/ch3_ufifo_irq]
  connect_bd_net -net ch4567_adc_acq_adc_dma_4_irq [get_bd_pins ch4567_adc_acq/adc_dma_4_irq] [get_bd_pins dma_irq_concat/In4]
  connect_bd_net -net ch4567_adc_acq_adc_dma_5_irq [get_bd_pins ch4567_adc_acq/adc_dma_5_irq] [get_bd_pins dma_irq_concat/In5]
  connect_bd_net -net ch4567_adc_acq_adc_dma_6_irq [get_bd_pins ch4567_adc_acq/adc_dma_6_irq] [get_bd_pins dma_irq_concat/In6]
  connect_bd_net -net ch4567_adc_acq_adc_dma_7_irq [get_bd_pins ch4567_adc_acq/adc_dma_7_irq] [get_bd_pins dma_irq_concat/In7]
  connect_bd_net -net ch4567_adc_acq_ch4_flowctl_irq [get_bd_pins ch4_flowctl_irq] [get_bd_pins ch4567_adc_acq/ch4_flowctl_irq]
  connect_bd_net -net ch4567_adc_acq_ch4_ufifo_irq [get_bd_pins ch4_ufifo_irq] [get_bd_pins ch4567_adc_acq/ch4_ufifo_irq]
  connect_bd_net -net ch4567_adc_acq_ch5_flowctl_irq [get_bd_pins ch5_flowctl_irq] [get_bd_pins ch4567_adc_acq/ch5_flowctl_irq]
  connect_bd_net -net ch4567_adc_acq_ch5_ufifo_irq [get_bd_pins ch5_ufifo_irq] [get_bd_pins ch4567_adc_acq/ch5_ufifo_irq]
  connect_bd_net -net ch4567_adc_acq_ch6_flowctl_irq [get_bd_pins ch6_flowctl_irq] [get_bd_pins ch4567_adc_acq/ch6_flowctl_irq]
  connect_bd_net -net ch4567_adc_acq_ch6_ufifo_irq [get_bd_pins ch6_ufifo_irq] [get_bd_pins ch4567_adc_acq/ch6_ufifo_irq]
  connect_bd_net -net ch4567_adc_acq_ch7_flowctl_irq [get_bd_pins ch7_flowctl_irq] [get_bd_pins ch4567_adc_acq/ch7_flowctl_irq]
  connect_bd_net -net ch4567_adc_acq_ch7_ufifo_irq [get_bd_pins ch7_ufifo_irq] [get_bd_pins ch4567_adc_acq/ch7_ufifo_irq]
  connect_bd_net -net eth100ge_ch0123_fifo_aresetn_1 [get_bd_pins eth100ge_ch0123_fifo_aresetn] [get_bd_pins ch0123_adc_acq/eth_fifo_aresetn]
  connect_bd_net -net eth100ge_ch0123_pkt_size_1 [get_bd_pins eth100ge_ch0123_pkt_size] [get_bd_pins ch0123_adc_acq/eth_pkt_size]
  connect_bd_net -net eth100ge_ch0123_pkt_size_en_1 [get_bd_pins eth100ge_ch0123_pkt_size_en] [get_bd_pins ch0123_adc_acq/eth_pkt_size_en]
  connect_bd_net -net eth100ge_ch4567_fifo_aresetn_1 [get_bd_pins eth100ge_ch4567_fifo_aresetn] [get_bd_pins ch4567_adc_acq/eth_fifo_aresetn]
  connect_bd_net -net eth100ge_ch4567_pkt_size_1 [get_bd_pins eth100ge_ch4567_pkt_size] [get_bd_pins ch4567_adc_acq/eth_pkt_size]
  connect_bd_net -net eth100ge_ch4567_pkt_size_en_1 [get_bd_pins eth100ge_ch4567_pkt_size_en] [get_bd_pins ch4567_adc_acq/eth_pkt_size_en]
  connect_bd_net -net eth100ge_ch4567_txclk_1 [get_bd_pins eth100ge_ch4567_txclk] [get_bd_pins ch4567_adc_acq/eth_txclk]
  connect_bd_net -net eth_txclk_1 [get_bd_pins eth100ge_ch0123_txclk] [get_bd_pins ch0123_adc_acq/eth_txclk]
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins ch0123_adc_acq/s_axi_csr_aclk] [get_bd_pins ch4567_adc_acq/s_axi_csr_aclk] [get_bd_pins csr_axi_intercon/ACLK] [get_bd_pins csr_axi_intercon/M00_ACLK] [get_bd_pins csr_axi_intercon/M01_ACLK] [get_bd_pins csr_axi_intercon/S00_ACLK]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins ch0123_adc_acq/s_axi_csr_aresetn] [get_bd_pins ch4567_adc_acq/s_axi_csr_aresetn] [get_bd_pins csr_axi_intercon/ARESETN] [get_bd_pins csr_axi_intercon/M00_ARESETN] [get_bd_pins csr_axi_intercon/M01_ARESETN] [get_bd_pins csr_axi_intercon/S00_ARESETN]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins s_axis_pdti_aclk] [get_bd_pins ch0123_adc_acq/s_axis_pdti_aclk] [get_bd_pins ch4567_adc_acq/s_axis_pdti_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins s_axis_pdti_aresetn] [get_bd_pins ch0123_adc_acq/s_axis_pdti_aresetn] [get_bd_pins ch4567_adc_acq/s_axis_pdti_aresetn]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins dma_irq_vctr] [get_bd_pins dma_irq_concat/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: adc2dac
proc create_hier_cell_adc2dac { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_adc2dac() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch0_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch1_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch2_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch3_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch4_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch5_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch6_pd

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m_axis_dac_ch7_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_csr

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch0_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch1_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch2_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch3_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch4_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch5_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch6_pd

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s_axis_ch7_pd


  # Create pins
  create_bd_pin -dir I s_axi_csr_aclk
  create_bd_pin -dir I s_axi_csr_aresetn
  create_bd_pin -dir I s_axis_aclk
  create_bd_pin -dir I s_axis_aresetn

  # Create instance: axis_register_slice_0, and set properties
  set axis_register_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_0 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_0

  # Create instance: axis_register_slice_1, and set properties
  set axis_register_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_1 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_1

  # Create instance: axis_register_slice_2, and set properties
  set axis_register_slice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_2 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_2

  # Create instance: axis_register_slice_3, and set properties
  set axis_register_slice_3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_3 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_3

  # Create instance: axis_register_slice_4, and set properties
  set axis_register_slice_4 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_4 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_4

  # Create instance: axis_register_slice_5, and set properties
  set axis_register_slice_5 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_5 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_5

  # Create instance: axis_register_slice_6, and set properties
  set axis_register_slice_6 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_6 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_6

  # Create instance: axis_register_slice_7, and set properties
  set axis_register_slice_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_7 ]
  set_property -dict [ list \
   CONFIG.HAS_TKEEP {0} \
   CONFIG.HAS_TLAST {0} \
   CONFIG.HAS_TREADY {0} \
   CONFIG.HAS_TSTRB {0} \
   CONFIG.TDATA_NUM_BYTES {32} \
   CONFIG.TDEST_WIDTH {0} \
   CONFIG.TID_WIDTH {0} \
   CONFIG.TUSER_WIDTH {0} \
 ] $axis_register_slice_7

  # Create instance: px_s_axil_plc_hldr_0, and set properties
  set px_s_axil_plc_hldr_0 [ create_bd_cell -type ip -vlnv pentek.com:px_ip:px_s_axil_plc_hldr:1.0 px_s_axil_plc_hldr_0 ]
  set_property -dict [ list \
   CONFIG.address_width {16} \
 ] $px_s_axil_plc_hldr_0

  # Create interface connections
  connect_bd_intf_net -intf_net axis_register_slice_0_M_AXIS [get_bd_intf_pins m_axis_dac_ch0_pd] [get_bd_intf_pins axis_register_slice_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_1_M_AXIS [get_bd_intf_pins m_axis_dac_ch1_pd] [get_bd_intf_pins axis_register_slice_1/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_2_M_AXIS [get_bd_intf_pins m_axis_dac_ch2_pd] [get_bd_intf_pins axis_register_slice_2/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_3_M_AXIS [get_bd_intf_pins m_axis_dac_ch3_pd] [get_bd_intf_pins axis_register_slice_3/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_4_M_AXIS [get_bd_intf_pins m_axis_dac_ch4_pd] [get_bd_intf_pins axis_register_slice_4/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_5_M_AXIS [get_bd_intf_pins m_axis_dac_ch5_pd] [get_bd_intf_pins axis_register_slice_5/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_6_M_AXIS [get_bd_intf_pins m_axis_dac_ch6_pd] [get_bd_intf_pins axis_register_slice_6/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_7_M_AXIS [get_bd_intf_pins m_axis_dac_ch7_pd] [get_bd_intf_pins axis_register_slice_7/M_AXIS]
  connect_bd_intf_net -intf_net s_axi_csr_1 [get_bd_intf_pins s_axi_csr] [get_bd_intf_pins px_s_axil_plc_hldr_0/s_axi_csr]
  connect_bd_intf_net -intf_net s_axis_ch0_pd_1 [get_bd_intf_pins s_axis_ch0_pd] [get_bd_intf_pins axis_register_slice_0/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch1_pd_1 [get_bd_intf_pins s_axis_ch1_pd] [get_bd_intf_pins axis_register_slice_1/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch2_pd_1 [get_bd_intf_pins s_axis_ch2_pd] [get_bd_intf_pins axis_register_slice_2/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch3_pd_1 [get_bd_intf_pins s_axis_ch3_pd] [get_bd_intf_pins axis_register_slice_3/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch4_pd_1 [get_bd_intf_pins s_axis_ch4_pd] [get_bd_intf_pins axis_register_slice_4/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch5_pd_1 [get_bd_intf_pins s_axis_ch5_pd] [get_bd_intf_pins axis_register_slice_5/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch6_pd_1 [get_bd_intf_pins s_axis_ch6_pd] [get_bd_intf_pins axis_register_slice_6/S_AXIS]
  connect_bd_intf_net -intf_net s_axis_ch7_pd_1 [get_bd_intf_pins s_axis_ch7_pd] [get_bd_intf_pins axis_register_slice_7/S_AXIS]

  # Create port connections
  connect_bd_net -net s_axi_csr_aclk_1 [get_bd_pins s_axi_csr_aclk] [get_bd_pins px_s_axil_plc_hldr_0/s_axi_csr_aclk]
  connect_bd_net -net s_axi_csr_aresetn_1 [get_bd_pins s_axi_csr_aresetn] [get_bd_pins px_s_axil_plc_hldr_0/s_axi_csr_aresetn]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins s_axis_aclk] [get_bd_pins axis_register_slice_0/aclk] [get_bd_pins axis_register_slice_1/aclk] [get_bd_pins axis_register_slice_2/aclk] [get_bd_pins axis_register_slice_3/aclk] [get_bd_pins axis_register_slice_4/aclk] [get_bd_pins axis_register_slice_5/aclk] [get_bd_pins axis_register_slice_6/aclk] [get_bd_pins axis_register_slice_7/aclk]
  connect_bd_net -net s_axis_aresetn_1 [get_bd_pins s_axis_aresetn] [get_bd_pins axis_register_slice_0/aresetn] [get_bd_pins axis_register_slice_1/aresetn] [get_bd_pins axis_register_slice_2/aresetn] [get_bd_pins axis_register_slice_3/aresetn] [get_bd_pins axis_register_slice_4/aresetn] [get_bd_pins axis_register_slice_5/aresetn] [get_bd_pins axis_register_slice_6/aresetn] [get_bd_pins axis_register_slice_7/aresetn]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set C0_DDR4 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:ddr4_rtl:1.0 C0_DDR4 ]

  set C0_SYS_CLK [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 C0_SYS_CLK ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {250000000} \
   ] $C0_SYS_CLK

  set MGTREFCLK131 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 MGTREFCLK131 ]

  set Vaux0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux0 ]

  set Vaux1 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux1 ]

  set Vaux2 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux2 ]

  set Vaux3 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux3 ]

  set Vaux4 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux4 ]

  set Vaux5 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux5 ]

  set Vaux8 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux8 ]

  set Vaux9 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux9 ]

  set Vaux10 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux10 ]

  set Vaux11 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux11 ]

  set Vaux12 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux12 ]

  set Vaux13 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 Vaux13 ]

  set adc0_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc0_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $adc0_clk

  set adc1_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc1_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $adc1_clk

  set adc2_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $adc2_clk

  set adc3_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc3_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $adc3_clk

  set adc_224_01 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_224_01 ]

  set adc_224_23 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_224_23 ]

  set adc_225_01 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_225_01 ]

  set adc_225_23 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_225_23 ]

  set adc_226_01 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_226_01 ]

  set adc_226_23 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_226_23 ]

  set adc_227_01 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_227_01 ]

  set adc_227_23 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 adc_227_23 ]

  set dac0_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 dac0_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $dac0_clk

  set dac1_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 dac1_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {4000000000} \
   ] $dac1_clk

  set dac_228_vout0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_228_vout0 ]

  set dac_228_vout1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_228_vout1 ]

  set dac_228_vout2 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_228_vout2 ]

  set dac_228_vout3 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_228_vout3 ]

  set dac_229_vout0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_229_vout0 ]

  set dac_229_vout1 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_229_vout1 ]

  set dac_229_vout2 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_229_vout2 ]

  set dac_229_vout3 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 dac_229_vout3 ]

  set eth100ge_ch0123_gt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 eth100ge_ch0123_gt ]

  set eth100ge_ch4567_gt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gt_rtl:1.0 eth100ge_ch4567_gt ]

  set pcie_mgt [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:pcie_7x_mgt_rtl:1.0 pcie_mgt ]

  set sysref_in [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in ]


  # Create ports
  set carrier_pps [ create_bd_port -dir I carrier_pps ]
  set eth0_link_led_n [ create_bd_port -dir O eth0_link_led_n ]
  set eth1_link_led_n [ create_bd_port -dir O eth1_link_led_n ]
  set ext_temp_irq_n [ create_bd_port -dir I -type intr ext_temp_irq_n ]
  set_property -dict [ list \
   CONFIG.SENSITIVITY {LEVEL_LOW} \
 ] $ext_temp_irq_n
  set fpgacodetype [ create_bd_port -dir I -from 31 -to 0 fpgacodetype ]
  set gate_in [ create_bd_port -dir I gate_in ]
  set gate_trig_ttl_in [ create_bd_port -dir I gate_trig_ttl_in ]
  set gt_ref_clk [ create_bd_port -dir I -type clk -freq_hz 156250000 gt_ref_clk ]
  set pcie_lane_led0_n [ create_bd_port -dir O pcie_lane_led0_n ]
  set pcie_lane_led1_n [ create_bd_port -dir O pcie_lane_led1_n ]
  set pcie_link_up_led_n [ create_bd_port -dir O pcie_link_up_led_n ]
  set pcie_perstn_in [ create_bd_port -dir I -type rst pcie_perstn_in ]
  set ref_clk [ create_bd_port -dir I -type clk -freq_hz 200000000 ref_clk ]
  set rev [ create_bd_port -dir I -from 7 -to 0 rev ]
  set rev_date [ create_bd_port -dir I -from 23 -to 0 rev_date ]
  set rf_axis_aclk [ create_bd_port -dir I -type clk -freq_hz 500000000 rf_axis_aclk ]
  set size [ create_bd_port -dir I -from 11 -to 0 size ]
  set swver [ create_bd_port -dir I -from 31 -to 0 swver ]
  set sync_in [ create_bd_port -dir I sync_in ]
  set sysref [ create_bd_port -dir I -type clk -freq_hz 20000000 sysref ]
  set_property -dict [ list \
   CONFIG.CLK_DOMAIN {p6003_usp_rf_data_converter_0_0_clk_dac0} \
 ] $sysref

  # Create instance: adc2dac
  create_hier_cell_adc2dac [current_bd_instance .] adc2dac

  # Create instance: adc_data_acq
  create_hier_cell_adc_data_acq [current_bd_instance .] adc_data_acq

  # Create instance: axi_interconnect_0, and set properties
  set axi_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_0 ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.M01_HAS_REGSLICE {1} \
   CONFIG.M02_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {3} \
   CONFIG.S00_HAS_REGSLICE {1} \
 ] $axi_interconnect_0

  # Create instance: dac_sig_src
  create_hier_cell_dac_sig_src [current_bd_instance .] dac_sig_src

  # Create instance: dataio_intrfc
  create_hier_cell_dataio_intrfc [current_bd_instance .] dataio_intrfc

  # Create instance: ddr4_axi_fpd_axi_intercon, and set properties
  set ddr4_axi_fpd_axi_intercon [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 ddr4_axi_fpd_axi_intercon ]
  set_property -dict [ list \
   CONFIG.M00_HAS_REGSLICE {1} \
   CONFIG.NUM_MI {1} \
   CONFIG.NUM_SI {2} \
   CONFIG.S00_HAS_REGSLICE {1} \
   CONFIG.S01_HAS_REGSLICE {1} \
 ] $ddr4_axi_fpd_axi_intercon

  # Create instance: dec_fir
  create_hier_cell_dec_fir [current_bd_instance .] dec_fir

  # Create instance: eth_100ge
  create_hier_cell_eth_100ge [current_bd_instance .] eth_100ge

  # Create instance: main_irq_concat, and set properties
  set main_irq_concat [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 main_irq_concat ]
  set_property -dict [ list \
   CONFIG.IN0_WIDTH {1} \
   CONFIG.IN10_WIDTH {1} \
   CONFIG.IN11_WIDTH {1} \
   CONFIG.IN12_WIDTH {1} \
   CONFIG.IN13_WIDTH {1} \
   CONFIG.IN14_WIDTH {1} \
   CONFIG.IN15_WIDTH {1} \
   CONFIG.IN16_WIDTH {1} \
   CONFIG.IN17_WIDTH {1} \
   CONFIG.IN18_WIDTH {1} \
   CONFIG.IN19_WIDTH {1} \
   CONFIG.IN1_WIDTH {1} \
   CONFIG.IN20_WIDTH {1} \
   CONFIG.IN21_WIDTH {1} \
   CONFIG.IN22_WIDTH {1} \
   CONFIG.IN23_WIDTH {1} \
   CONFIG.IN24_WIDTH {1} \
   CONFIG.IN25_WIDTH {1} \
   CONFIG.IN26_WIDTH {1} \
   CONFIG.IN27_WIDTH {1} \
   CONFIG.IN28_WIDTH {1} \
   CONFIG.IN29_WIDTH {1} \
   CONFIG.IN2_WIDTH {1} \
   CONFIG.IN3_WIDTH {1} \
   CONFIG.IN4_WIDTH {1} \
   CONFIG.IN5_WIDTH {1} \
   CONFIG.IN6_WIDTH {1} \
   CONFIG.IN7_WIDTH {1} \
   CONFIG.IN8_WIDTH {1} \
   CONFIG.IN9_WIDTH {1} \
   CONFIG.NUM_PORTS {30} \
 ] $main_irq_concat

  # Create instance: pcie_intrfc
  create_hier_cell_pcie_intrfc [current_bd_instance .] pcie_intrfc

  # Create instance: pl_ddr4
  create_hier_cell_pl_ddr4 [current_bd_instance .] pl_ddr4

  # Create instance: ps_block
  create_hier_cell_ps_block [current_bd_instance .] ps_block

  # Create instance: sys_mgmt
  create_hier_cell_sys_mgmt [current_bd_instance .] sys_mgmt

  # Create interface connections
  connect_bd_intf_net -intf_net C0_SYS_CLK_1 [get_bd_intf_ports C0_SYS_CLK] [get_bd_intf_pins pl_ddr4/C0_SYS_CLK]
  connect_bd_intf_net -intf_net MGTREFCLK131_1 [get_bd_intf_ports MGTREFCLK131] [get_bd_intf_pins pcie_intrfc/MGTREFCLK131]
  connect_bd_intf_net -intf_net S00_AXI_1 [get_bd_intf_pins adc_data_acq/m_axi_fpd] [get_bd_intf_pins axi_interconnect_0/S00_AXI]
  connect_bd_intf_net -intf_net Vaux0_1 [get_bd_intf_ports Vaux0] [get_bd_intf_pins sys_mgmt/Vaux0]
  connect_bd_intf_net -intf_net Vaux10_1 [get_bd_intf_ports Vaux10] [get_bd_intf_pins sys_mgmt/Vaux10]
  connect_bd_intf_net -intf_net Vaux11_1 [get_bd_intf_ports Vaux11] [get_bd_intf_pins sys_mgmt/Vaux11]
  connect_bd_intf_net -intf_net Vaux12_1 [get_bd_intf_ports Vaux12] [get_bd_intf_pins sys_mgmt/Vaux12]
  connect_bd_intf_net -intf_net Vaux13_1 [get_bd_intf_ports Vaux13] [get_bd_intf_pins sys_mgmt/Vaux13]
  connect_bd_intf_net -intf_net Vaux1_1 [get_bd_intf_ports Vaux1] [get_bd_intf_pins sys_mgmt/Vaux1]
  connect_bd_intf_net -intf_net Vaux2_1 [get_bd_intf_ports Vaux2] [get_bd_intf_pins sys_mgmt/Vaux2]
  connect_bd_intf_net -intf_net Vaux3_1 [get_bd_intf_ports Vaux3] [get_bd_intf_pins sys_mgmt/Vaux3]
  connect_bd_intf_net -intf_net Vaux4_1 [get_bd_intf_ports Vaux4] [get_bd_intf_pins sys_mgmt/Vaux4]
  connect_bd_intf_net -intf_net Vaux5_1 [get_bd_intf_ports Vaux5] [get_bd_intf_pins sys_mgmt/Vaux5]
  connect_bd_intf_net -intf_net Vaux8_1 [get_bd_intf_ports Vaux8] [get_bd_intf_pins sys_mgmt/Vaux8]
  connect_bd_intf_net -intf_net Vaux9_1 [get_bd_intf_ports Vaux9] [get_bd_intf_pins sys_mgmt/Vaux9]
  connect_bd_intf_net -intf_net adc0_clk_0_1 [get_bd_intf_ports adc0_clk] [get_bd_intf_pins dataio_intrfc/adc0_clk_0]
  connect_bd_intf_net -intf_net adc1_clk_0_1 [get_bd_intf_ports adc1_clk] [get_bd_intf_pins dataio_intrfc/adc1_clk_0]
  connect_bd_intf_net -intf_net adc2_clk_0_1 [get_bd_intf_ports adc2_clk] [get_bd_intf_pins dataio_intrfc/adc2_clk_0]
  connect_bd_intf_net -intf_net adc3_clk_0_1 [get_bd_intf_ports adc3_clk] [get_bd_intf_pins dataio_intrfc/adc3_clk_0]
  connect_bd_intf_net -intf_net analog_vout00_0 [get_bd_intf_ports dac_228_vout0] [get_bd_intf_pins dataio_intrfc/vout00_0]
  connect_bd_intf_net -intf_net axi_interconnect_0_M00_AXI [get_bd_intf_pins axi_interconnect_0/M00_AXI] [get_bd_intf_pins ddr4_axi_fpd_axi_intercon/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_0_M02_AXI [get_bd_intf_pins axi_interconnect_0/M02_AXI] [get_bd_intf_pins pcie_intrfc/s_axi_fpd]
  connect_bd_intf_net -intf_net axi_interconnect_1_M00_AXI [get_bd_intf_pins ddr4_axi_fpd_axi_intercon/M00_AXI] [get_bd_intf_pins pl_ddr4/s_axi_fpd]
  connect_bd_intf_net -intf_net dac0_clk_0_1 [get_bd_intf_ports dac0_clk] [get_bd_intf_pins dataio_intrfc/dac0_clk_0]
  connect_bd_intf_net -intf_net dac1_clk_0_1 [get_bd_intf_ports dac1_clk] [get_bd_intf_pins dataio_intrfc/dac1_clk_0]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch0_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch0_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac0_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch2_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch2_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac2_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch3_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch3_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac3_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch4_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch4_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac4_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch5_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch5_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac5_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch6_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch6_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac_6_pd]
  connect_bd_intf_net -intf_net dac_sig_src_m_axis_dac_ch7_pd [get_bd_intf_pins dac_sig_src/m_axis_dac_ch7_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac7_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch0_pd [get_bd_intf_pins adc2dac/s_axis_ch0_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch0_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch1_pd [get_bd_intf_pins adc2dac/s_axis_ch1_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch1_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch2_pd [get_bd_intf_pins adc2dac/s_axis_ch2_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch2_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch3_pd [get_bd_intf_pins adc2dac/s_axis_ch3_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch3_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch4_pd [get_bd_intf_pins adc2dac/s_axis_ch4_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch4_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch5_pd [get_bd_intf_pins adc2dac/s_axis_ch5_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch5_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch6_pd [get_bd_intf_pins adc2dac/s_axis_ch6_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch6_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_m_axis_drfm_ch7_pd [get_bd_intf_pins adc2dac/s_axis_ch7_pd] [get_bd_intf_pins dataio_intrfc/m_axis_loopback_ch7_pd]
  connect_bd_intf_net -intf_net dataio_intrfc_vout01_0 [get_bd_intf_ports dac_228_vout1] [get_bd_intf_pins dataio_intrfc/vout01_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout02_0 [get_bd_intf_ports dac_228_vout2] [get_bd_intf_pins dataio_intrfc/vout02_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout03_0 [get_bd_intf_ports dac_228_vout3] [get_bd_intf_pins dataio_intrfc/vout03_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout10_0 [get_bd_intf_ports dac_229_vout0] [get_bd_intf_pins dataio_intrfc/vout10_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout11_0 [get_bd_intf_ports dac_229_vout1] [get_bd_intf_pins dataio_intrfc/vout11_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout12_0 [get_bd_intf_ports dac_229_vout2] [get_bd_intf_pins dataio_intrfc/vout12_0]
  connect_bd_intf_net -intf_net dataio_intrfc_vout13_0 [get_bd_intf_ports dac_229_vout3] [get_bd_intf_pins dataio_intrfc/vout13_0]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch0_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch0_pdti] [get_bd_intf_pins dec_fir/m_axis_ch0_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch1_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch1_pdti] [get_bd_intf_pins dec_fir/m_axis_ch1_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch2_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch2_pdti] [get_bd_intf_pins dec_fir/m_axis_ch2_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch3_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch3_pdti] [get_bd_intf_pins dec_fir/m_axis_ch3_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch4_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch4_pdti] [get_bd_intf_pins dec_fir/m_axis_ch4_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch5_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch5_pdti] [get_bd_intf_pins dec_fir/m_axis_ch5_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch6_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch6_pdti] [get_bd_intf_pins dec_fir/m_axis_ch6_pdti]
  connect_bd_intf_net -intf_net dec_fir_m_axis_ch7_pdti [get_bd_intf_pins adc_data_acq/s_axis_ch7_pdti] [get_bd_intf_pins dec_fir/m_axis_ch7_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch0_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc0_pdti] [get_bd_intf_pins dec_fir/s_axis_ch0_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch1_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc1_pdti] [get_bd_intf_pins dec_fir/s_axis_ch1_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch2_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc2_pdti] [get_bd_intf_pins dec_fir/s_axis_ch2_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch3_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc3_pdti] [get_bd_intf_pins dec_fir/s_axis_ch3_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch4_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc4_pdti] [get_bd_intf_pins dec_fir/s_axis_ch4_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch5_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc5_pdti] [get_bd_intf_pins dec_fir/s_axis_ch5_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch6_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc6_pdti] [get_bd_intf_pins dec_fir/s_axis_ch6_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_adc_ch7_pdti [get_bd_intf_pins dataio_intrfc/m_axis_adc7_pdti] [get_bd_intf_pins dec_fir/s_axis_ch7_pdti]
  connect_bd_intf_net -intf_net drfm_m_axis_dac_ch1_pd [get_bd_intf_pins adc2dac/m_axis_dac_ch1_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch1_pd]
  connect_bd_intf_net -intf_net drfm_m_axis_dac_ch4_pd [get_bd_intf_pins adc2dac/m_axis_dac_ch4_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch4_pd]
  connect_bd_intf_net -intf_net drfm_m_axis_dac_ch6_pd [get_bd_intf_pins adc2dac/m_axis_dac_ch6_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch6_pd]
  connect_bd_intf_net -intf_net eth_100ge_eth100ge_ch0123_gt [get_bd_intf_ports eth100ge_ch0123_gt] [get_bd_intf_pins eth_100ge/eth100ge_ch0123_gt]
  connect_bd_intf_net -intf_net eth_100ge_eth100ge_ch4567_gt [get_bd_intf_ports eth100ge_ch4567_gt] [get_bd_intf_pins eth_100ge/eth100ge_ch4567_gt]
  connect_bd_intf_net -intf_net pcie_intrfc_pcie_mgt [get_bd_intf_ports pcie_mgt] [get_bd_intf_pins pcie_intrfc/pcie_mgt]
  connect_bd_intf_net -intf_net pl_ddr4_C0_DDR4 [get_bd_intf_ports C0_DDR4] [get_bd_intf_pins pl_ddr4/C0_DDR4]
  connect_bd_intf_net -intf_net ps_block_m_axi_adcacq_csr [get_bd_intf_pins adc_data_acq/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_adcacq_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_csr [get_bd_intf_pins dataio_intrfc/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_dataio_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_dac_src_csr [get_bd_intf_pins dac_sig_src/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_dac_src_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_ddr4_csr [get_bd_intf_pins pl_ddr4/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_ddr4_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_drfm_csr [get_bd_intf_pins adc2dac/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_adc2dac_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_eth_csr [get_bd_intf_pins eth_100ge/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_eth_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_fir_csr [get_bd_intf_pins dec_fir/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_fir_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_fpd [get_bd_intf_pins ddr4_axi_fpd_axi_intercon/S01_AXI] [get_bd_intf_pins ps_block/m_axi_fpd]
  connect_bd_intf_net -intf_net ps_block_m_axi_pcie_csr [get_bd_intf_pins pcie_intrfc/s_axi_csr] [get_bd_intf_pins ps_block/m_axi_pcie_csr]
  connect_bd_intf_net -intf_net ps_block_m_axi_sysmgmt_csr [get_bd_intf_pins ps_block/m_axi_sysmgmt_csr] [get_bd_intf_pins sys_mgmt/S_AXI_LITE]
  connect_bd_intf_net -intf_net ps_block_m_axi_ts_csr [get_bd_intf_pins dac_sig_src/s_axi_csr1] [get_bd_intf_pins ps_block/m_axi_ts_csr]
  connect_bd_intf_net -intf_net s_axi_hp1_fpd_1 [get_bd_intf_pins axi_interconnect_0/M01_AXI] [get_bd_intf_pins ps_block/s_axi_hp1_fpd]
  connect_bd_intf_net -intf_net s_axis_ch0123_ppld_1 [get_bd_intf_pins adc_data_acq/m_axis_100ge_ch0123_ppld] [get_bd_intf_pins eth_100ge/s_axis_ch0123_ppld]
  connect_bd_intf_net -intf_net s_axis_ch4567_ppld_1 [get_bd_intf_pins adc_data_acq/m_axis_100ge_ch4567_ppld] [get_bd_intf_pins eth_100ge/s_axis_ch4567_ppld]
  connect_bd_intf_net -intf_net s_axis_dac1_pd_1 [get_bd_intf_pins dac_sig_src/m_axis_dac_ch1_pd] [get_bd_intf_pins dataio_intrfc/s_axis_dac1_pd]
  connect_bd_intf_net -intf_net s_axis_dac_ptctl_1 [get_bd_intf_pins dac_sig_src/s_axis_dac_ptctl] [get_bd_intf_pins dataio_intrfc/m_axis_dac_ptctl]
  connect_bd_intf_net -intf_net s_axis_drfm_ch0_pd_1 [get_bd_intf_pins adc2dac/m_axis_dac_ch0_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch0_pd]
  connect_bd_intf_net -intf_net s_axis_drfm_ch2_pd_1 [get_bd_intf_pins adc2dac/m_axis_dac_ch2_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch2_pd]
  connect_bd_intf_net -intf_net s_axis_drfm_ch3_pd_1 [get_bd_intf_pins adc2dac/m_axis_dac_ch3_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch3_pd]
  connect_bd_intf_net -intf_net s_axis_drfm_ch5_pd_1 [get_bd_intf_pins adc2dac/m_axis_dac_ch5_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch5_pd]
  connect_bd_intf_net -intf_net s_axis_drfm_ch7_pd_1 [get_bd_intf_pins adc2dac/m_axis_dac_ch7_pd] [get_bd_intf_pins dac_sig_src/s_axis_drfm_ch7_pd]
  connect_bd_intf_net -intf_net sysref_in_0_1 [get_bd_intf_ports sysref_in] [get_bd_intf_pins dataio_intrfc/sysref_in_0]
  connect_bd_intf_net -intf_net vin0_01_0_1 [get_bd_intf_ports adc_224_01] [get_bd_intf_pins dataio_intrfc/vin0_01_0]
  connect_bd_intf_net -intf_net vin0_23_0_1 [get_bd_intf_ports adc_224_23] [get_bd_intf_pins dataio_intrfc/vin0_23_0]
  connect_bd_intf_net -intf_net vin1_01_0_1 [get_bd_intf_ports adc_225_01] [get_bd_intf_pins dataio_intrfc/vin1_01_0]
  connect_bd_intf_net -intf_net vin1_23_0_1 [get_bd_intf_ports adc_225_23] [get_bd_intf_pins dataio_intrfc/vin1_23_0]
  connect_bd_intf_net -intf_net vin2_01_0_1 [get_bd_intf_ports adc_226_01] [get_bd_intf_pins dataio_intrfc/vin2_01_0]
  connect_bd_intf_net -intf_net vin2_23_0_1 [get_bd_intf_ports adc_226_23] [get_bd_intf_pins dataio_intrfc/vin2_23_0]
  connect_bd_intf_net -intf_net vin3_01_0_1 [get_bd_intf_ports adc_227_01] [get_bd_intf_pins dataio_intrfc/vin3_01_0]
  connect_bd_intf_net -intf_net vin3_23_0_1 [get_bd_intf_ports adc_227_23] [get_bd_intf_pins dataio_intrfc/vin3_23_0]

  # Create port connections
  connect_bd_net -net M02_ACLK_1 [get_bd_pins axi_interconnect_0/M02_ACLK] [get_bd_pins pcie_intrfc/pcie_axi_aclk]
  connect_bd_net -net adc_data_acq_ch0_flowctl_irq [get_bd_pins adc_data_acq/ch0_flowctl_irq] [get_bd_pins main_irq_concat/In6]
  connect_bd_net -net adc_data_acq_ch0_ufifo_irq [get_bd_pins adc_data_acq/ch0_ufifo_irq] [get_bd_pins main_irq_concat/In14]
  connect_bd_net -net adc_data_acq_ch1_flowctl_irq [get_bd_pins adc_data_acq/ch1_flowctl_irq] [get_bd_pins main_irq_concat/In7]
  connect_bd_net -net adc_data_acq_ch1_ufifo_irq [get_bd_pins adc_data_acq/ch1_ufifo_irq] [get_bd_pins main_irq_concat/In15]
  connect_bd_net -net adc_data_acq_ch2_flowctl_irq [get_bd_pins adc_data_acq/ch2_flowctl_irq] [get_bd_pins main_irq_concat/In8]
  connect_bd_net -net adc_data_acq_ch2_ufifo_irq [get_bd_pins adc_data_acq/ch2_ufifo_irq] [get_bd_pins main_irq_concat/In16]
  connect_bd_net -net adc_data_acq_ch3_flowctl_irq [get_bd_pins adc_data_acq/ch3_flowctl_irq] [get_bd_pins main_irq_concat/In9]
  connect_bd_net -net adc_data_acq_ch3_ufifo_irq [get_bd_pins adc_data_acq/ch3_ufifo_irq] [get_bd_pins main_irq_concat/In17]
  connect_bd_net -net adc_data_acq_ch4_flowctl_irq [get_bd_pins adc_data_acq/ch4_flowctl_irq] [get_bd_pins main_irq_concat/In10]
  connect_bd_net -net adc_data_acq_ch4_ufifo_irq [get_bd_pins adc_data_acq/ch4_ufifo_irq] [get_bd_pins main_irq_concat/In18]
  connect_bd_net -net adc_data_acq_ch5_flowctl_irq [get_bd_pins adc_data_acq/ch5_flowctl_irq] [get_bd_pins main_irq_concat/In11]
  connect_bd_net -net adc_data_acq_ch5_ufifo_irq [get_bd_pins adc_data_acq/ch5_ufifo_irq] [get_bd_pins main_irq_concat/In19]
  connect_bd_net -net adc_data_acq_ch6_flowctl_irq [get_bd_pins adc_data_acq/ch6_flowctl_irq] [get_bd_pins main_irq_concat/In12]
  connect_bd_net -net adc_data_acq_ch6_ufifo_irq [get_bd_pins adc_data_acq/ch6_ufifo_irq] [get_bd_pins main_irq_concat/In20]
  connect_bd_net -net adc_data_acq_ch7_flowctl_irq [get_bd_pins adc_data_acq/ch7_flowctl_irq] [get_bd_pins main_irq_concat/In13]
  connect_bd_net -net adc_data_acq_ch7_ufifo_irq [get_bd_pins adc_data_acq/ch7_ufifo_irq] [get_bd_pins main_irq_concat/In21]
  connect_bd_net -net axi_fpd_aresetn_1 [get_bd_pins adc_data_acq/axi_fpd_aresetn] [get_bd_pins axi_interconnect_0/ARESETN] [get_bd_pins axi_interconnect_0/M00_ARESETN] [get_bd_pins axi_interconnect_0/M01_ARESETN] [get_bd_pins axi_interconnect_0/S00_ARESETN] [get_bd_pins ddr4_axi_fpd_axi_intercon/ARESETN] [get_bd_pins ddr4_axi_fpd_axi_intercon/M00_ARESETN] [get_bd_pins ddr4_axi_fpd_axi_intercon/S00_ARESETN] [get_bd_pins ddr4_axi_fpd_axi_intercon/S01_ARESETN] [get_bd_pins pl_ddr4/axi_fpd_aresetn] [get_bd_pins ps_block/axi_fpd_aresetn]
  connect_bd_net -net dac_sig_src_dac_chirp_irq [get_bd_pins dac_sig_src/dac_chirp_irq] [get_bd_pins main_irq_concat/In29]
  connect_bd_net -net dac_sig_src_dac_test_sig_irq [get_bd_pins dac_sig_src/dac_test_sig_irq] [get_bd_pins main_irq_concat/In28]
  connect_bd_net -net dataio_intrfc_adc_sync_bus_irq [get_bd_pins dataio_intrfc/adc_sync_bus_irq] [get_bd_pins main_irq_concat/In4] [get_bd_pins main_irq_concat/In5]
  connect_bd_net -net dataio_intrfc_dac_axis_aresetn [get_bd_pins adc2dac/s_axis_aresetn] [get_bd_pins dac_sig_src/s_axis_aresetn] [get_bd_pins dataio_intrfc/dac_axis_aresetn]
  connect_bd_net -net dataio_intrfc_rf_adc_cntl_stat_irq [get_bd_pins dataio_intrfc/rf_adc_cntl_stat_irq] [get_bd_pins main_irq_concat/In3]
  connect_bd_net -net dataio_intrfc_rf_data_conv_irq [get_bd_pins dataio_intrfc/rf_data_conv_irq] [get_bd_pins main_irq_concat/In2]
  connect_bd_net -net dataio_intrfc_timestamp_irq [get_bd_pins dataio_intrfc/timestamp_irq] [get_bd_pins main_irq_concat/In1]
  connect_bd_net -net dma_irq_1 [get_bd_pins adc_data_acq/dma_irq_vctr] [get_bd_pins pcie_intrfc/irq_in] [get_bd_pins ps_block/dma_irq]
  connect_bd_net -net eth100ge_ch0123_pkt_size_en_1 [get_bd_pins adc_data_acq/eth100ge_ch0123_pkt_size_en] [get_bd_pins eth_100ge/eth100ge_ch0123_payload_size_ctl_en]
  connect_bd_net -net eth100ge_ch4567_fifo_aresetn_1 [get_bd_pins adc_data_acq/eth100ge_ch4567_fifo_aresetn] [get_bd_pins eth_100ge/eth100ge_ch4567_fifo_aresetn]
  connect_bd_net -net eth100ge_ch4567_pkt_size_en_1 [get_bd_pins adc_data_acq/eth100ge_ch4567_pkt_size_en] [get_bd_pins eth_100ge/eth100ge_ch4567_payload_size_ctl_en]
  connect_bd_net -net eth100ge_ch4567_txclk_1 [get_bd_pins adc_data_acq/eth100ge_ch4567_txclk] [get_bd_pins eth_100ge/eth100ge_ch4567_txclk]
  connect_bd_net -net eth_100ge_eth100ge_ch0123_fifo_aresetn [get_bd_pins adc_data_acq/eth100ge_ch0123_fifo_aresetn] [get_bd_pins eth_100ge/eth100ge_ch0123_fifo_aresetn]
  connect_bd_net -net eth_100ge_eth100ge_ch0123_link_led_n [get_bd_ports eth0_link_led_n] [get_bd_pins eth_100ge/eth100ge_ch0123_link_led_n]
  connect_bd_net -net eth_100ge_eth100ge_ch0123_payload_size_ctl [get_bd_pins adc_data_acq/eth100ge_ch0123_pkt_size] [get_bd_pins eth_100ge/eth100ge_ch0123_payload_size_ctl]
  connect_bd_net -net eth_100ge_eth100ge_ch0123_txclk [get_bd_pins adc_data_acq/eth100ge_ch0123_txclk] [get_bd_pins eth_100ge/eth100ge_ch0123_txclk]
  connect_bd_net -net eth_100ge_eth100ge_ch4567_link_led_n [get_bd_ports eth1_link_led_n] [get_bd_pins eth_100ge/eth100ge_ch4567_link_led_n]
  connect_bd_net -net eth_100ge_eth100ge_ch4567_payload_size_ctl [get_bd_pins adc_data_acq/eth100ge_ch4567_pkt_size] [get_bd_pins eth_100ge/eth100ge_ch4567_payload_size_ctl]
  connect_bd_net -net eth_100ge_eth_100g_0_linkdn_irq [get_bd_pins eth_100ge/eth_100g_0_linkdn_irq] [get_bd_pins main_irq_concat/In25]
  connect_bd_net -net eth_100ge_eth_100g_0_linkup_irq [get_bd_pins eth_100ge/eth_100g_0_linkup_irq] [get_bd_pins main_irq_concat/In24]
  connect_bd_net -net eth_100ge_eth_100g_1_linkdn_irq [get_bd_pins eth_100ge/eth_100g_1_linkdn_irq] [get_bd_pins main_irq_concat/In27]
  connect_bd_net -net eth_100ge_eth_100g_1_linkup_irq [get_bd_pins eth_100ge/eth_100g_1_linkup_irq] [get_bd_pins main_irq_concat/In26]
  connect_bd_net -net eth_100ge_ppld2udp_0_irq [get_bd_pins eth_100ge/ppld2udp_0_irq] [get_bd_pins main_irq_concat/In22]
  connect_bd_net -net eth_100ge_ppld2udp_1_irq [get_bd_pins eth_100ge/ppld2udp_1_irq] [get_bd_pins main_irq_concat/In23]
  connect_bd_net -net ext_temp_irq_n_1 [get_bd_ports ext_temp_irq_n] [get_bd_pins ps_block/ext_temp_irq_n]
  connect_bd_net -net fpgacodetype_1 [get_bd_ports fpgacodetype] [get_bd_pins ps_block/fpgacodetype]
  connect_bd_net -net gate_in_0_1 [get_bd_ports gate_in] [get_bd_pins dataio_intrfc/gate_in]
  connect_bd_net -net gt_ref_clk_1 [get_bd_ports gt_ref_clk] [get_bd_pins eth_100ge/gt_ref_clk]
  connect_bd_net -net pcie_intrfc_pcie_axi_aresetn [get_bd_pins axi_interconnect_0/M02_ARESETN] [get_bd_pins pcie_intrfc/pcie_axi_aresetn]
  connect_bd_net -net pcie_intrfc_pcie_lane_led0_n [get_bd_ports pcie_lane_led0_n] [get_bd_pins pcie_intrfc/pcie_lane_led0_n]
  connect_bd_net -net pcie_intrfc_pcie_lane_led1_n [get_bd_ports pcie_lane_led1_n] [get_bd_pins pcie_intrfc/pcie_lane_led1_n]
  connect_bd_net -net pcie_intrfc_pcie_link_up_led_n [get_bd_ports pcie_link_up_led_n] [get_bd_pins pcie_intrfc/pcie_link_up_led_n]
  connect_bd_net -net pcie_mailbox_irq_1 [get_bd_pins pcie_intrfc/pcie_mailbox_irq] [get_bd_pins ps_block/pcie_mailbox_irq]
  connect_bd_net -net pcie_perstn_in_1 [get_bd_ports pcie_perstn_in] [get_bd_pins pcie_intrfc/pcie_perstn_in]
  connect_bd_net -net pps_in_0_1 [get_bd_ports carrier_pps] [get_bd_pins dataio_intrfc/carrier_pps]
  connect_bd_net -net ps_block_axi_csr_aclk [get_bd_pins adc2dac/s_axi_csr_aclk] [get_bd_pins adc_data_acq/s_axi_csr_aclk] [get_bd_pins dac_sig_src/s_axi_csr_aclk] [get_bd_pins dataio_intrfc/s_axi_csr_aclk] [get_bd_pins dec_fir/s_axi_csr_aclk] [get_bd_pins eth_100ge/s_axi_csr_aclk] [get_bd_pins pcie_intrfc/s_axi_csr_aclk] [get_bd_pins pl_ddr4/s_axi_csr_aclk] [get_bd_pins ps_block/axi_csr_aclk] [get_bd_pins sys_mgmt/axi_csr_aclk]
  connect_bd_net -net ps_block_axi_csr_aresetn [get_bd_pins adc2dac/s_axi_csr_aresetn] [get_bd_pins adc_data_acq/s_axi_csr_aresetn] [get_bd_pins dac_sig_src/s_axi_csr_aresetn] [get_bd_pins dataio_intrfc/s_axi_csr_aresetn] [get_bd_pins dec_fir/s_axi_csr_aresetn] [get_bd_pins eth_100ge/s_axi_csr_aresetn] [get_bd_pins pcie_intrfc/s_axi_csr_aresetn] [get_bd_pins pl_ddr4/s_axi_csr_aresetn] [get_bd_pins ps_block/axi_csr_aresetn] [get_bd_pins sys_mgmt/axi_csr_aresetn]
  connect_bd_net -net ps_block_axi_fpd_aclk [get_bd_pins adc_data_acq/axi_fpd_aclk] [get_bd_pins axi_interconnect_0/ACLK] [get_bd_pins axi_interconnect_0/M00_ACLK] [get_bd_pins axi_interconnect_0/M01_ACLK] [get_bd_pins axi_interconnect_0/S00_ACLK] [get_bd_pins ddr4_axi_fpd_axi_intercon/ACLK] [get_bd_pins ddr4_axi_fpd_axi_intercon/M00_ACLK] [get_bd_pins ddr4_axi_fpd_axi_intercon/S00_ACLK] [get_bd_pins ddr4_axi_fpd_axi_intercon/S01_ACLK] [get_bd_pins eth_100ge/axi_fpd_aclk] [get_bd_pins pl_ddr4/axi_fpd_aclk] [get_bd_pins ps_block/axi_fpd_aclk]
  connect_bd_net -net ps_block_rtc_pps [get_bd_pins dataio_intrfc/rtc_pps_in] [get_bd_pins ps_block/rtc_pps]
  connect_bd_net -net ref_clk_0_1 [get_bd_ports ref_clk] [get_bd_pins dataio_intrfc/ref_clk_0]
  connect_bd_net -net rev_1 [get_bd_ports rev] [get_bd_pins pcie_intrfc/rev] [get_bd_pins ps_block/rev]
  connect_bd_net -net rev_date_1 [get_bd_ports rev_date] [get_bd_pins pcie_intrfc/rev_date] [get_bd_pins ps_block/rev_date]
  connect_bd_net -net rf_axis_aclk_1 [get_bd_ports rf_axis_aclk] [get_bd_pins dataio_intrfc/rf_axis_aclk]
  connect_bd_net -net s_axis_aclk_1 [get_bd_pins adc2dac/s_axis_aclk] [get_bd_pins dac_sig_src/s_axis_aclk] [get_bd_pins dataio_intrfc/dac_axis_aclk]
  connect_bd_net -net s_axis_pdti_aclk_1 [get_bd_pins adc_data_acq/s_axis_pdti_aclk] [get_bd_pins dac_sig_src/s_axis_hr_aclk] [get_bd_pins dataio_intrfc/adc_axis_aclk] [get_bd_pins dec_fir/s_axis_aclk]
  connect_bd_net -net s_axis_pdti_aresetn_1 [get_bd_pins adc_data_acq/s_axis_pdti_aresetn] [get_bd_pins dac_sig_src/s_axis_hr_aresetn] [get_bd_pins dataio_intrfc/adc_axis_aresetn] [get_bd_pins dec_fir/s_axis_aresetn]
  connect_bd_net -net size_1 [get_bd_ports size] [get_bd_pins pcie_intrfc/size] [get_bd_pins ps_block/size]
  connect_bd_net -net swver_1 [get_bd_ports swver] [get_bd_pins ps_block/swver]
  connect_bd_net -net sync_in_0_1 [get_bd_ports sync_in] [get_bd_pins dataio_intrfc/sync_in]
  connect_bd_net -net sys_mgmt_ip2intc_irpt [get_bd_pins main_irq_concat/In0] [get_bd_pins sys_mgmt/ip2intc_irpt]
  connect_bd_net -net sysref_1 [get_bd_ports sysref] [get_bd_pins dataio_intrfc/sysref]
  connect_bd_net -net trig_ttl_in_0_1 [get_bd_ports gate_trig_ttl_in] [get_bd_pins dataio_intrfc/gate_trig_ttl_in]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins main_irq_concat/dout] [get_bd_pins ps_block/irq_1]

  # Create address segments
  assign_bd_address -offset 0x80008000 -range 0x00001000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_axil_addr_sub_0/m_axi] [get_bd_addr_segs pcie_intrfc/shared_mem_pcie_bram/S_AXI/Mem0] -force
  assign_bd_address -offset 0x00010000 -range 0x00010000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_pcie2axil_0/m_axi] [get_bd_addr_segs pcie_intrfc/mailbox_0/S1_AXI/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_pcie2axil_0/m_axi] [get_bd_addr_segs pcie_intrfc/pcie_pcie_info_csr/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x00008000 -range 0x00001000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_pcie2axil_0/m_axi] [get_bd_addr_segs pcie_intrfc/px_axil_addr_sub_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_pcie2axil_0/m_axi] [get_bd_addr_segs pcie_intrfc/px_pcie_irq_ctlr_0/s_axi/reg0] -force
  assign_bd_address -offset 0x00002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces pcie_intrfc/px_pcie2axil_0/m_axi] [get_bd_addr_segs pcie_intrfc/rq_axis_traffic_meter/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80130000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_clk_mmcm2/s_axi_lite/Reg] -force
  assign_bd_address -offset 0x80120000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_clk_mmcm/s_axi_lite/Reg] -force
  assign_bd_address -offset 0x80103000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/clk_freq_cntr_adc_h/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80110000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80111000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80112000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80113000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80114000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_4/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80115000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_5/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80116000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_6/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80117000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_merge_streams/adc_pdti_fmtr_7/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80006000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs pcie_intrfc/arm_pcie_info_csr/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs ps_block/axi_intc_0/S_AXI/Reg] -force
  assign_bd_address -offset 0x80002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs ps_block/axi_intc_1/S_AXI/Reg] -force
  assign_bd_address -offset 0x80823000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_0/axil_2_drp/s_axi/reg0] -force
  assign_bd_address -offset 0x8082B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_1/axil_2_drp/s_axi/reg0] -force
  assign_bd_address -offset 0x80400000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/trig_acquire/axis_pdti2ppkt_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80420000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/trig_acquire/axis_pdti2ppkt_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80401000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/trig_acquire/axis_pdti2ppkt_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80421000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/trig_acquire/axis_pdti2ppkt_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80402000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/trig_acquire/axis_pdti2ppkt_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80422000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/trig_acquire/axis_pdti2ppkt_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80403000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/trig_acquire/axis_pdti2ppkt_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80423000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/trig_acquire/axis_pdti2ppkt_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80300000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80301000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80302000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80303000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80304000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_4/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80305000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_5/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80306000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_6/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80307000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/axis_pdti_mux_7/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80105000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/clk_freq_cntr_dac/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80800000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_0/cmac_usplus/s_axi/Reg] -force
  assign_bd_address -offset 0x80810000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_1/cmac_usplus/s_axi/Reg] -force
  assign_bd_address -offset 0x80500000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_0/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80501000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_1/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80502000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_2/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80503000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_3/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80504000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_4/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80505000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_5/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80506000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_6/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80507000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_src_switch_7/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80512000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/dac_ts_src_switch/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x80600000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs pl_ddr4/ddr4_ctlstat_csr/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80308000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80309000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_4/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030D000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_5/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030E000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_6/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8030F000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dec_fir/dec16fir_7/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80410000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80430000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80411000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80431000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80412000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80432000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80413000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80433000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80822000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_0/eth_100ge_ctl_stat/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8082A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_1/eth_100ge_ctl_stat/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80003000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs ps_block/ext_temp_irq/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8040C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/fifo_ctl_src_sel/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8042C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/fifo_ctl_src_sel/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs ps_block/info_csr_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80005000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs pcie_intrfc/mailbox_0/S0_AXI/Reg] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x80404000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/fifo_storage/ppkt_uram_fifo_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80424000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/fifo_storage/ppkt_uram_fifo_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80405000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/fifo_storage/ppkt_uram_fifo_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80425000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/fifo_storage/ppkt_uram_fifo_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80406000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/fifo_storage/ppkt_uram_fifo_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80426000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/fifo_storage/ppkt_uram_fifo_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80407000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/fifo_storage/ppkt_uram_fifo_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80427000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/fifo_storage/ppkt_uram_fifo_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80824000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_0/px_100ge_arp/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8082C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/eth_ex_design_1/px_100ge_arp/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80109000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/adc_rst_csr/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80511000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/chirp_generator/axis_chirp_gen/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80408000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/payload_packetize/px_axis_ppkt2ppld_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80428000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/payload_packetize/px_axis_ppkt2ppld_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80409000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/payload_packetize/px_axis_ppkt2ppld_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80429000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/payload_packetize/px_axis_ppkt2ppld_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8040A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/payload_packetize/px_axis_ppkt2ppld_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8042A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/payload_packetize/px_axis_ppkt2ppld_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8040B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch0123_adc_acq/payload_packetize/px_axis_ppkt2ppld_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8042B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc_data_acq/ch4567_adc_acq/payload_packetize/px_axis_ppkt2ppld_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80820000 -range 0x00002000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/px_ppld2udp100ge_axi_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80828000 -range 0x00002000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_100ge/px_ppld2udp100ge_axi_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80508000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80509000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_1/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_2/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_3/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_4/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050D000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_5/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050E000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_6/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x8050F000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/px_rf_dac_fmtr_7/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80101000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/px_rfsoc_adc_syncbus/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80700000 -range 0x00010000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs adc2dac/px_s_axil_plc_hldr_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80510000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dac_sig_src/test_sig_generator/px_test_sig_gen_16_0/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80107000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/px_timestamp_gen/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80106000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/rf_adc_cntl_stat/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80140000 -range 0x00040000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/rf_data_converter/s_axi/Reg] -force
  assign_bd_address -offset 0x80104000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/clk_freq_cntr_adc_l/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x80008000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs pcie_intrfc/shared_mem_arm_bram/S_AXI/Mem0] -force
  assign_bd_address -offset 0x80604000 -range 0x00002000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs sys_mgmt/sys_mgt/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0x80108000 -range 0x00001000 -target_address_space [get_bd_addr_spaces ps_block/zynq_ultra_ps_e_0/Data] [get_bd_addr_segs dataio_intrfc/sysref_period_cntr/s_axi_csr/reg0] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch0123_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_0/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_1/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_2/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x001000000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs pl_ddr4/pl_ddr4_0/C0_DDR4_MEMORY_MAP/C0_DDR4_ADDRESS_BLOCK] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x002000000000 -range 0x001000000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs pcie_intrfc/px_axi4_2_pciepkt_256_0/s_axi_mm2s/reg0] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x000800000000 -range 0x000200000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_HIGH] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_DDR_LOW] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_LPS_OCM] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_descr] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces adc_data_acq/ch4567_adc_acq/dma/dma_ppld2axi_3/m_axi_s2mm] [get_bd_addr_segs ps_block/zynq_ultra_ps_e_0/SAXIGP3/HP1_QSPI] -force

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.653622",
   "Default View_TopLeft":"1655,1395",
   "ExpandedHierarchyInLayout":"",
   "comment_0":"Enter Comments here",
   "comment_1":"Set up for INTRP=2 for <4GHz, INTRP= 4 for >4GHz",
   "comment_2":"This example design was developed originally for the Gen1 RFSOC.
Because of this, it will only support real, and dec=2,4,and 8 at sample
rates below 4GHz. The modes are controlled via software be overriding
the bus width out of the ADC at run time to match the data rate without
changing the AXIS clock. The ADC formatter IP core then discards the
invalid portion of samples in the bus as a function of what the bus width
is set to and repacks the valid data.  This scheme only works for these
decimations and an 8 sample/cycle bus width.  In this application, to
support 5GHz rates would require a 12 sample bus and so is not possible
with the present example IP. 5GHz sample rates is only supported by this
design for dec=4 and dec=8.  Other modes will require the user replacing
this IP with their own custom IP.  5GHz sample rate is supported by
software orrerriding the ADC output clock division to divide by 16 instead of
8, thus allowing dec= 4 to use the whole eight sample width instead of a
four sample width.",
   "comment_3":"The Chrip Generator, as configured, is only
valid in interp=2 mode up to 4GHz and interp=4
above 4GHz. Other interpolations require changing
the samples/cycle parameter on the chirp generator IP core
and adjusting the width conversions and data padding
accordingly.",
   "comment_4":"The test signal generator, as configured, can only 
support real mode and sample rates up to 4GHz.
Complex modes are not supported. Operation above
4GHz requires 12 samples/cycle which is not possible
with this IP core.",
   "commentid":"comment_0|comment_1|comment_2|comment_3|comment_4|",
   "font_comment_0":"14",
   "font_comment_1":"14",
   "font_comment_2":"14",
   "font_comment_3":"14",
   "font_comment_4":"14",
   "guistr":"# # String gsaved with Nlview 7.0r6  2020-01-29 bk=1.5227 VDI=41 GEI=36 GUI=JA:10.0 non-TLS
#  -string -flagsOSRD
preplace port Vaux0 -pg 1 -lvl 0 -x -30 -y 1280 -defaultsOSRD
preplace port Vaux1 -pg 1 -lvl 0 -x -30 -y 1300 -defaultsOSRD
preplace port Vaux2 -pg 1 -lvl 0 -x -30 -y 1320 -defaultsOSRD
preplace port Vaux3 -pg 1 -lvl 0 -x -30 -y 1340 -defaultsOSRD
preplace port Vaux4 -pg 1 -lvl 0 -x -30 -y 1360 -defaultsOSRD
preplace port Vaux5 -pg 1 -lvl 0 -x -30 -y 1380 -defaultsOSRD
preplace port Vaux8 -pg 1 -lvl 0 -x -30 -y 1400 -defaultsOSRD
preplace port Vaux9 -pg 1 -lvl 0 -x -30 -y 1420 -defaultsOSRD
preplace port Vaux10 -pg 1 -lvl 0 -x -30 -y 1440 -defaultsOSRD
preplace port Vaux11 -pg 1 -lvl 0 -x -30 -y 1460 -defaultsOSRD
preplace port Vaux12 -pg 1 -lvl 0 -x -30 -y 1480 -defaultsOSRD
preplace port Vaux13 -pg 1 -lvl 0 -x -30 -y 1500 -defaultsOSRD
preplace port adc_224_01 -pg 1 -lvl 0 -x -30 -y 2190 -defaultsOSRD
preplace port sysref_in -pg 1 -lvl 0 -x -30 -y 2210 -defaultsOSRD
preplace port adc0_clk -pg 1 -lvl 0 -x -30 -y 2230 -defaultsOSRD
preplace port dac0_clk -pg 1 -lvl 0 -x -30 -y 2250 -defaultsOSRD
preplace port dac_228_vout0 -pg 1 -lvl 11 -x 5550 -y 2190 -defaultsOSRD
preplace port adc_224_23 -pg 1 -lvl 0 -x -30 -y 2290 -defaultsOSRD
preplace port adc_225_01 -pg 1 -lvl 0 -x -30 -y 2310 -defaultsOSRD
preplace port adc_225_23 -pg 1 -lvl 0 -x -30 -y 2330 -defaultsOSRD
preplace port adc_226_01 -pg 1 -lvl 0 -x -30 -y 2350 -defaultsOSRD
preplace port adc_226_23 -pg 1 -lvl 0 -x -30 -y 2370 -defaultsOSRD
preplace port adc_227_01 -pg 1 -lvl 0 -x -30 -y 2390 -defaultsOSRD
preplace port adc_227_23 -pg 1 -lvl 0 -x -30 -y 2410 -defaultsOSRD
preplace port dac_228_vout1 -pg 1 -lvl 11 -x 5550 -y 2210 -defaultsOSRD
preplace port dac_228_vout2 -pg 1 -lvl 11 -x 5550 -y 2230 -defaultsOSRD
preplace port dac_228_vout3 -pg 1 -lvl 11 -x 5550 -y 2250 -defaultsOSRD
preplace port dac_229_vout0 -pg 1 -lvl 11 -x 5550 -y 2270 -defaultsOSRD
preplace port dac_229_vout1 -pg 1 -lvl 11 -x 5550 -y 2290 -defaultsOSRD
preplace port dac_229_vout2 -pg 1 -lvl 11 -x 5550 -y 2310 -defaultsOSRD
preplace port dac_229_vout3 -pg 1 -lvl 11 -x 5550 -y 2330 -defaultsOSRD
preplace port adc1_clk -pg 1 -lvl 0 -x -30 -y 2430 -defaultsOSRD
preplace port adc2_clk -pg 1 -lvl 0 -x -30 -y 2450 -defaultsOSRD
preplace port adc3_clk -pg 1 -lvl 0 -x -30 -y 2470 -defaultsOSRD
preplace port dac1_clk -pg 1 -lvl 0 -x -30 -y 2490 -defaultsOSRD
preplace port C0_SYS_CLK -pg 1 -lvl 0 -x -30 -y 1240 -defaultsOSRD
preplace port C0_DDR4 -pg 1 -lvl 11 -x 5550 -y 1230 -defaultsOSRD
preplace port MGTREFCLK131 -pg 1 -lvl 0 -x -30 -y 1260 -defaultsOSRD
preplace port pcie_mgt -pg 1 -lvl 11 -x 5550 -y 1710 -defaultsOSRD
preplace port eth100ge_ch0123_gt -pg 1 -lvl 11 -x 5550 -y 590 -defaultsOSRD
preplace port eth100ge_ch4567_gt -pg 1 -lvl 11 -x 5550 -y 610 -defaultsOSRD
preplace port ref_clk -pg 1 -lvl 0 -x -30 -y 2710 -defaultsOSRD
preplace port sysref -pg 1 -lvl 0 -x -30 -y 2730 -defaultsOSRD
preplace port sync_in -pg 1 -lvl 0 -x -30 -y 2750 -defaultsOSRD
preplace port gate_in -pg 1 -lvl 0 -x -30 -y 2770 -defaultsOSRD
preplace port gate_trig_ttl_in -pg 1 -lvl 0 -x -30 -y 2790 -defaultsOSRD
preplace port carrier_pps -pg 1 -lvl 0 -x -30 -y 2810 -defaultsOSRD
preplace port gt_ref_clk -pg 1 -lvl 0 -x -30 -y 1150 -defaultsOSRD
preplace port eth0_link_led_n -pg 1 -lvl 11 -x 5550 -y 630 -defaultsOSRD
preplace port eth1_link_led_n -pg 1 -lvl 11 -x 5550 -y 650 -defaultsOSRD
preplace port ext_temp_irq_n -pg 1 -lvl 0 -x -30 -y 1580 -defaultsOSRD
preplace port pcie_perstn_in -pg 1 -lvl 0 -x -30 -y 1640 -defaultsOSRD
preplace port pcie_link_up_led_n -pg 1 -lvl 11 -x 5550 -y 1750 -defaultsOSRD
preplace port pcie_lane_led0_n -pg 1 -lvl 11 -x 5550 -y 1830 -defaultsOSRD
preplace port pcie_lane_led1_n -pg 1 -lvl 11 -x 5550 -y 1850 -defaultsOSRD
preplace port rf_axis_aclk -pg 1 -lvl 0 -x -30 -y 2850 -defaultsOSRD
preplace portBus size -pg 1 -lvl 0 -x -30 -y 1560 -defaultsOSRD
preplace portBus rev_date -pg 1 -lvl 0 -x -30 -y 1540 -defaultsOSRD
preplace portBus rev -pg 1 -lvl 0 -x -30 -y 1520 -defaultsOSRD
preplace portBus swver -pg 1 -lvl 0 -x -30 -y 1600 -defaultsOSRD
preplace portBus fpgacodetype -pg 1 -lvl 0 -x -30 -y 1620 -defaultsOSRD
preplace inst ps_block -pg 1 -lvl 7 -x 3730 -y 1700 -defaultsOSRD
preplace inst dataio_intrfc -pg 1 -lvl 3 -x 1230 -y 2520 -defaultsOSRD
preplace inst adc_data_acq -pg 1 -lvl 5 -x 2470 -y 880 -defaultsOSRD
preplace inst pl_ddr4 -pg 1 -lvl 10 -x 5200 -y 1230 -defaultsOSRD
preplace inst sys_mgmt -pg 1 -lvl 8 -x 4310 -y 1400 -defaultsOSRD
preplace inst dac_sig_src -pg 1 -lvl 2 -x 700 -y 1820 -defaultsOSRD
preplace inst eth_100ge -pg 1 -lvl 10 -x 5200 -y 770 -defaultsOSRD
preplace inst adc2dac -pg 1 -lvl 1 -x 290 -y 1770 -defaultsOSRD
preplace inst dec_fir -pg 1 -lvl 4 -x 1880 -y 1870 -defaultsOSRD
preplace inst pcie_intrfc -pg 1 -lvl 10 -x 5200 -y 1780 -defaultsOSRD
preplace inst axi_interconnect_0 -pg 1 -lvl 6 -x 3260 -y 1050 -defaultsOSRD
preplace inst ddr4_axi_fpd_axi_intercon -pg 1 -lvl 9 -x 4660 -y 1310 -defaultsOSRD
preplace inst main_irq_concat -pg 1 -lvl 6 -x 3260 -y 340 -defaultsOSRD
preplace netloc size_1 1 0 10 20J 2080 NJ 2080 1000J 2030 1640J 2090 2210J 2010 NJ 2010 3520 1940 4160J 1870 NJ 1870 NJ
preplace netloc rev_date_1 1 0 10 0J 2110 NJ 2110 NJ 2110 NJ 2110 2190J 1990 NJ 1990 3510 1910 4140J 1850 NJ 1850 NJ
preplace netloc rev_1 1 0 10 10J 2120 NJ 2120 NJ 2120 NJ 2120 2230J 2000 NJ 2000 3500 1930 4130J 1830 NJ 1830 NJ
preplace netloc ref_clk_0_1 1 0 3 NJ 2710 NJ 2710 NJ
preplace netloc ps_block_axi_csr_aclk 1 0 10 100 1950 460 2140 980 2000 1700 2100 2140 2020 NJ 2020 NJ 2020 4110 1640 NJ 1640 4930
preplace netloc ps_block_axi_csr_aresetn 1 0 10 110 1960 470 2150 990 2010 1710 2080 2130 2030 NJ 2030 NJ 2030 4120 1650 NJ 1650 4940
preplace netloc sysref_1 1 0 3 NJ 2730 NJ 2730 NJ
preplace netloc sync_in_0_1 1 0 3 NJ 2750 NJ 2750 NJ
preplace netloc gate_in_0_1 1 0 3 NJ 2770 NJ 2770 NJ
preplace netloc trig_ttl_in_0_1 1 0 3 NJ 2790 NJ 2790 NJ
preplace netloc pps_in_0_1 1 0 3 NJ 2810 NJ 2810 NJ
preplace netloc ps_block_axi_fpd_aclk 1 4 6 2180 1160 3000 1330 NJ 1330 4090 1190 4500 1050 4860
preplace netloc s_axis_pdti_aclk_1 1 1 4 510 2030 930J 1990 1590 840 N
preplace netloc s_axis_pdti_aresetn_1 1 1 4 520 2040 960J 2020 1620 860 N
preplace netloc axi_fpd_aresetn_1 1 4 6 2240 1150 3010 1230 NJ 1230 4060 1180 4510 1160 4810J
preplace netloc dataio_intrfc_timestamp_irq 1 3 3 1550J 520 NJ 520 2690
preplace netloc ps_block_rtc_pps 1 2 6 1040 2080 1570J 2130 NJ 2130 NJ 2130 NJ 2130 3900
preplace netloc dma_irq_1 1 5 5 2780 790 3430 1900 4100J 1750 NJ 1750 NJ
preplace netloc xlconcat_0_dout 1 6 1 3490 340n
preplace netloc s_axis_aclk_1 1 0 4 120 1970 480 2070 NJ 2070 1430
preplace netloc dataio_intrfc_dac_axis_aresetn 1 0 4 130 1940 450 2090 NJ 2090 1420
preplace netloc gt_ref_clk_1 1 0 10 NJ 1150 NJ 1150 NJ 1150 NJ 1150 2080J 1220 NJ 1220 3460J 1160 NJ 1160 4480J 780 4960J
preplace netloc eth_100ge_eth100ge_ch0123_txclk 1 4 7 2190 1290 NJ 1290 3480J 1150 NJ 1150 NJ 1150 4970J 1100 5520
preplace netloc eth100ge_ch4567_txclk_1 1 4 7 2230 1410 NJ 1410 NJ 1410 4020J 1110 NJ 1110 4870J 1090 5500
preplace netloc eth_100ge_eth100ge_ch0123_payload_size_ctl 1 4 7 2170 580 2860J 690 3430J 510 NJ 510 NJ 510 NJ 510 5510
preplace netloc eth100ge_ch0123_pkt_size_en_1 1 4 7 2200 600 2810J 720 3450J 530 NJ 530 NJ 530 NJ 530 5420
preplace netloc eth_100ge_eth100ge_ch4567_payload_size_ctl 1 4 7 2160 590 2840J 700 3440J 520 NJ 520 NJ 520 NJ 520 5520
preplace netloc eth100ge_ch4567_pkt_size_en_1 1 4 7 2210 1360 NJ 1360 NJ 1360 3970J 1020 NJ 1020 4870J 1080 5510
preplace netloc eth_100ge_eth100ge_ch0123_fifo_aresetn 1 4 7 2200 1350 NJ 1350 NJ 1350 3980J 1040 NJ 1040 4880J 1050 5480
preplace netloc eth100ge_ch4567_fifo_aresetn_1 1 4 7 2220 1400 NJ 1400 NJ 1400 4000J 1060 NJ 1060 4850J 1070 5490
preplace netloc eth_100ge_eth100ge_ch0123_link_led_n 1 10 1 NJ 630
preplace netloc eth_100ge_eth100ge_ch4567_link_led_n 1 10 1 NJ 650
preplace netloc sys_mgmt_ip2intc_irpt 1 5 4 2970 810 NJ 810 NJ 810 4460
preplace netloc dataio_intrfc_rf_data_conv_irq 1 3 3 1580J 540 2030J 530 2710
preplace netloc dataio_intrfc_rf_adc_cntl_stat_irq 1 3 3 1610J 560 2040J 540 2720
preplace netloc dataio_intrfc_adc_sync_bus_irq 1 3 3 1650J 570 2050J 550 2730
preplace netloc adc_data_acq_ch0_flowctl_irq 1 5 1 2740 170n
preplace netloc adc_data_acq_ch1_flowctl_irq 1 5 1 2750 190n
preplace netloc adc_data_acq_ch2_flowctl_irq 1 5 1 2760 210n
preplace netloc adc_data_acq_ch3_flowctl_irq 1 5 1 2770 230n
preplace netloc adc_data_acq_ch4_flowctl_irq 1 5 1 2820 250n
preplace netloc adc_data_acq_ch5_flowctl_irq 1 5 1 2700 270n
preplace netloc adc_data_acq_ch6_flowctl_irq 1 5 1 2870 290n
preplace netloc adc_data_acq_ch7_flowctl_irq 1 5 1 2890 310n
preplace netloc adc_data_acq_ch0_ufifo_irq 1 5 1 2830 330n
preplace netloc adc_data_acq_ch1_ufifo_irq 1 5 1 2850 350n
preplace netloc adc_data_acq_ch2_ufifo_irq 1 5 1 2880 370n
preplace netloc adc_data_acq_ch3_ufifo_irq 1 5 1 2900 390n
preplace netloc adc_data_acq_ch4_ufifo_irq 1 5 1 2930 410n
preplace netloc adc_data_acq_ch5_ufifo_irq 1 5 1 2940 430n
preplace netloc adc_data_acq_ch6_ufifo_irq 1 5 1 2950 450n
preplace netloc adc_data_acq_ch7_ufifo_irq 1 5 1 2960 470n
preplace netloc eth_100ge_ppld2udp_0_irq 1 5 6 2980 770 NJ 770 NJ 770 NJ 770 4950J 1060 5470
preplace netloc eth_100ge_ppld2udp_1_irq 1 5 6 2990 780 NJ 780 NJ 780 4470J 810 4850J 1030 5460
preplace netloc eth_100ge_eth_100g_0_linkup_irq 1 5 6 3000 740 NJ 740 NJ 740 NJ 740 4980J 1000 5440
preplace netloc eth_100ge_eth_100g_0_linkdn_irq 1 5 6 3020 730 NJ 730 NJ 730 NJ 730 4890J 1040 5450
preplace netloc eth_100ge_eth_100g_1_linkup_irq 1 5 6 3010 760 NJ 760 NJ 760 NJ 760 4970J 1020 5430
preplace netloc eth_100ge_eth_100g_1_linkdn_irq 1 5 6 3030 750 NJ 750 NJ 750 NJ 750 4910J 1010 5420
preplace netloc dac_sig_src_dac_test_sig_irq 1 2 4 910J 590 NJ 590 2090J 570 2910
preplace netloc ext_temp_irq_n_1 1 0 7 30J 1570 NJ 1570 NJ 1570 NJ 1570 NJ 1570 NJ 1570 3450J
preplace netloc dac_sig_src_dac_chirp_irq 1 2 4 900J 580 NJ 580 2070J 560 2920
preplace netloc pcie_perstn_in_1 1 0 10 -10J 2100 NJ 2100 NJ 2100 1540J 2140 NJ 2140 NJ 2140 NJ 2140 4150J 1810 NJ 1810 NJ
preplace netloc pcie_intrfc_pcie_link_up_led_n 1 10 1 NJ 1750
preplace netloc pcie_mailbox_irq_1 1 6 5 3530 1920 NJ 1920 NJ 1920 NJ 1920 5430
preplace netloc swver_1 1 0 7 50J 1590 450J 1600 NJ 1600 NJ 1600 NJ 1600 NJ 1600 3410J
preplace netloc fpgacodetype_1 1 0 7 40J 1580 NJ 1580 NJ 1580 NJ 1580 NJ 1580 NJ 1580 3420J
preplace netloc pcie_intrfc_pcie_lane_led0_n 1 10 1 NJ 1830
preplace netloc pcie_intrfc_pcie_lane_led1_n 1 10 1 NJ 1850
preplace netloc M02_ACLK_1 1 5 6 3020 1210 3410J 1100 NJ 1100 NJ 1100 4830J 1340 5420
preplace netloc pcie_intrfc_pcie_axi_aresetn 1 5 6 3030 1270 NJ 1270 3990J 1140 NJ 1140 4980J 1110 5440
preplace netloc rf_axis_aclk_1 1 0 3 NJ 2850 NJ 2850 NJ
preplace netloc dec_fir_m_axis_ch3_pdti 1 4 1 2070 720n
preplace netloc dataio_intrfc_m_axis_drfm_ch3_pd 1 0 4 90 1520 NJ 1520 NJ 1520 1480
preplace netloc adc1_clk_0_1 1 0 3 NJ 2430 NJ 2430 NJ
preplace netloc MGTREFCLK131_1 1 0 10 0J 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 NJ 1250 3440J 1090 NJ 1090 NJ 1090 4820J
preplace netloc vin2_01_0_1 1 0 3 NJ 2350 NJ 2350 NJ
preplace netloc Vaux0_1 1 0 8 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ
preplace netloc Vaux11_1 1 0 8 NJ 1460 NJ 1460 NJ 1460 NJ 1460 NJ 1460 NJ 1460 NJ 1460 NJ
preplace netloc vin3_01_0_1 1 0 3 NJ 2390 NJ 2390 NJ
preplace netloc s_axis_ch0123_ppld_1 1 5 5 NJ 710 NJ 710 NJ 710 NJ 710 N
preplace netloc dac_sig_src_m_axis_dac_ch2_pd 1 2 1 970 1770n
preplace netloc vin0_01_0_1 1 0 3 NJ 2190 NJ 2190 NJ
preplace netloc drfm_m_axis_adc_ch2_pdti 1 3 1 1560 1810n
preplace netloc s_axis_drfm_ch5_pd_1 1 1 1 N 1800
preplace netloc dataio_intrfc_m_axis_drfm_ch6_pd 1 0 4 120 1550 NJ 1550 NJ 1550 1450
preplace netloc drfm_m_axis_adc_ch4_pdti 1 3 1 1630 1850n
preplace netloc vin1_01_0_1 1 0 3 NJ 2310 NJ 2310 NJ
preplace netloc dec_fir_m_axis_ch4_pdti 1 4 1 2090 740n
preplace netloc ps_block_m_axi_adcacq_csr 1 4 4 2150 1260 NJ 1260 NJ 1260 3960
preplace netloc drfm_m_axis_adc_ch3_pdti 1 3 1 1600 1830n
preplace netloc ps_block_m_axi_fir_csr 1 3 5 1720 2060 NJ 2060 NJ 2060 NJ 2060 3920
preplace netloc S00_AXI_1 1 5 1 2800 690n
preplace netloc vin1_23_0_1 1 0 3 NJ 2330 NJ 2330 NJ
preplace netloc dataio_intrfc_vout11_0 1 3 8 NJ 2290 NJ 2290 NJ 2290 NJ 2290 NJ 2290 NJ 2290 NJ 2290 NJ
preplace netloc dataio_intrfc_m_axis_drfm_ch7_pd 1 0 4 130 1560 NJ 1560 NJ 1560 1440
preplace netloc axi_interconnect_0_M02_AXI 1 6 4 NJ 1070 NJ 1070 NJ 1070 4840
preplace netloc dac_sig_src_m_axis_dac_ch0_pd 1 2 1 1020 1730n
preplace netloc s_axis_drfm_ch3_pd_1 1 1 1 N 1760
preplace netloc drfm_m_axis_adc_ch0_pdti 1 3 1 1520 1770n
preplace netloc C0_SYS_CLK_1 1 0 10 NJ 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 3450J 1130 NJ 1130 NJ 1130 4870J
preplace netloc dataio_intrfc_m_axis_drfm_ch0_pd 1 0 4 60 1490 NJ 1490 NJ 1490 1510
preplace netloc drfm_m_axis_adc_ch6_pdti 1 3 1 1680 1890n
preplace netloc drfm_m_axis_adc_ch7_pdti 1 3 1 1690 1910n
preplace netloc pl_ddr4_C0_DDR4 1 10 1 NJ 1230
preplace netloc dataio_intrfc_vout13_0 1 3 8 NJ 2330 NJ 2330 NJ 2330 NJ 2330 NJ 2330 NJ 2330 NJ 2330 NJ
preplace netloc ps_block_m_axi_csr 1 2 6 1030 2040 NJ 2040 NJ 2040 NJ 2040 NJ 2040 3940
preplace netloc drfm_m_axis_adc_ch5_pdti 1 3 1 1670 1870n
preplace netloc dec_fir_m_axis_ch5_pdti 1 4 1 2100 760n
preplace netloc s_axis_drfm_ch7_pd_1 1 1 1 N 1840
preplace netloc s_axis_dac1_pd_1 1 2 1 1010 1750n
preplace netloc adc3_clk_0_1 1 0 3 NJ 2470 NJ 2470 NJ
preplace netloc ps_block_m_axi_drfm_csr 1 0 8 90 2050 NJ 2050 NJ 2050 NJ 2050 NJ 2050 NJ 2050 NJ 2050 3930
preplace netloc dataio_intrfc_vout10_0 1 3 8 NJ 2270 NJ 2270 NJ 2270 NJ 2270 NJ 2270 NJ 2270 NJ 2270 NJ
preplace netloc dataio_intrfc_m_axis_drfm_ch2_pd 1 0 4 80 1510 NJ 1510 NJ 1510 1490
preplace netloc dataio_intrfc_m_axis_drfm_ch1_pd 1 0 4 70 1500 NJ 1500 NJ 1500 1500
preplace netloc drfm_m_axis_dac_ch1_pd 1 1 1 N 1720
preplace netloc dataio_intrfc_vout12_0 1 3 8 NJ 2310 NJ 2310 NJ 2310 NJ 2310 NJ 2310 NJ 2310 NJ 2310 NJ
preplace netloc vin2_23_0_1 1 0 3 NJ 2370 NJ 2370 NJ
preplace netloc Vaux9_1 1 0 8 NJ 1420 NJ 1420 NJ 1420 NJ 1420 NJ 1420 NJ 1420 NJ 1420 NJ
preplace netloc ps_block_m_axi_dac_src_csr 1 1 7 520 1590 NJ 1590 1520J 1490 NJ 1490 NJ 1490 NJ 1490 3950
preplace netloc Vaux8_1 1 0 8 0J 1390 NJ 1390 NJ 1390 NJ 1390 NJ 1390 NJ 1390 NJ 1390 4120J
preplace netloc dac_sig_src_m_axis_dac_ch6_pd 1 2 1 890 1850n
preplace netloc s_axis_ch4567_ppld_1 1 5 5 2790J 800 NJ 800 NJ 800 NJ 800 4900
preplace netloc dac_sig_src_m_axis_dac_ch4_pd 1 2 1 940 1810n
preplace netloc Vaux2_1 1 0 8 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ
preplace netloc ps_block_m_axi_fpd 1 7 2 4050J 1200 4470
preplace netloc axi_interconnect_1_M00_AXI 1 9 1 4980 1210n
preplace netloc ps_block_m_axi_pcie_csr 1 7 3 NJ 1730 NJ 1730 N
preplace netloc ps_block_m_axi_sysmgmt_csr 1 7 1 4080 1260n
preplace netloc ps_block_m_axi_ts_csr 1 1 7 500 2060 NJ 2060 1660J 2070 NJ 2070 NJ 2070 NJ 2070 3910
preplace netloc dac_sig_src_m_axis_dac_ch5_pd 1 2 1 920 1830n
preplace netloc dec_fir_m_axis_ch6_pdti 1 4 1 2110 780n
preplace netloc dec_fir_m_axis_ch1_pdti 1 4 1 2040 680n
preplace netloc sysref_in_0_1 1 0 3 NJ 2210 NJ 2210 NJ
preplace netloc ps_block_m_axi_ddr4_csr 1 7 3 4030J 1120 NJ 1120 4900
preplace netloc drfm_m_axis_dac_ch6_pd 1 1 1 N 1820
preplace netloc dataio_intrfc_m_axis_drfm_ch5_pd 1 0 4 110 1540 NJ 1540 NJ 1540 1460
preplace netloc s_axis_drfm_ch2_pd_1 1 1 1 N 1740
preplace netloc dataio_intrfc_vout03_0 1 3 8 NJ 2250 NJ 2250 NJ 2250 NJ 2250 NJ 2250 NJ 2250 NJ 2250 NJ
preplace netloc pcie_intrfc_pcie_mgt 1 10 1 NJ 1710
preplace netloc Vaux4_1 1 0 8 NJ 1360 NJ 1360 NJ 1360 NJ 1360 2060J 1370 NJ 1370 NJ 1370 4040J
preplace netloc dataio_intrfc_vout02_0 1 3 8 NJ 2230 NJ 2230 NJ 2230 NJ 2230 NJ 2230 NJ 2230 NJ 2230 NJ
preplace netloc axi_interconnect_0_M00_AXI 1 6 3 NJ 1030 NJ 1030 4490
preplace netloc dac_sig_src_m_axis_dac_ch7_pd 1 2 1 880 1870n
preplace netloc s_axis_dac_ptctl_1 1 1 3 490 2130 NJ 2130 1410
preplace netloc Vaux1_1 1 0 8 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ
preplace netloc Vaux13_1 1 0 8 10J 1480 NJ 1480 NJ 1480 NJ 1480 NJ 1480 NJ 1480 NJ 1480 4040J
preplace netloc dataio_intrfc_m_axis_drfm_ch4_pd 1 0 4 100 1530 NJ 1530 NJ 1530 1470
preplace netloc s_axis_drfm_ch0_pd_1 1 1 1 N 1700
preplace netloc adc2_clk_0_1 1 0 3 NJ 2450 NJ 2450 NJ
preplace netloc s_axi_hp1_fpd_1 1 6 1 3470 1050n
preplace netloc dac_sig_src_m_axis_dac_ch3_pd 1 2 1 950 1790n
preplace netloc vin3_23_0_1 1 0 3 NJ 2410 NJ 2410 NJ
preplace netloc Vaux5_1 1 0 8 NJ 1380 NJ 1380 NJ 1380 NJ 1380 NJ 1380 NJ 1380 NJ 1380 NJ
preplace netloc Vaux3_1 1 0 8 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ
preplace netloc ps_block_m_axi_eth_csr 1 7 3 4010J 790 NJ 790 4920
preplace netloc dec_fir_m_axis_ch2_pdti 1 4 1 2050 700n
preplace netloc analog_vout00_0 1 3 8 NJ 2190 NJ 2190 NJ 2190 NJ 2190 NJ 2190 NJ 2190 NJ 2190 NJ
preplace netloc dac1_clk_0_1 1 0 3 NJ 2490 NJ 2490 NJ
preplace netloc drfm_m_axis_dac_ch4_pd 1 1 1 N 1780
preplace netloc vin0_23_0_1 1 0 3 NJ 2290 NJ 2290 NJ
preplace netloc dec_fir_m_axis_ch0_pdti 1 4 1 2030 660n
preplace netloc dac0_clk_0_1 1 0 3 NJ 2250 NJ 2250 NJ
preplace netloc eth_100ge_eth100ge_ch0123_gt 1 10 1 NJ 590
preplace netloc drfm_m_axis_adc_ch1_pdti 1 3 1 1530 1790n
preplace netloc dataio_intrfc_vout01_0 1 3 8 NJ 2210 NJ 2210 NJ 2210 NJ 2210 NJ 2210 NJ 2210 NJ 2210 NJ
preplace netloc dec_fir_m_axis_ch7_pdti 1 4 1 2120 800n
preplace netloc Vaux12_1 1 0 8 0J 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 NJ 1470 4070J
preplace netloc eth_100ge_eth100ge_ch4567_gt 1 10 1 NJ 610
preplace netloc adc0_clk_0_1 1 0 3 NJ 2230 NJ 2230 NJ
preplace netloc Vaux10_1 1 0 8 NJ 1440 NJ 1440 NJ 1440 NJ 1440 NJ 1440 NJ 1440 NJ 1440 NJ
preplace cgraphic comment_3 place top 601 163 textcolor 4 linecolor 3
preplace cgraphic comment_2 place left 190 184 textcolor 4 linecolor 3
preplace cgraphic comment_1 place top -2 74 textcolor 4 linecolor 3
preplace cgraphic comment_0 place top 0 10 textcolor 4 linecolor 3
preplace cgraphic comment_4 place top 551 25 textcolor 4 linecolor 3
levelinfo -pg 1 -30 290 700 1230 1880 2470 3260 3730 4310 4660 5200 5550
pagesize -pg 1 -db -bbox -sgen -210 -10 5740 2920
",
   "linktoobj_comment_0":"",
   "linktoobj_comment_1":"",
   "linktoobj_comment_2":"",
   "linktoobj_comment_3":"",
   "linktoobj_comment_4":"",
   "linktotype_comment_0":"bd_design",
   "linktotype_comment_1":"bd_design",
   "linktotype_comment_2":"bd_design",
   "linktotype_comment_3":"bd_design",
   "linktotype_comment_4":"bd_design"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_p6003()
cr_bd_p6003 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files p6003.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Singular" [get_files p6003.bd ] 

#call make_wrapper to create wrapper files
if { [get_property IS_LOCKED [ get_files -norecurse p6003.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../../Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/bd/p6003/hdl/p6003_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse p6003.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

if { [get_property IS_LOCKED [ get_files -norecurse p6003.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../../Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/bd/p6003/hdl/p6003_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse p6003.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

if { [get_property IS_LOCKED [ get_files -norecurse p6003.bd] ] == 1  } {
  import_files -fileset sources_1 [file normalize "${origin_dir}/../../../Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/bd/p6003/hdl/p6003_wrapper.vhd" ]
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse p6003.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}

if { [get_property IS_LOCKED [ get_files -norecurse p6003.bd] ] == 1  } {
  import_files -fileset sources_1 "/home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/p6003_2.srcs/sources_1/bd/p6003/hdl/p6003_wrapper.vhd"
} else {
  set wrapper_path [make_wrapper -fileset sources_1 -files [ get_files -norecurse p6003.bd] -top]
  add_files -norecurse -fileset sources_1 $wrapper_path
}


# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu47dr-ffvg1517-1-i -flow {Vivado Synthesis 2020} -strategy "Vivado Synthesis Defaults" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Vivado Synthesis Defaults" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2020" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fpga/git/CESAT_Characterisation/scripts/origBuild/C:/Pentek/FDK/2020.2/p6003_2_47/p6003_2.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Vivado Synthesis Defaults" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_6' run (if not found)
if {[string equal [get_runs -quiet impl_6] ""]} {
    create_run -name impl_6 -part xczu47dr-ffvg1517-1-i -flow {Vivado Implementation 2020} -strategy "Performance_HighUtilSLRs" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_HighUtilSLRs" [get_runs impl_6]
  set_property flow "Vivado Implementation 2020" [get_runs impl_6]
}
set obj [get_runs impl_6]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_6_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_6_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_6_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_io_0] "" ] } {
  create_report_config -report_name impl_6_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_6_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_6_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_6_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_6_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_6_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_6_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_6_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_6_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_6_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_6_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_6_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_power_0] "" ] } {
  create_report_config -report_name impl_6_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_6_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_6_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_6_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_6_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_6_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_6_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_6_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_6_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_6_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_6_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_6
}
set obj [get_report_configs -of_objects [get_runs impl_6] impl_6_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_6]
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fpga/git/CESAT_Characterisation/scripts/origBuild/C:/Pentek/FDK/2020.2/p6003_2_47/p6003_2.srcs/utils_1/imports/impl_6" -objects $obj
set_property -name "strategy" -value "Performance_HighUtilSLRs" -objects $obj
set_property -name "steps.place_design.args.directive" -value "SSI_HighUtilSLRs" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_7' run (if not found)
if {[string equal [get_runs -quiet impl_7] ""]} {
    create_run -name impl_7 -part xczu47dr-ffvg1517-1-i -flow {Vivado Implementation 2020} -strategy "Performance_NetDelay_low" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_NetDelay_low" [get_runs impl_7]
  set_property flow "Vivado Implementation 2020" [get_runs impl_7]
}
set obj [get_runs impl_7]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_7_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_7_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_7_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_io_0] "" ] } {
  create_report_config -report_name impl_7_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_7_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_7_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_7_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_7_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_7_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_7_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_7_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_7_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_7_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_7_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_7_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_power_0] "" ] } {
  create_report_config -report_name impl_7_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_7_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_7_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_7_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_7_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_7_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_7_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_7_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_7_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_7_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_7_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_7
}
set obj [get_report_configs -of_objects [get_runs impl_7] impl_7_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_7]
set_property -name "needs_refresh" -value "1" -objects $obj
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fpga/git/CESAT_Characterisation/scripts/origBuild/C:/Pentek/FDK/2020.2/p6003_2_47/p6003_2.srcs/utils_1/imports/impl_7" -objects $obj
set_property -name "strategy" -value "Performance_NetDelay_low" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_low" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.tcl.pre" -value "$proj_dir//home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/bitworkaround.tcl" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_8' run (if not found)
if {[string equal [get_runs -quiet impl_8] ""]} {
    create_run -name impl_8 -part xczu47dr-ffvg1517-1-i -flow {Vivado Implementation 2020} -strategy "Performance_ExplorePostRoutePhysOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExplorePostRoutePhysOpt" [get_runs impl_8]
  set_property flow "Vivado Implementation 2020" [get_runs impl_8]
}
set obj [get_runs impl_8]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_8_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_8_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_8_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_io_0] "" ] } {
  create_report_config -report_name impl_8_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_8_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_8_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_8_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_8_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_8_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_8_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_8_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_8_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_8_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_8_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_8_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_power_0] "" ] } {
  create_report_config -report_name impl_8_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_8_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_8_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_8_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_8_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_8_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_8_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_8_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_8_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_8_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_8_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_8
}
set obj [get_report_configs -of_objects [get_runs impl_8] impl_8_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_8]
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fpga/git/CESAT_Characterisation/scripts/origBuild/C:/Pentek/FDK/2020.2/p6003_2_47/p6003_2.srcs/utils_1/imports/impl_8" -objects $obj
set_property -name "strategy" -value "Performance_ExplorePostRoutePhysOpt" -objects $obj
set_property -name "steps.opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.place_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.more options" -value "-tns_cleanup" -objects $obj
set_property -name "steps.post_route_phys_opt_design.is_enabled" -value "1" -objects $obj
set_property -name "steps.post_route_phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# Create 'impl_9' run (if not found)
if {[string equal [get_runs -quiet impl_9] ""]} {
    create_run -name impl_9 -part xczu47dr-ffvg1517-1-i -flow {Vivado Implementation 2020} -strategy "Performance_NetDelay_high" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_NetDelay_high" [get_runs impl_9]
  set_property flow "Vivado Implementation 2020" [get_runs impl_9]
}
set obj [get_runs impl_9]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_9_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_9_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_9_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_io_0] "" ] } {
  create_report_config -report_name impl_9_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_9_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_9_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_9_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_9_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_9_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_9_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_9_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_9_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_9_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_9_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_9_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_power_0] "" ] } {
  create_report_config -report_name impl_9_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_9_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj

}
# Create 'impl_9_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_9_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_9_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_9_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_9_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_9_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_9_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_9_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_9_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_9
}
set obj [get_report_configs -of_objects [get_runs impl_9] impl_9_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_9]
set_property -name "part" -value "xczu47dr-ffvg1517-1-i" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "/home/fpga/git/CESAT_Characterisation/scripts/origBuild/C:/Pentek/FDK/2020.2/p6003_2_47/p6003_2.srcs/utils_1/imports/impl_9" -objects $obj
set_property -name "strategy" -value "Performance_NetDelay_high" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraNetDelay_high" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "AggressiveExplore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.tcl.pre" -value "$proj_dir//home/fpga/Pentek/fdk/2020.2/p6003_2_47_151/bitworkaround.tcl" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_7]

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1
